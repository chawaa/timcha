{"version":3,"sources":["components/ViewOnGithubButton/ViewOnGithubButton.js","components/GithubLoginButton/GithubLoginButton.js","components/ImageGrid/ImageGrid.js","pages/LoadingPage/LoadingPage.js","components/App/App.js","utils/linkifyUtils.js","redux/socket/socketTypes.js","services/authenticationServices.js","redux/user/userSelectors.js","redux/modal/modalTypes.js","redux/notification/notificationSelectors.js","components/ChangeAvatarButton/ChangeAvatarButton.js","redux/user/userTypes.js","components/Comment/Comment.js","components/UsersList/usersListReducer.js","services/feedServices.js","redux/feed/feedActions.js","components/LoginCard/LoginCard.js","components/Notification/NotificationFeed/NotificationFeed.js","components/UnfollowPrompt/UnfollowPrompt.js","components/Header/Header.js","components/Notification/NotificationButton/NotificationPopup/NotificationPopup.js","components/Modal/Modal.js","components/Alert/Alert.js","components/Comment/CommentReply/CommentReply.js","components/FormTextarea/FormTextarea.js","components/SearchSuggestion/SearchSuggestion.js","components/Feed/FeedBottom/FeedBottom.js","components/FilterSelector/FilterSelector.js","components/Footer/Footer.js","components/MobileNav/MobileNav.js","components/NewPost/NewPostForm/NewPostForm.js","components/NewPost/NewPostFilter/NewPostFilter.js","components/Suggestion/SuggestionCard/SuggestionCard.js","assets/svg/logo-camera.svg","hooks/useSearchUsersDebounced.js","redux/store.js","components/Button/TextButton/TextButton.js","redux/user/userReducer.js","redux/modal/modalReducer.js","redux/alert/alertReducer.js","redux/socket/socketReducer.js","redux/notification/notificationReducer.js","redux/feed/feedReducer.js","redux/rootReducer.js","redux/socket/socketActions.js","services/socketService.js","components/Button/Button.js","redux/feed/feedSelectors.js","components/SettingsButton/SettingsButton.js","components/ChangePasswordForm/ChangePasswordForm.js","components/EditProfileForm/EditProfileForm.js","components/Feed/Feed.js","components/Footer/SmallFooter/SmallFooter.js","components/HashtagPosts/HashtagPosts.js","components/NewPost/NewPost.js","components/ProfileCategory/ProfileCategory.js","components/SignUpCard/SignUpCard.js","components/SuggestedPosts/SuggestedPosts.js","components/Suggestion/SuggestedUsers/SuggestedUsers.js","components/UsersList/UsersList.js","components/PostDialog/PostDialogCommentForm/postDialogCommentFormReducer.js","redux/modal/modalActions.js","components/FormInput/FormInput.js","assets/img/default-avatar.png","components/App/App.test.js","components/Avatar/Avatar.js","components/SkeletonLoader/SkeletonLoader.js","utils/test/testUtils.js","components/PostDialog/postDialogReducer.js","redux/alert/alertActions.js","components/FormInput/FormInput.test.js","components/NewPost/NewPostEdit/NewPostEdit.js","components/OptionsDialog/OptionsDialog.js","components/PostDialog/PostDialog.test.js","components/PostDialog/PostDialogCommentForm/PostDialogCommentForm.test.js","components/PostDialog/PostDialogCommentForm/postDialogCommentFormReducer.test.js","services/commentService.js","components/PostDialog/PostDialogReducer.test.js","components/PostDialog/PostDialogStats/PostDialogStats.test.js","components/SettingsForm/SettingsFormGroup/SettingsFormGroup.js","redux/user/userActions.js","services/postService.js","components sync /^/.//.*$","components/Icon/Icon.js","components/UserCard/UserCard.js","redux/notification/notificationTypes.js","redux/feed/feedTypes.js","utils/validation.js","assets/svg/loader.svg","components/Loader/Loader.js","serviceWorker.js","index.js","components/Card/Card.js","components/Divider/Divider.js","components/UsersList/UsersListSkeleton/UsersListSkeleton.js","components/Header/MobileHeader/MobileHeader.js","hooks/useScrollPositionThrottled.js","services/userService.js","components/PostDialog/PostDialog.js","utils/timeUtils.js","redux/alert/alertTypes.js","components/ProtectedRoute/ProtectedRoute.js","components/Button/FollowButton/FollowButton.js","components/Icon/PulsatingIcon/PulsatingIcon.js","services/notificationServices.js","redux/notification/notificationActions.js","components/PostDialog/PostDialogCommentForm/PostDialogCommentForm.js","components/PostDialog/PostDialogStats/PostDialogStats.js","services/profileService.js","components/NewPost/NewPostButton/NewPostButton.js","components/PreviewImage/PreviewImage.js","components/SearchBox/SearchBox.js","components/PopupCard/PopupCard.js","components/Notification/NotificationButton/NotificationButton.js","components/SettingsForm/SettingsForm.js"],"names":["ViewOnGithubButton","style","textDecoration","href","target","rel","display","alignItems","justifyContent","width","inverted","marginRight","icon","GithubLoginButton","button","authState","Math","random","toString","slice","sessionStorage","setItem","window","location","origin","className","classNames","ImageGrid","children","LoadingPage","ProfilePage","lazy","PostPage","ConfirmationPage","SettingsPage","ActivityPage","LoginPage","SignUpPage","HomePage","NewPostPage","ExplorePage","NotFoundPage","UnconnectedApp","signInStart","modal","alert","currentUser","connectSocket","fetchNotificationsStart","token","localStorage","getItem","pathname","useHistory","useEffect","transitions","useTransition","showAlert","from","transform","enter","leave","config","tension","friction","data-test","fallback","Header","modals","length","document","querySelector","setAttribute","map","idx","Modal","key","component","props","renderModals","item","Alert","onClick","text","path","ProtectedRoute","exact","Footer","MobileNav","connect","state","selectCurrentUser","dispatch","usernameOrEmail","password","authToken","linkifyOptions","formatHref","type","substring","attributes","url","socketTypes","CONNECT","DISCONNECT","login","a","request","data","headers","authorization","axios","method","response","Error","error","githubAuthentication","code","post","registerUser","email","fullName","username","changePassword","oldPassword","newPassword","put","selectUser","user","createSelector","selectError","selectToken","selectFetching","fetching","selectFetchingAvatar","fetchingAvatar","selectUpdatingProfile","updatingProfile","modalTypes","SHOW_MODAL","HIDE_MODAL","selectNotificationsObject","notifications","selectNotifications","selectNotificationState","mapStateToProps","createStructuredSelector","changeAvatarStart","image","removeAvatarStart","showModal","avatar","inputRef","useRef","changeAvatar","event","remove","files","cursor","position","preventDefault","options","current","click","warning","handleClick","id","accept","ref","onChange","userTypes","SIGN_IN_START","SIGN_IN_FAILURE","SIGN_IN_SUCCESS","SIGN_OUT","SIGN_UP_START","SIGN_UP_FAILURE","GITHUB_SIGN_IN_START","GITHUB_SIGN_IN_FAILURE","GITHUB_SIGN_IN_SUCCESS","BOOKMARK_POST","CHANGE_AVATAR_START","CHANGE_AVATAR_SUCCESS","CHANGE_AVATAR_FAILURE","REMOVE_AVATAR_START","REMOVE_AVATAR_SUCCESS","REMOVE_AVATAR_FAILURE","UPDATE_PROFILE_START","UPDATE_PROFILE_FAILURE","UPDATE_PROFILE_SUCCESS","mention","linkify","hashtag","hideModal","comment","caption","simple","dialogDispatch","profileDispatch","commentRef","useState","formatDateDistance","date","commentPostTime","setCommentPostTime","toggleCommentReplies","setToggleCommentReplies","author","commentReplies","filter","commentReply","parentComment","_id","sort","b","Date","commentPostTimeInterval","setInterval","clearInterval","handleVote","payload","commentId","voteComment","handleGetCommentReplies","previous","getCommentReplies","replies","parentCommentId","handleDeleteComment","decrementCount","postId","deleteComment","commentClassNames","to","size","imageSrc","color","message","height","commentVotes","commentData","commentCount","marginTop","toggle","find","vote","constantProps","toggledProps","elementRef","INITIAL_STATE","fetchingAdditional","usersListReducer","action","retrieveFeedPosts","offset","get","fetchFeedPostsStart","feedTypes","FETCH_POSTS_START","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","addPost","ADD_POST","removePost","REMOVE_POST","clearPosts","CLEAR_POSTS","setEmail","setPassword","padding","onSubmit","handleSubmit","placeholder","e","value","required","disabled","loading","darkBlue","small","medium","blue","bold","notificationState","readNotificationsStart","clearNotifications","setShowNotifications","notification","userCardProps","sender","subTextDark","minHeight","userCardChild","notificationType","subText","following","isFollowing","userId","notificationData","src","alt","UnfollowPrompt","memo","shouldMinimizeHeader","setShouldMinimizeHeader","useScrollPositionThrottled","currentScrollPosition","outerWidth","headerClassNames","header","whyDidYouRender","NotificationPopup","newFollowers","newLikes","newComments","forEach","read","renderIcons","number","div","additionalProps","modalRoot","el","createElement","Child","require","default","hide","contains","addEventListener","appendChild","removeEventListener","removeChild","ReactDOM","createPortal","CommentReply","commentReplyRef","handleCommentReplyVote","commentReplyId","voteCommentReply","handleCommentReplyDelete","deleteCommentReply","marginLeft","commentReplyVotes","FormTextarea","fieldProps","SearchSuggestion","result","additionalUsers","setAdditionalUsers","shouldFetch","setShouldFetch","fetchingAdditionalUsers","setFetchingAdditionalUsers","componentRef","atBottom","searchUsers","users","renderUserCard","FeedBottom","FilterSelector","setFilter","filters","previewImage","filterSelectorRef","selectedFilter","setSelectedFilter","name","amount","skeleton","i","push","animated","renderSkeleton","ViewOnBeianButton","border","ViewOnartstation","margin","plusIcon","mobile","file","back","setCaption","setLoading","history","formData","FormData","append","set","JSON","stringify","crop","filterName","createPost","show","fontSize","NewPostFilter","setPreviewImage","objectFit","SuggestionCard","posts","thumbnail","_style","_g","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogoCamera","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","d","ForwardRef","useSearchUsersDebounced","setResult","setFetching","handleSearch","string","handleSearchDebounced","debounce","handleSearchDebouncedRef","middlewares","thunk","store","createStore","rootReducer","applyMiddleware","TextButton","large","textButtonClassNames","ClassNames","userReducer","operation","bookmarks","parse","bookmark","additionalKeys","modalReducer","modifiedModals","timeoutId","alertReducer","alertTypes","SHOW_ALERT","HIDE_ALERT","SET_ALERT_TIMEOUT_ID","INTIAL_STATE","socket","socketReducer","disconnect","unreadCount","notificationReducer","notificationTypes","ADD_NOTIFICATION","FETCH_NOTIFICATIONS_START","FETCH_NOTIFICATIONS_FAILURE","FETCH_NOTIFICATIONS_SUCCESS","READ_NOTIFICATIONS","CLEAR_NOTIFICATIONS","hasMore","feedReducer","postIndex","findIndex","splice","combineReducers","feed","io","query","on","addNotification","disconnectSocket","Button","buttonClasses","selectFeed","selectFeedPosts","selectFeedFetching","selectHasMore","signOut","setOldPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","newPasswordError","validatePassword","textAlign","updateProfileStart","updates","formik","useFormik","initialValues","bio","website","validate","values","errors","emailError","validateEmail","fullNameError","validateFullName","usernameError","validateUsername","bioError","validateBio","websiteError","validateWebsite","alignSelf","lineHeight","getFieldProps","touched","isValid","feedPosts","feedFetching","postData","SmallFooter","link","textTransform","HashtagPosts","postCount","setPosts","useParams","retrievePosts","getHashtagPosts","retrievePostsRef","backArrow","justifySelf","likes","postVotes","comments","NewPost","activeSection","setActiveSection","setFilters","reader","FileReader","readAsDataURL","onload","URL","revokeObjectURL","getPostFilters","console","warn","renderSections","ProfileCategory","category","signUpStart","passwordError","field","valid","submitCount","SuggestedPosts","search","setSearch","getSuggestedPosts","gridTemplateColumns","gridColumnGap","gridColumn","disptach","card","max","setUsers","getSuggestedUsers","renderUsers","UsersList","followingCount","followersCount","useReducer","count","retrieveUserFollowing","retrieveUserFollowers","stateRef","followingRef","overflowY","posting","postDialogCommentFormReducer","componentName","FormInput","inputType","setInputType","marginBottom","setup","shallow","describe","test","wrapper","findByTestAttribute","expect","exists","toBeTruthy","Avatar","avatarClasses","SkeletonLoader","storeFactory","initialState","attributeName","checkProps","Component","expectedProps","checkPropTypes","propTypes","replying","localStateComments","Set","postDialogReducer","votes","commentIndex","Array","isArray","add","has","delete","newComment","parentCommentIndex","commentReplyIndex","commentUser","hideAlert","getState","clearTimeout","timeout","setTimeout","defaultProps","jest","fn","initialProps","setupProps","toBeUndefined","NewPostEdit","unit","aspect","isCropping","imageState","setImageState","imageRef","getCroppedImg","canvas","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","Promise","resolve","reject","toBlob","blob","fileUrl","createObjectURL","makeClientCrop","croppedImageUrl","percentCrop","onImageLoaded","onDragStart","imageStyle","ruleOfThirds","OptionsDialog","cancelButton","opacity","mass","option","buttonClassNames","stopPropagation","nativeEvent","stopImmediatePropagation","INITIAL_PROPS","dive","toBe","toEqual","PostDialog","mock","commentsRef","PostDialogCommentForm","beforeEach","createComment","mockClear","mockResolvedValue","simulate","toHaveBeenCalledTimes","assertions","now","form","newState","mockDispatch","toThrow","createCommentReply","getComments","exclude","seededState","dispatchMock","undefined","mockCurrentUser","bookmarkPost","PostDialogStats","SettingsFormGroup","removeItem","err","githubSignInStart","removeAvatar","updateProfile","getPost","getPosts","votePost","deletePost","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","Icon","iconClassNames","avatarMedium","avatarClassNames","match","_g2","_g3","_g4","_g5","_g6","_g7","_g8","SvgLoader","background","shapeRendering","preserveAspectRatio","cx","cy","r","fill","fillOpacity","begin","keyTimes","dur","repeatCount","Loader","Boolean","hostname","render","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","Card","cardClassNames","Divider","UsersListSkeleton","borderRadius","flexDirection","goBack","getCurrentScrollPosition","element","scrollTop","callback","deps","currentElement","documentElement","scrollPosition","handleScrollThrottled","throttle","scrollHeight","clientHeight","confirmUser","confirmationToken","pushState","prevUrl","fetchAdditionalComments","handleDeletePost","data-src","zIndex","class","clipboard","writeText","endDate","duration","formatDistanceStrict","split","join","formatDate","format","setIsFollowing","follow","followUser","PulsatingIcon","immediate","retrieveNotifications","readNotifications","setMention","commentInputRef","focus","RegExp","replace","postDialogStatsClassNames","getUserProfile","setFile","fileInputRef","htmlFor","PreviewImage","SearchBox","setQuery","PopupCard","leftAlign","listStyleType","maxHeight","backgroundColor","showNotifications","showNotificationPopup","setShowNotificationPopup","notificationPopupTimeout","setShowNotificationPopupTimeout","SettingsForm"],"mappings":"0GAAA,0CA2BeA,UAtBY,kBACzB,uBACEC,MAAO,CAAEC,eAAgB,QACzBC,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,UAAD,CACEJ,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,QAETC,UAAQ,GAER,kBAAC,UAAD,CAAMT,MAAO,CAAEU,YAAa,QAAUC,KAAK,gBAT7C,qB,iCCZJ,mDAiCeC,UA5BW,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQb,EAAY,EAAZA,MAC7Bc,EAAYC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAGnD,OAFAC,eAAeC,QAAQ,YAAaN,GAGlC,uBACEZ,KAAI,6DAGE,uBAHF,yBAKFmB,OAAOC,SAASC,OALd,wBAMYT,EANZ,qBAOJU,UAAWC,IAAW,CAAE,uBAAuB,EAAMZ,WACrDb,MAAOA,GAEP,kBAAC,UAAD,CACEA,MAAO,CAAEU,YAAa,QACtBC,KAAK,cACLa,UAAWC,IAAW,CAAE,cAAeZ,MAEzC,wBAAIW,UAAWC,IAAW,CAAE,aAAa,EAAM,cAAeZ,KAA9D,yB,iCC1BN,2BAMea,UAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,yBAAKH,UAAU,cAAcG,K,iOCOhBC,EANK,kBAClB,0BAAMJ,UAAU,gBACd,kBAAC,IAAD,QCYEK,EAAcC,gBAAK,kBAAM,iCACzBC,EAAWD,gBAAK,kBAAM,kCACtBE,EAAmBF,gBAAK,kBAC5B,iCAEIG,EAAeH,gBAAK,kBACxB,kCAEII,EAAeJ,gBAAK,kBACxB,iCAEIK,EAAYL,gBAAK,kBAAM,iCACvBM,EAAaN,gBAAK,kBAAM,kCACxBO,EAAWP,gBAAK,kBAAM,iCACtBQ,EAAcR,gBAAK,kBAAM,iCACzBS,EAAcT,gBAAK,kBAAM,iCACzBU,EAAeV,gBAAK,kBACxB,kCAGK,SAASW,EAAT,GAOH,IANFC,EAMC,EANDA,YACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,cACAC,EACC,EADDA,wBAEMC,EAAQC,aAAaC,QAAQ,SAErBC,EACVC,cADF9B,SAAY6B,SAGdE,qBAAU,WACJL,IACFN,EAAY,KAAM,KAAMM,GACxBF,IACAC,EAAwBC,MAEzB,CAACN,EAAaI,EAAeC,EAAyBC,IAEzD,IAYMM,EAAcC,YAAcX,EAAMY,UAAW,KAAM,CACvDC,KAAM,CACJC,UAAW,oBAEbC,MAAO,CACLD,UAAW,oBAEbE,MAAO,CACLF,UAAW,oBAEbG,OAAQ,CACNC,QAAS,IACTC,SAAU,MA2Cd,OACE,yBAAKvC,UAAU,MAAMwC,YAAU,iBAC7B,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,QAvCjBpB,GAAeG,EACX,kBAAC,EAAD,MAGP,kBAAC,WAAD,KACgB,WAAbG,GAAsC,YAAbA,GAA0B,kBAACe,EAAA,QAAD,MAnCrC,WACnB,GAAIvB,EAAMwB,OAAOC,OAAS,EAGxB,OADAC,SAASC,cAAc,QAAQC,aAAa,QAAS,qBAC9C5B,EAAMwB,OAAOK,KAAI,SAAC7B,EAAO8B,GAAR,OACtB,kBAACC,EAAA,QAAD,eAAOC,IAAKF,EAAKG,UAAWjC,EAAMiC,WAAejC,EAAMkC,WAGzDR,SAASC,cAAc,QAAQC,aAAa,QAAS,IA4BlDO,GACAxB,EAAYkB,KACX,gBAAGO,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAOF,EAAhB,EAAgBA,IAAhB,OACEI,GACE,kBAACC,EAAA,QAAD,CAAOL,IAAKA,EAAK3E,MAAO6E,EAAOI,QAASrC,EAAMqC,SAC3CrC,EAAMsC,SAIf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASP,UAAWzC,IAChC,kBAAC,IAAD,CAAOgD,KAAK,UAAUP,UAAWxC,IACjC,kBAACgD,EAAA,QAAD,CAAgBC,OAAK,EAACF,KAAK,IAAIP,UAAWvC,IAC1C,kBAAC+C,EAAA,QAAD,CAAgBD,KAAK,YAAYP,UAAW3C,IAC5C,kBAACmD,EAAA,QAAD,CAAgBD,KAAK,YAAYP,UAAW1C,IAC5C,kBAACkD,EAAA,QAAD,CAAgBD,KAAK,OAAOP,UAAWtC,IACvC,kBAAC8C,EAAA,QAAD,CAAgBD,KAAK,WAAWP,UAAWrC,IAC3C,kBAAC,IAAD,CAAO8C,OAAK,EAACF,KAAK,aAAaP,UAAW/C,IAC1C,kBAAC,IAAD,CAAOsD,KAAK,gBAAgBP,UAAW7C,IACvC,kBAACqD,EAAA,QAAD,CAAgBD,KAAK,kBAAkBP,UAAW5C,IAClD,kBAAC,IAAD,CAAO4C,UAAWpC,KAEN,MAAbW,GAAoB,kBAACmC,EAAA,QAAD,MACP,WAAbnC,GACc,YAAbA,GACa,SAAbA,GACAN,GAAe,kBAAC0C,EAAA,QAAD,CAAW1C,YAAaA,OAyBlC2C,uBAbS,SAACC,GAAD,MAAY,CAClC9C,MAAO8C,EAAM9C,MACbC,MAAO6C,EAAM7C,MACbC,YAAa6C,YAAkBD,OAGN,SAACE,GAAD,MAAe,CACxCjD,YAAa,SAACkD,EAAiBC,EAAU7C,GAA5B,OACX2C,EAASjD,YAAYkD,EAAiBC,EAAU7C,KAClDF,cAAe,kBAAM6C,EAAS7C,gBAC9BC,wBAAyB,SAAC+C,GAAD,OACvBH,EAAS5C,YAAwB+C,QAEtBN,CAA6C/C,I,iCClJ5D,kCAAO,IAAMsD,EAAiB,CAC5BC,WAAY,SAAU9F,EAAM+F,GAO1B,MANa,YAATA,IACF/F,EAAO,iBAAmBA,EAAKgG,UAAU,IAE9B,YAATD,IACF/F,EAAO,IAAMA,EAAKgG,UAAU,IAEvBhG,GAETsB,UAAW,cACX2E,WAAY,CACVhG,OAAQ,CACNiG,IAAK,a,iCCRIC,IALK,CAClBC,QAAS,UACTC,WAAY,e,4NCQDC,EAAK,uCAAG,WAAOZ,EAAiBC,EAAUC,GAAlC,iBAAAW,EAAA,sEAEXC,EACJd,GAAmBC,EACf,CAAEc,KAAM,CAAEf,kBAAiBC,aAC3B,CAAEe,QAAS,CAAEC,cAAef,IALjB,SAMMgB,IAAM,kBAAD,aAC1BC,OAAQ,QACLL,IARY,cAMXM,EANW,yBAUVA,EAASL,MAVC,sCAYX,IAAIM,MAAM,KAAID,SAASL,KAAKO,OAZjB,yDAAH,0DAsBLC,EAAoB,uCAAG,WAAOC,GAAP,eAAAX,EAAA,+EAETK,IAAMO,KAAK,yBAA0B,CAC1DD,OACA3B,MAAOtE,eAAe+B,QAAQ,eAJA,cAE1B8D,EAF0B,yBAMzBA,EAASL,MANgB,sCAQ1B,IAAIM,MAAM,KAAID,SAASL,KAAKO,OARF,yDAAH,sDAoBpBI,EAAY,uCAAG,WAAOC,EAAOC,EAAUC,EAAU5B,GAAlC,eAAAY,EAAA,+EAEDK,IAAMO,KAAK,qBAAsB,CACtDE,QACAC,WACAC,WACA5B,aANsB,cAElBmB,EAFkB,yBAQjBA,EAASL,MARQ,sCAUlB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OAVV,yDAAH,4DAqBZQ,EAAc,uCAAG,WAAOC,EAAaC,EAAa9B,GAAjC,SAAAW,EAAA,+EAEpBK,IAAMe,IACV,qBACA,CACEF,cACAC,eAEF,CACEhB,QAAS,CACPC,cAAef,KAVK,4DAepB,IAAImB,MAAM,KAAID,SAASL,KAAKO,OAfR,wDAAH,2D,gCCzE3B,uNAEMY,EAAa,SAACrC,GAAD,OAAWA,EAAMsC,MAEvBrC,EAAoBsC,YAC/B,CAACF,IACD,SAACC,GAAD,OAAUA,EAAKlF,eAGJoF,EAAcD,YAAe,CAACF,IAAa,SAACC,GAAD,OAAUA,EAAKb,SAE1DgB,EAAcF,YAAe,CAACF,IAAa,SAACC,GAAD,OAAUA,EAAK/E,SAE1DmF,EAAiBH,YAC5B,CAACF,IACD,SAACC,GAAD,OAAUA,EAAKK,YAGJC,EAAuBL,YAClC,CAACF,IACD,SAACC,GAAD,OAAUA,EAAKO,kBAGJC,EAAwBP,YACnC,CAACF,IACD,SAACC,GAAD,OAAUA,EAAKS,oB,iCCpBFC,IALI,CACjBC,WAAY,aACZC,WAAY,e,iCCFd,+EAEMC,EAA4B,SAACnD,GAAD,OAAWA,EAAMoD,eAEtCC,EAAsBd,YACjC,CAACY,IACD,SAACC,GAAD,OAAmBA,EAAcA,iBAGtBE,EAA0Bf,YACrC,CAACY,IACD,SAACC,GAAD,OAAmBA,M,iICwFfG,EAAkBC,YAAyB,CAC/CpG,YAAa6C,IACb1C,MAAOkF,IACPI,eAAgBD,IAChBnB,MAAOe,MAGMzC,sBAAQwD,GAfI,SAACrD,GAAD,MAAe,CACxCuD,kBAAmB,SAACC,EAAOrD,GAAR,OACjBH,EAASuD,YAAkBC,EAAOrD,KACpCsD,kBAAmB,SAACtD,GAAD,OAAeH,EAASyD,YAAkBtD,KAC7DuD,UAAW,SAACxE,EAAOD,GAAR,OAAsBe,EAAS0D,YAAUxE,EAAOD,KAC3DpB,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,QAU1CO,EAzFY,SAAC,GASrB,IARL7D,EAQI,EARJA,SACAuH,EAOI,EAPJA,kBACAE,EAMI,EANJA,kBACeE,EAKX,EALJzG,YAAeyG,OACfD,EAII,EAJJA,UACA7F,EAGI,EAHJA,UACAR,EAEI,EAFJA,MACAkE,EACI,EADJA,MAEMqC,EAAWC,mBAEjBnG,qBAAU,WACJ6D,GACF1D,EAAU0D,KAEX,CAACA,EAAO1D,IAEX,IA4BMiG,EAAY,uCAAG,WAAOC,EAAOC,GAAd,SAAAlD,EAAA,0DACnBkD,EADmB,gCAETP,EAAkBpG,GAFT,6CAGTkG,EAAkBQ,EAAMvJ,OAAOyJ,MAAM,GAAI5G,GAHhC,OAIdkE,GAAO1D,EAAU,4BAJH,2CAAH,wDAOlB,OACE,kBAAC,WAAD,KACE,2BACEhC,UAAU,iCACVxB,MAAO,CAAE6J,OAAQ,UAAWC,SAAU,YACtC7E,QAAS,SAACyE,GAAD,OAxCK,SAACA,GACnB,GAAIJ,EAEF,OADAI,EAAMK,iBACCV,EACL,CACEW,QAAS,CACP,CACE9E,KAAM,eACN1D,UAAW,uBACXyD,QAAS,WACPsE,EAASU,QAAQC,UAGrB,CACEC,SAAS,EACTjF,KAAM,uBACND,QAAS,WACPwE,EAAa,MAAM,OAK3B,+BAGJF,EAASU,QAAQC,QAeOE,CAAYV,KAEhC,kBAAC,WAAD,KAAW/H,GAAsB,yBAEnC,2BACE0I,GAAG,gBACHpE,KAAK,OACLqE,OAAO,UACPtK,MAAO,CAAEK,QAAS,QAClBkK,IAAKhB,EACLiB,SAAU,SAACd,GAAD,OAAWD,EAAaC,W,gCC/D3Be,IAtBG,CAChBC,cAAe,gBACfC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,SAAU,WACVC,cAAe,gBACfC,gBAAiB,kBACjBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,uBAAwB,yBACxBC,cAAe,gBACfC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,sBAAuB,wBACvBC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,sBAAuB,wBACvBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,uBAAwB,2B,gQCS1BC,IAAQC,GACRC,IAAQD,GA6ROtG,sBAAQ,MAtBI,SAACG,GAAD,MAAe,CACxCqG,UAAW,SAACpH,GAAD,OAAee,EAASqG,YAAUpH,KAC7CyE,UAAW,SAACxE,EAAOD,GAAR,OAAsBe,EAAS0D,YAAUxE,EAAOD,KAC3DpB,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,QAmB1CO,EA3RC,SAAC,GAYV,IAXLyG,EAWI,EAXJA,QACAC,EAUI,EAVJA,QACAC,EASI,EATJA,OACA9E,EAQI,EARJA,KACArE,EAOI,EAPJA,MACAH,EAMI,EANJA,YACAuJ,EAKI,EALJA,eACAC,EAII,EAJJA,gBACAhD,EAGI,EAHJA,UACA2C,EAEI,EAFJA,UACAxI,EACI,EADJA,UAEM8I,EAAa9C,mBADf,EAE0C+C,oBAAS,kBACrDC,YAAmBN,EAAU7E,EAAKoF,KAAOR,EAAQQ,SAH/C,mBAEGC,EAFH,KAEoBC,EAFpB,OAKoDJ,oBAAS,GAL7D,mBAKGK,EALH,KAKyBC,EALzB,KAMEC,EAASZ,EAAUD,EAAUA,EAAQa,OAErCC,EACJ1F,EAAK0F,eACFC,QAAO,SAACC,GAAD,OAAkBA,EAAaC,gBAAkBjB,EAAQkB,OAChEC,MAAK,SAAC3G,EAAG4G,GACR,OAAO,IAAIC,KAAK7G,GAAK,IAAI6G,KAAKD,OAC1B,GAEVhK,qBAAU,WACR,IAAMkK,EAA0BC,aAAY,WAC1Cb,EACEH,YAAmBN,EAAU7E,EAAKoF,KAAOR,EAAQQ,SAElD,KACH,OAAO,kBAAMgB,cAAcF,MAC1B,CAACZ,EAAoBT,EAASD,EAAS5E,IAE1C,IAAMqG,EAAU,uCAAG,sBAAAjH,EAAA,sEAEf2F,GACEA,EAAe,CACbnG,KAAM,eACN0H,QAAS,CAAEC,UAAW3B,EAAQkB,IAAKtK,iBALxB,SAOTgL,YAAY5B,EAAQkB,IAAKnK,GAPhB,sDASfQ,EAAU,kCAAkC,kBAAMkK,OATnC,wDAAH,qDAaVI,EAAuB,uCAAG,4BAAArH,EAAA,yDAC1BsG,EAAe3I,SAAW6H,EAAQc,eADR,gBAE5BF,GAAwB,SAACkB,GAAD,OAAeA,KAFX,gDAKJC,YACpB/B,EAAQkB,IACRJ,EAAe3I,OAAS,EAAI2I,EAAe3I,OAAS,GAP5B,OAKpB6J,EALoB,OAS1B7B,EAAe,CACbnG,KAAM,oBACN0H,QAAS,CAAE1B,QAASgC,EAASC,gBAAiBjC,EAAQkB,QAEvDP,GAAwBC,GAAwB,GAbvB,kDAe1BrJ,EAAU,wCAAwC,kBAChDsK,OAhBwB,0DAAH,qDAsBvBK,EAAmB,uCAAG,sBAAA1H,EAAA,sEAExB2F,EAAe,CAAEnG,KAAM,iBAAkB0H,QAAS1B,EAAQkB,MAC1Dd,GACEA,EAAgB,CACdpG,KAAM,gCACN0H,QAAS,CACPS,eAAgBnC,EAAQc,eACpB,EAAId,EAAQc,eACZ,EACJsB,OAAQhH,EAAK8F,OAVK,SAalBmB,YAAcrC,EAAQkB,IAAKnK,GAbT,uDAexBQ,EAAU,6BAA6B,kBAAM2K,OAfrB,yDAAH,qDA8BnBI,EAAoB9M,IAAW,CACnCwK,SAAS,EACT,kBAAmBE,IAGrB,OACE,kBAAC,WAAD,KACE,yBAAK3K,UAAW+M,EAAmBhE,IAAK+B,GACtC,kBAAC,IAAD,CACErH,QAAS,kBAAM+G,EAAU,eACzBwC,GAAE,WAAM1B,EAAOrF,WAEf,kBAAC,UAAD,CACEgH,KAAK,OACLC,SAAU5B,EAAOxD,OACjB9H,UAAU,mBAGd,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,aACX,kBAAC,IAAD,CACEyD,QAAS,kBAAM+G,EAAU,eACzBhM,MAAO,CACLC,eAAgB,OAChB0O,MAAO,eACPjO,YAAa,OAEf8N,GAAE,WAAM1B,EAAOrF,WAEf,2BAAIqF,EAAOrF,WAEb,kBAAC,IAAD,CAASuC,QAASjE,KAAiBkG,EAAQ2C,WAE3C1C,GACFrJ,GACAiK,EAAOrF,WAAa5E,EAAY4E,SAC9B,yBACExC,QAAS,kBACPoE,EACE,CACEW,QAAS,CACP,CACEG,SAAS,EACTjF,KAAM,SACND,QAAS,kBAAMkJ,QAIrB,gCAGJ3M,UAAU,qBACVxB,MAAO,CAAEU,YAAa,MAEtB,kBAAC,UAAD,CACEc,UAAU,sCACVb,KAAK,sBACLX,MAAO,CAAE6O,OAAQ,WAGnB,KACJ,yBAAKrN,UAAU,kBACb,uBAAGA,UAAU,yBAAyBkL,IACpCR,GACA,kBAAC,WAAD,KACGD,EAAQ6C,aAAa1K,OAAS,GAC7B,uBAAG5C,UAAU,yBACVyK,EAAQ6C,aAAa1K,OAAQ,IACG,IAAhC6H,EAAQ6C,aAAa1K,OAAe,OAAS,SAGlD,4BACEa,QAAS,kBAEPmH,EAAe,CACbnG,KAAM,eACN0H,QAAS,CACPlG,SAAUwE,EAAQa,OAAOrF,SACzBmG,UAAW3B,EAAQkB,QAIzB3L,UAAU,yCAXZ,WAkBL0K,GAAW7E,EAAK0H,YACf,kBAAC,IAAD,CACEvN,UAAU,mCACVxB,MAAO,CAAEC,eAAgB,QACzBuO,GAAE,gBAAWnH,EAAK8F,MAHpB,YAKY9F,EAAK0H,YAAYC,aAL7B,aAOE,KACH5C,IAAmBF,GAAWD,EAAQc,eAAiB,EACtD,uBACE9H,QAAS,kBAAM6I,KACf9N,MAAO,CACLK,QAAS,OACTC,WAAY,SACZ2O,UAAW,QAEbzN,UAAU,yCAEV,0BAAMA,UAAU,eAtHtBuL,EAAe3I,SAAW6H,EAAQc,eAChCH,EACK,eAEH,iBAAN,OAAwBX,EAAQc,eAAhC,KACSA,EAAe3I,OAAS6H,EAAQc,eACnC,iBAAN,OAAwBd,EAAQc,eAAiBA,EAAe3I,OAAhE,UADK,GAqHG,OAEJ8H,GACA,yBAAK1K,UAAU,iBACZqB,EACC,kBAAC,UAAD,CACEqM,SACIjD,EAAQ6C,aAAaK,MACrB,SAACC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAG1CkC,cAAe,CACbpK,QAAS,kBAAMyI,MAEjB4B,aAAc,CACZ,CAAE3O,KAAM,QAASa,UAAW,wBAC5B,CAAEb,KAAM,gBAAiBa,UAAW,eAEtC+N,WAAYjD,IAGd,kBAAC,UAAD,CAAM3L,KAAK,gBAAgBa,UAAU,iBAM5CoL,EACGG,EAAevI,KAAI,SAACyI,EAAcxI,GAAf,OACjB,kBAAC,UAAD,CACEwH,QAASgB,EACTC,cAAejB,EACf5E,KAAMA,EACNrE,MAAOA,EACPH,YAAaA,EACbuJ,eAAgBA,EAChBC,gBAAiBA,EACjBhD,UAAWA,EACX2C,UAAWA,EACXxI,UAAWA,EACXmB,IAAKF,OAGT,U,0JC/RG+K,EAAgB,CAC3BpH,UAAU,EACVqH,oBAAoB,EACpBvI,OAAO,EACPP,KAAM,MAGK+I,EAAmB,SAACjK,EAAOkK,GACtC,OAAQA,EAAO1J,MACb,IAAK,cACH,OAAO,2BAAKR,GAAZ,IAAmB2C,UAAU,EAAMlB,OAAO,IAE5C,IAAK,yBACH,OAAO,2BACFzB,GADL,IAEE2C,UAAU,EACVlB,OAAO,EACPuI,oBAAoB,IAGxB,IAAK,gBACH,OAAO,2BACFhK,GADL,IAEE2C,UAAU,EACVqH,oBAAoB,EACpBvI,MAAOyI,EAAOhC,UAGlB,IAAK,gBACH,OAAO,2BACFlI,GADL,IAEE2C,UAAU,EACVqH,oBAAoB,EACpBvI,OAAO,EACPP,KAAMgJ,EAAOhC,UAGjB,IAAK,YACH,OAAO,2BACFlI,GADL,IAEEgK,oBAAoB,EACpB9I,KAAK,GAAD,mBAAMlB,EAAMkB,MAAZ,YAAqBgJ,EAAOhC,YAGpC,QACE,MAAM,IAAI1G,MAAJ,+BACoB0I,EAAO1J,KAD3B,4C,6NCpCC2J,EAAiB,uCAAG,WAAO9J,GAAP,6BAAAW,EAAA,6DAAkBoJ,EAAlB,+BAA2B,EAA3B,kBAEN/I,IAAMgJ,IAAN,yBAA4BD,GAAU,CAC3DjJ,QAAS,CACPC,cAAef,KAJU,cAEvBkB,EAFuB,yBAOtBA,EAASL,MAPa,sCASvB,IAAIM,MAAM,KAAID,SAASL,MATA,yDAAH,sDCLjBoJ,EAAsB,SAACjK,EAAW+J,GAAZ,8CAAuB,WAAOlK,GAAP,eAAAc,EAAA,sEAEtDd,EAAS,CAAEM,KAAM+J,IAAUC,oBAF2B,SAG/BL,EAAkB9J,EAAW+J,GAHE,OAGhD7I,EAHgD,OAItDrB,EAAS,CAAEM,KAAM+J,IAAUE,oBAAqBvC,QAAS3G,IAJH,gDAMtDrB,EAAS,CAAEM,KAAM+J,IAAUG,oBAAqBxC,QAAS,KAAIiB,UANP,yDAAvB,uDAUtBwB,EAAU,SAAC/I,GAAD,MAAW,CAChCpB,KAAM+J,IAAUK,SAChB1C,QAAStG,IAGEiJ,EAAa,SAACjC,GAAD,MAAa,CACrCpI,KAAM+J,IAAUO,YAChB5C,QAASU,IAGEmC,EAAa,iBAAO,CAC/BvK,KAAM+J,IAAUS,e,kKC0FZzH,EAAkBC,YAAyB,CAC/C/B,MAAOe,IACPG,SAAUD,IACVtF,YAAa6C,MAGAF,sBAAQwD,GAVI,SAACrD,GAAD,MAAe,CACxCjD,YAAa,SAAC6E,EAAO1B,GAAR,OAAqBF,EAASjD,YAAY6E,EAAO1B,QASjDL,EAnGG,SAAC,GAOZ,IANL9C,EAMI,EANJA,YACAwE,EAKI,EALJA,MACAkB,EAII,EAJJA,SACAvF,EAGI,EAHJA,YACAoC,EAEI,EAFJA,QACAtC,EACI,EADJA,MACI,EACsB4J,mBAAS,IAD/B,mBACGhF,EADH,KACUmJ,EADV,OAE4BnE,mBAAS,IAFrC,mBAEG1G,EAFH,KAEa8K,EAFb,KAUJ,OAFA9N,GAAeoC,IAGb,yBACEzD,UAAU,uBACVxB,MACE2C,EACI,CACEiO,QAAS,QAEX,IAGN,kBAAC,UAAD,CAAMpP,UAAU,aACd,wBAAIA,UAAU,4BAAd,cACA,0BACEqP,SAAU,SAACnH,GAAD,OArBG,SAACA,GACpBA,EAAMK,iBACNrH,EAAY6E,EAAO1B,GAmBQiL,CAAapH,IAClClI,UAAU,mBAEV,kBAAC,UAAD,CACEuP,YAAY,4BACZ9K,KAAK,OACLuE,SAAU,SAACwG,GAAD,OAAON,EAASM,EAAE7Q,OAAO8Q,QACnCC,UAAQ,IAEV,kBAAC,UAAD,CACEH,YAAY,WACZ9K,KAAK,WACLuE,SAAU,SAACwG,GAAD,OAAOL,EAAYK,EAAE7Q,OAAO8Q,QACtCC,UAAQ,IAEV,kBAAC,UAAD,CAAQC,SAAU/I,EAAUgJ,QAAShJ,GAArC,WAIF,kBAAC,UAAD,WACA,kBAAC,UAAD,MACClB,GACC,uBAAGlH,MAAO,CAAE4Q,QAAS,UAAYpP,UAAU,SACxC0F,GAGL,kBAAC,UAAD,CAAYlH,MAAO,CAAEiP,UAAW,UAAYoC,UAAQ,EAACC,OAAK,GAA1D,qBAIF,kBAAC,UAAD,KACE,6BACEtR,MAAO,CACLK,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZsQ,QAAS,SAGX,wBAAI5Q,MAAO,CAAEU,YAAa,OAASc,UAAU,uBAA7C,0BAGA,kBAAC,IAAD,CAAMgN,GAAG,UAAUvJ,QAAS,kBAAMA,GAAWA,MAC3C,kBAAC,UAAD,CAAYsM,QAAM,EAACC,MAAI,EAACC,MAAI,GAA5B,cAMN,kBAAC,UAAD,W,6NC1EN5F,IAAQC,GAER,IAyHM9C,EAAkBC,YAAyB,CAC/CJ,cAAeC,IACf4I,kBAAmB3I,IACnB/F,MAAOkF,MAWM1C,sBAAQwD,GARI,SAACrD,GAAD,MAAe,CACxC5C,wBAAyB,SAAC+C,GAAD,OACvBH,EAAS5C,YAAwB+C,KACnC6L,uBAAwB,SAAC7L,GAAD,OACtBH,EAASgM,YAAuB7L,KAClC8L,mBAAoB,kBAAMjM,EAASiM,mBAGtBpM,EAvIU,SAAC,GAQnB,IAPLqD,EAOI,EAPJA,cACA9F,EAMI,EANJA,wBACA4O,EAKI,EALJA,uBACAD,EAII,EAJJA,kBACAE,EAGI,EAHJA,mBACAC,EAEI,EAFJA,qBACA7O,EACI,EADJA,MAkBA,OAhBAK,qBAAU,WAMR,OALA,sBAAC,sBAAAoD,EAAA,sEACO1D,EAAwBC,GAD/B,uBAEO2O,EAAuB3O,GAF9B,0CAAD,GAKO,WACL4O,OAED,CACD7O,EACA4O,EACAC,EACA5O,IAIA,kBAAC,WAAD,KACG0O,EAAkBtJ,SACjB,kBAAC,UAAD,CAAmBpI,MAAO,CAAE6O,OAAQ,UAClChG,EAAczE,OAAS,EACzByE,EAAcrE,KAAI,SAACsN,EAAcrN,GAC/B,IAAMsN,EAAgB,CACpBtK,SAAUqK,EAAaE,OAAOvK,SAC9B6B,OAAQwI,EAAaE,OAAO1I,OAC5B2I,aAAa,EACbjP,MAAOA,EACPyJ,KAAMqF,EAAarF,KACnBzM,MAAO,CAAEkS,UAAW,OAAQtB,QAAS,gBAEnCuB,EAAgB,KAEpB,OAAQL,EAAaM,kBACnB,IAAK,SACHL,EAAcM,QAAU,yBACxBF,EACE,kBAAC,UAAD,CACE1K,SAAUqK,EAAaE,OAAOvK,SAC9B6B,OAAQwI,EAAaE,OAAO1I,OAC5BgJ,UAAWR,EAAaS,YACxBC,OAAQV,EAAaE,OAAO7E,MAGhC,MAEF,IAAK,OACH4E,EAAcM,QAAU,oBACxBF,EACE,kBAAC,IAAD,CAAM3D,GAAE,gBAAWsD,EAAaW,iBAAiBpE,SAC/C,yBACEqE,IAAKZ,EAAaW,iBAAiBtJ,MACnCnJ,MAAO,CACLK,QAAS,OACT2M,OAAQ8E,EAAaW,iBAAiBzF,QAExC/H,QAAS,kBACP4M,GAAwBA,GAAqB,IAE/Cc,IAAI,gBAIV,MAEF,QACEZ,EAAcM,QACZ,kBAAC,IAAD,CAASrI,QAASjE,KAAlB,UACoC,YAAlC+L,EAAaM,iBACT,aACA,8BAHN,YAIIN,EAAaW,iBAAiB7D,UAEpCuD,EACE,kBAAC,IAAD,CAAM3D,GAAE,gBAAWsD,EAAaW,iBAAiBpE,SAC/C,yBACEqE,IAAKZ,EAAaW,iBAAiBtJ,MACnCnJ,MAAO,CACLK,QAAS,OACT2M,OAAQ8E,EAAaW,iBAAiBzF,QAExC/H,QAAS,kBACP4M,GAAwBA,GAAqB,IAE/Cc,IAAI,uBAOd,OACE,wBAAIhO,IAAKF,GACP,kBAAC,UAAasN,EACXI,GAAiBA,GAEnBtJ,EAAczE,OAAS,EAAIK,GAAO,kBAAC,UAAD,UAKzC,yBAAKjD,UAAU,qBACb,kBAAC,UAAD,CAAMA,UAAU,eAAeb,KAAK,yBACpC,wBAAIa,UAAU,yBAAd,0BACA,wBAAIA,UAAU,yBAAd,6E,iCC9IV,mCAceoR,UAVQ,SAAC,GAAD,IAAGtJ,EAAH,EAAGA,OAAQ7B,EAAX,EAAWA,SAAX,OACrB,yBAAKjG,UAAU,mBACb,kBAAC,UAAD,CAAQxB,MAAO,CAAEQ,MAAO,QAASqO,OAAQ,SAAWH,SAAUpF,IAC9D,uBACEtJ,MAAO,CAAEiP,UAAW,QACpBzN,UAAU,aAFZ,oBAGeiG,EAHf,S,iLCWEvD,EAAS2O,gBAAK,YAAsB,IAAnBhQ,EAAkB,EAAlBA,YAAkB,EACiB0J,oBAAS,GAD1B,mBAChCuG,EADgC,KACVC,EADU,KAGzB5P,EACVC,cADF9B,SAAY6B,SAId6P,aAA2B,YAAgC,IAA7BC,EAA4B,EAA5BA,sBACxB5R,OAAO6R,WAAa,KACtBH,EAAwBE,EAAwB,QAIpD,IAAME,EAAmB1R,IAAW,CAClC2R,QAAQ,EACR,gBAAiBN,IAGnB,OACE,4BAAQtR,UAAW2R,GACjB,yBAAK3R,UAAU,mBACb,kBAAC,IAAD,CAAMgN,GAAG,IAAIhN,UAAU,gBACrB,yBAAKA,UAAU,sBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,gBAAd,gBAGJ,kBAAC,UAAD,MACA,yBAAKA,UAAU,iBACZqB,EACC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM2L,GAAG,YACP,kBAAC,UAAD,CACE7N,KAAmB,aAAbwC,EAA0B,UAAY,qBAGhD,kBAAC,UAAD,MACA,kBAAC,IAAD,CAAMqL,GAAI,IAAM3L,EAAY4E,UAC1B,kBAAC,UAAD,CACE9G,KACEwC,IAAa,IAAMN,EAAY4E,SAC3B,gBACA,2BAIV,kBAAC,UAAD,OAGF,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMzH,MAAO,CAAEU,YAAa,QAAU8N,GAAG,UACvC,kBAAC,UAAD,gBAEF,kBAAC,IAAD,CAAMA,GAAG,WACP,wBAAIhN,UAAU,wCAAd,mBAYhB0C,EAAOmP,iBAAkB,EAEzB,IAAMrK,EAAkBC,YAAyB,CAC/CpG,YAAa6C,MAGAF,sBAAQwD,EAARxD,CAAyBtB,I,iCC5FxC,0CA6CeoP,UAxCW,SAAC,GAA8B,IAA5BtT,EAA2B,EAA3BA,MAAO6I,EAAoB,EAApBA,cAC9B0K,EAAe,EACfC,EAAW,EACXC,EAAc,EAElB5K,EAAc6K,SAAQ,SAAC5B,GACrB,IAAKA,EAAa6B,KAChB,OAAQ7B,EAAaM,kBACnB,IAAK,SACHmB,GAAgB,EAChB,MAEF,IAAK,UACL,IAAK,UACHE,GAAe,EACf,MAEF,QACED,GAAY,MAMpB,IAAMI,EAAc,SAACjT,EAAMkT,GAAP,OAClB,6BACE,kBAAC,UAAD,CAAMrS,UAAU,cAAcb,KAAMA,IACpC,8BAAOkT,KAIX,OACE,kBAAC,IAASC,IAAV,CAActS,UAAU,6BAA6BxB,MAAOA,GACzDuT,EAAe,GAAKK,EAAY,SAAUL,GAC1CC,EAAW,GAAKI,EAAY,QAASJ,GACrCC,EAAc,GAAKG,EAAY,aAAcH,M,oGCjC9C/O,EAAQmO,gBAAK,YAAmD,IAAhDjO,EAA+C,EAA/CA,UAAWoH,EAAoC,EAApCA,UAAc+H,EAAsB,yCAC7DC,EAAY3P,SAASC,cAAc,eACnC2P,EAAK5P,SAAS6P,cAAc,OAC5BC,EAAQC,OAAQ,YAAoBxP,IAAayP,QAkBvD,OAjBAJ,EAAGzS,UAAY,aAEf6B,qBAAU,WACR,IAAMiR,EAAO,SAAC,GAAgB,IAAdnU,EAAa,EAAbA,OACVA,IAAW8T,GAAOA,EAAGM,SAASpU,IAChC6L,EAAUpH,IAMd,OAHAqP,EAAGO,iBAAiB,YAAaF,GAAM,GACvCN,EAAUS,YAAYR,GAEf,WACLA,EAAGS,oBAAoB,YAAaJ,GAAM,GAC1CN,EAAUW,YAAYV,MAEvB,CAACA,EAAID,EAAWhI,EAAWpH,IAEvBgQ,IAASC,aACd,kBAACV,EAAD,eAAOG,KAAM,kBAAMtI,EAAUpH,KAAgBmP,IAC7CE,MAIJvP,EAAM2O,iBAAkB,EAWT7N,sBAAQ,MAJI,SAACG,GAAD,MAAe,CACxCqG,UAAW,SAACpH,GAAD,OAAee,EAASqG,YAAUpH,QAGhCY,CAAkCd,I,iCC7CjD,2CAkBeM,UAbD,SAAC,GAAD,IAAGrD,EAAH,EAAGA,SAAUsD,EAAb,EAAaA,QAASjF,EAAtB,EAAsBA,MAAtB,OACZ,kBAAC,IAAS8T,IAAV,CAAc9T,MAAOA,EAAOwB,UAAU,SACpC,wBAAIxB,MAAO,CAAE2O,MAAO,SAAWnN,UAAU,yBACtCG,GAEFsD,GACC,kBAAC,UAAD,CAAYA,QAASA,EAASuM,MAAI,EAACC,MAAI,GAAvC,Y,6LCQN5F,IAAQC,GA2KOgJ,UAzKM,SAAC,GAWf,IAVL7I,EAUI,EAVJA,QACAiB,EASI,EATJA,cACA7F,EAQI,EARJA,KACArE,EAOI,EAPJA,MACAH,EAMI,EANJA,YACAuJ,EAKI,EALJA,eACAC,EAII,EAJJA,gBACAhD,EAGI,EAHJA,UACA2C,EAEI,EAFJA,UACAxI,EACI,EADJA,UAEMuR,EAAkBvL,mBADpB,EAE0C+C,oBAAS,kBACrDC,YAAmBP,EAAQQ,SAHzB,mBAEGC,EAFH,KAEoBC,EAFpB,KAMJtJ,qBAAU,WACR,IAAMkK,EAA0BC,aAAY,WAC1Cb,EAAmBH,YAAmBP,EAAQQ,SAC7C,KACH,OAAO,kBAAMgB,cAAcF,MAC1B,CAACZ,EAAoBV,IAExB,IAAM+I,EAAsB,uCAAG,sBAAAvO,EAAA,sEAE3B2F,EAAe,CACbnG,KAAM,qBACN0H,QAAS,CAAEsH,eAAgBhJ,EAAQkB,IAAKtK,iBAJf,SAMrBqS,YAAiBjJ,EAAQkB,IAAKnK,GANT,sDAQ3BQ,EAAU,kCAAkC,kBAC1CwR,OATyB,wDAAH,qDActBG,EAAwB,uCAAG,sBAAA1O,EAAA,sEAE7B2F,EAAe,CACbnG,KAAM,uBACN0H,QAAS,CACPsH,eAAgBhJ,EAAQkB,IACxBe,gBAAiBhB,EAAcC,OAGnCd,GACEA,EAAgB,CACdpG,KAAM,gCACN0H,QAAS,CAAES,eAAgB,EAAGC,OAAQhH,EAAK8F,OAZlB,SAcvBiI,YAAmBnJ,EAAQkB,IAAKnK,GAdT,uDAgB7BQ,EAAU,wCAAwC,kBAChD2R,OAjB2B,yDAAH,qDAsB9B,OACE,yBACEnV,MAAO,CAAEqV,WAAY,QACrB7T,UAAU,UACV+I,IAAKwK,GAEL,kBAAC,IAAD,CACE9P,QAAS,kBAAM+G,EAAU,eACzBwC,GAAE,WAAMvC,EAAQa,OAAOrF,WAEvB,kBAAC,UAAD,CACEgH,KAAK,OACLC,SAAUzC,EAAQa,OAAOxD,OACzB9H,UAAU,mBAGd,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,aACX,kBAAC,IAAD,CACEyD,QAAS,kBAAM+G,EAAU,eACzBhM,MAAO,CACLC,eAAgB,OAChB0O,MAAO,eACPjO,YAAa,OAEf8N,GAAE,WAAMvC,EAAQa,OAAOrF,WAEvB,2BAAIwE,EAAQa,OAAOrF,WAErB,kBAAC,IAAD,CAASuC,QAASjE,KAAiBkG,EAAQ2C,UAE5C/L,GAAeoJ,EAAQa,OAAOrF,WAAa5E,EAAY4E,SACtD,yBACExC,QAAS,kBACPoE,EACE,CACEW,QAAS,CACP,CACEG,SAAS,EACTjF,KAAM,SACND,QAAS,kBAAMkQ,QAIrB,gCAGJ3T,UAAU,qBACVxB,MAAO,CAAEU,YAAa,MAEtB,kBAAC,UAAD,CACEc,UAAU,sCACVb,KAAK,sBACLX,MAAO,CAAE6O,OAAQ,WAGnB,KACJ,yBAAKrN,UAAU,kBACb,uBAAGA,UAAU,yBAAyBkL,GACtC,kBAAC,WAAD,KACGT,EAAQqJ,kBAAkBlR,OAAS,GAClC,uBAAG5C,UAAU,yBACVyK,EAAQqJ,kBAAkBlR,OAAQ,IACG,IAArC6H,EAAQqJ,kBAAkBlR,OAAe,OAAS,SAGvD,4BACEa,QAAS,kBAEPmH,EAAe,CACbnG,KAAM,eACN0H,QAAS,CACPlG,SAAUwE,EAAQa,OAAOrF,SACzBmG,UAAWV,EAAcC,QAI/B3L,UAAU,yCAXZ,YAkBN,yBAAKA,UAAU,iBACZqB,EACC,kBAAC,UAAD,CACEqM,SACIjD,EAAQqJ,kBAAkBnG,MAC1B,SAACC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAG1CkC,cAAe,CACbpK,QAAS,kBAAM+P,MAEjB1F,aAAc,CACZ,CAAE3O,KAAM,QAASa,UAAW,wBAC5B,CAAEb,KAAM,gBAAiBa,UAAW,eAEtC+N,WAAYwF,IAGd,kBAAC,UAAD,CAAMpU,KAAK,gBAAgBa,UAAU,mB,oEC3KhC+T,UAVM,SAAC,GAAD,IAAG5T,EAAH,EAAGA,SAAU6T,EAAb,EAAaA,WAAezB,EAA5B,gDACnB,4CACEvS,UAAU,wBACNgU,EACAzB,GAEHpS,K,kIC8DU8T,UA7DU,SAAC,GAA6C,IAA3CrN,EAA0C,EAA1CA,SAAUsN,EAAgC,EAAhCA,OAAQzQ,EAAwB,EAAxBA,QAASwC,EAAe,EAAfA,SAAe,EACtB8E,mBAAS,IADa,mBAC7DoJ,EAD6D,KAC5CC,EAD4C,OAE9BrJ,oBAAS,GAFqB,mBAE7DsJ,EAF6D,KAEhDC,EAFgD,OAGNvJ,oBAAS,GAHH,mBAG7DwJ,EAH6D,KAGpCC,EAHoC,KAI9DC,EAAezM,mBAGrBnG,qBAAU,WAFK,KAGTqS,EAAOtR,QAAsByR,GAAaC,GAAe,KAC5D,CAACJ,EAAQG,IAEZ7C,YAA0B,uCACxB,6BAAAvM,EAAA,4DAASyP,WACSL,GAAgBzN,GAAa2N,EAD/C,iCAGMC,GAA2B,GAHjC,SAI0BG,YAClB1O,EACAiO,EAAOtR,OAASuR,EAAgBvR,QANxC,OAPa,MAWDgS,EAJZ,QASgBhS,QAAmB0R,GAAe,GAC5CF,GAAmB,SAAC7H,GAAD,4BAAkBA,GAAlB,YAA+BqI,OAClDJ,GAA2B,GAXjC,kDAaMA,GAA2B,GAC3BF,GAAe,GAdrB,0DADwB,sDAmBxBG,EAAahM,QACb,CAAC4L,EAAazN,EAAU2N,IAG1B,IAAMM,EAAiB,SAACtO,EAAMtD,GAAP,OACrB,wBAAIE,IAAKF,GACP,kBAAC,UAAD,CACEgD,SAAUM,EAAKN,SACf6B,OAAQvB,EAAKuB,OACb+I,QAAStK,EAAKP,SACdvC,QAAS,kBAAMA,EAAQ8C,QAK7B,OACE,wBAAIwC,IAAK0L,EAAczU,UAAU,qBAC9B4G,EACC,kBAAC,UAAD,MAEAsN,EAAOlR,KAAI,SAACuD,EAAMtD,GAAP,OAAe4R,EAAetO,EAAMtD,MAEhDsR,EACC,kBAAC,UAAD,MAEAJ,EAAgBnR,KAAI,SAACuD,EAAMtD,GAAP,OAAe4R,EAAetO,EAAMtD,S,iCChEhE,0CAoBe6R,UAfI,kBACjB,yBAAK9U,UAAU,gBACb,kBAAC,UAAD,KACE,kBAAC,UAAD,CACEb,KAAK,2BACLa,UAAU,oCAGd,wBAAIA,UAAU,aAAd,wBACA,wBAAIA,UAAU,wBAAd,4C,oGC4DW+U,UApEQ,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACtCC,EAAoBnN,mBADqC,EAEnB+C,mBAAS,UAFU,mBAExDqK,EAFwD,KAExCC,EAFwC,KAIzDzM,EAAc,SAAC0M,EAAM9J,GACzB6J,EAAkBC,GAClBN,EAAUxJ,EAAQ8J,IAmBpB,OACE,wBAAIvM,IAAKoM,EAAmBnV,UAAU,mBAChB,IAAnBiV,EAAQrS,OACP,kBAAC,UAAD,MACEsS,EACF,kBAAC,WAAD,KACE,wBACElV,UAAWC,IAAW,CACpB,yBAAyB,EACzB,0CACqB,WAAnBmV,IAEJ3R,QAAS,kBAAMmF,EAAY,SAAU,MAErC,0BAAM5I,UAAU,0CAAhB,UAGA,yBAAKkR,IAAKgE,EAAc/D,IAAI,oBAE7B8D,EAAQjS,KAAI,WAAmBC,GAAnB,IAAGqS,EAAH,EAAGA,KAAM9J,EAAT,EAASA,OAAT,OACX,wBACExL,UAAWC,IAAW,CACpB,yBAAyB,EACzB,0CACEmV,IAAmBE,IAEvB7R,QAAS,kBAAMmF,EAAY0M,EAAM9J,IACjCrI,IAAKF,GAEL,0BAAMjD,UAAU,0CACbsV,GAEH,yBAAKpE,IAAKgE,EAAc1W,MAAO,CAAEgN,UAAU2F,IAAI,wBAhDpC,SAACoE,GAEtB,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAASE,KACP,wBACE1V,UAAU,wBACVxB,MAAO,CAAEQ,MAAO,QAASqO,OAAQ,QACjClK,IAAKsS,GAEL,kBAAC,UAAD,CAAgBE,UAAQ,MAI9B,OAAOH,EAwCHI,CAAe,O,iCCpEvB,kDAMMC,EAAoB,kBACxB,uBACErX,MAAO,CAAEC,eAAgB,QACzBC,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,UAAD,CACEJ,MAAO,CACL2O,MAAO,OACPiC,QAAS,MACT0G,OAAQ,MACRjC,WAAY,QAEd5U,UAAQ,GAPV,mCAcE8W,EAAmB,kBACvB,uBACEvX,MAAO,CAAEC,eAAgB,QACzBC,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,UAAD,CACEJ,MAAO,CACL2O,MAAO,OACPiC,QAAS,MACT0G,OAAQ,MACRjC,WAAY,QAEd5U,UAAQ,GAPV,kBAyDW6E,UA3CA,kBACb,4BAAQ9D,UAAU,UAChB,yBAAKA,UAAU,gBACb,kBAAC,UAAD,CAAYiQ,MAAI,EAACH,OAAK,EAACD,UAAQ,GAA/B,SAGA,kBAAC,UAAD,CAAYI,MAAI,EAACH,OAAK,EAACD,UAAQ,GAA/B,QAGA,kBAAC,UAAD,CAAYI,MAAI,EAACH,OAAK,EAACD,UAAQ,GAA/B,SAGA,kBAAC,UAAD,CAAYI,MAAI,EAACH,OAAK,EAACD,UAAQ,GAA/B,OAGA,kBAAC,UAAD,CAAYI,MAAI,EAACH,OAAK,EAACD,UAAQ,GAA/B,QAGA,kBAAC,UAAD,CAAYI,MAAI,EAACH,OAAK,EAACD,UAAQ,GAA/B,WAGA,kBAAC,UAAD,CAAYI,MAAI,EAACH,OAAK,EAACD,UAAQ,GAA/B,UAIF,yBAAK7P,UAAU,iBACb,wBACEA,UAAU,iCACVxB,MAAO,CAAEK,QAAS,OAAQC,WAAY,WAFxC,QAIQ,IACN,kBAAC,UAAD,CACEkB,UAAU,yBACVb,KAAK,QACLX,MAAO,CAAEK,QAAS,eAAgBmX,OAAQ,WACzC,IATL,eAUE,kBAACD,EAAD,MACA,kBAACF,EAAD,W,iCCrFR,iEAsDe9R,UA/CG,SAAC,GAAqB,IAAnB1C,EAAkB,EAAlBA,YAELM,EACVC,cADF9B,SAAY6B,SAGd,OACE,yBAAK3B,UAAU,cACb,wBAAIA,UAAU,oBACZ,4BACE,kBAAC,IAAD,CAAMgN,GAAG,KACP,kBAAC,UAAD,CAAM7N,KAAmB,MAAbwC,EAAmB,OAAS,mBAG5C,4BACE,kBAAC,IAAD,CAAMqL,GAAG,YACP,kBAAC,UAAD,CACE7N,KAAmB,aAAbwC,EAA0B,SAAW,qBAIjD,4BACE,kBAAC,UAAD,CAAesU,UAAQ,KAEzB,4BACE,kBAAC,IAAD,CAAMjJ,GAAG,aACP,kBAAC,UAAD,CACEkJ,QAAM,EACN/W,KAAmB,cAAbwC,EAA2B,QAAU,oBAIjD,4BACE,kBAAC,IAAD,CAAMqL,GAAE,WAAM3L,EAAY4E,WACxB,kBAAC,UAAD,CACE9G,KACEwC,IAAQ,WAASN,EAAY4E,UACzB,gBACA,gC,wLCuEduB,EAAkBC,YAAyB,CAC/CjG,MAAOkF,IACPrF,YAAa6C,MAQAF,sBAAQwD,GALI,SAACrD,GAAD,MAAe,CACxCnC,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,KACvDmL,QAAS,SAAC/I,GAAD,OAAU1B,EAASyK,YAAQ/I,QAGvB7B,EAzGK,SAAC,GASd,IARLxC,EAQI,EARJA,MACA2U,EAOI,EAPJA,KACAjB,EAMI,EANJA,aACA7T,EAKI,EALJA,YACAyR,EAII,EAJJA,KACAsD,EAGI,EAHJA,KACApU,EAEI,EAFJA,UACA4M,EACI,EADJA,QACI,EAC0B7D,mBAAS,IADnC,mBACGL,EADH,KACY2L,EADZ,OAE0BtL,oBAAS,GAFnC,mBAEG6E,EAFH,KAEY0G,EAFZ,KAIEC,EAAU3U,cAEVgH,EAAW,uCAAG,WAAOV,GAAP,iBAAAjD,EAAA,6DAClBiD,EAAMK,kBACAiO,EAAW,IAAIC,UACZC,OAAO,QAASP,GACzBK,EAASG,IAAI,UAAWjM,GACxB8L,EAASG,IAAI,OAAQC,KAAKC,UAAU3B,EAAa4B,OACjD5B,EAAa6B,YAAcP,EAASG,IAAI,SAAUzB,EAAa6B,YAN7C,SAQhBT,GAAW,GARK,UASGU,YAAWR,EAAUhV,GATxB,QASVqE,EATU,OAUhByQ,GAAW,GACXxD,IACkC,MAA9ByD,EAAQzW,SAAS6B,SACnBiN,EAAQ/I,GAER0Q,EAAQb,KAAK,KAfC,kDAkBhBY,GAAW,GACXtU,EAAU,KAAIoL,SAAW,yBAAyB,kBAChDxE,EAAYV,MApBE,0DAAH,sDAyBjB,OACE,kBAAC,WAAD,KACG0H,GAAW,kBAAC,UAAD,MACZ,kBAAC,UAAD,CAAcqH,MAAI,GAChB,kBAAC,UAAD,CACE9X,KAAK,eACLsE,QAAS,kBAAM2S,KACf5X,MAAO,CAAE6J,OAAQ,aAEnB,wBAAIrI,UAAU,aAAd,YACA,kBAAC,UAAD,CACEiQ,MAAI,EACJD,MAAI,EACJxR,MAAO,CAAE0Y,SAAU,UACnBzT,QAAS,SAACyE,GAAD,OAAWU,EAAYV,KAJlC,UASF,0BACE1J,MAAO2X,GAAQ,CAAEtX,QAAS,SAC1BmB,UAAU,4BAEV,kBAAC,WAAD,KACE,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,qBACb,kBAAC,UAAD,CACEiN,KAAK,OACLjN,UAAU,gBACVkN,SACE7L,EAAYyG,OACRzG,EAAYyG,OACZ8K,EAAQ,KAA0CC,WAI5D,8BACE7S,UAAU,sBACVuP,YAAY,qBACZvG,SAAU,SAACd,GAAD,OAAWmO,EAAWnO,EAAMvJ,OAAO8Q,UAE/C,yBAAKzP,UAAU,sBACb,yBACEkR,IAAKgE,EAAahE,IAClBC,IAAI,UACJ3S,MAAO,CAAEgN,OAAQ0J,EAAa1J,mB,oFCpE/B2L,UAhCO,SAAC,GAAgD,IAA9CjC,EAA6C,EAA7CA,aAAckC,EAA+B,EAA/BA,gBAAiBnC,EAAc,EAAdA,QACtD,OACE,kBAAC,WAAD,KACE,yBAAKjV,UAAU,qBACb,yBAAKA,UAAU,qCACZkV,EAAahE,IACZ,yBACEA,IAAKgE,EAAahE,IAClBC,IAAI,YACJ3S,MAAO,CACLQ,MAAO,OACPqO,OAAQ,OACRgK,UAAW,UACX7L,OAAQ0J,EAAa1J,UAIzB,kBAAC,UAAD,QAIN,kBAAC,UAAD,CACEwJ,UAAW,SAACxJ,EAAQuL,GAAT,OACTK,GAAgB,SAAC7K,GAAD,mBAAC,eAAmBA,GAApB,IAA8Bf,SAAQuL,mBAExD7B,aAAcA,EAAahE,IAC3B+D,QAASA,O,iCC/BjB,2CAiDeqC,UA5CQ,SAAC,GAAqD,IAAnDxP,EAAkD,EAAlDA,OAAQ7B,EAA0C,EAA1CA,SAAUD,EAAgC,EAAhCA,SAAUuR,EAAsB,EAAtBA,MAAOpX,EAAe,EAAfA,SACrDoW,EAAU3U,cAEhB,OACE,yBAAK5B,UAAU,mBACb,kBAAC,UAAD,CACEyD,QAAS,kBAAM8S,EAAQb,KAAK,IAAMzP,IAClCjG,UAAU,sBACVkN,SAAUpF,IAEZ,wBAAI9H,UAAU,uBAAuBiG,GACrC,wBAAIjG,UAAU,oCAAoCgG,GAClD,yBAAKhG,UAAU,4BACZuX,EAAM3U,OAAS,EACd2U,EAAMvU,KAAI,SAAC6C,EAAM5C,GAAP,OACR,4BAAQjD,UAAU,mCAAmCmD,IAAKF,GACxD,yBACEiO,IAAKrL,EAAK2R,UACVrG,IAAI,YACJ3S,MAAO,CAAEgN,OAAQ3F,EAAK2F,cAK5B,kBAAC,WAAD,KACE,yBAAKhN,MAAO,CAAE4Q,QAAS,SACrB,wBAAIpP,UAAU,uBAAd,YACA,wBAAIA,UAAU,oCAAd,yEASR,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,oCAAd,UACCG,M,iCC3CT,sCAAIsX,EAAQC,EAAZ,OAEA,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUlZ,GAAU,IAAK,IAAI8W,EAAI,EAAGA,EAAIqC,UAAUlV,OAAQ6S,IAAK,CAAE,IAAIsC,EAASD,UAAUrC,GAAI,IAAK,IAAItS,KAAO4U,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5U,KAAQxE,EAAOwE,GAAO4U,EAAO5U,IAAY,OAAOxE,IAA2BwZ,MAAMC,KAAMN,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5U,EAAKsS,EAAnE9W,EAEzF,SAAuCoZ,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5U,EAAKsS,EAA5D9W,EAAS,GAAQ4Z,EAAaX,OAAOY,KAAKT,GAAqB,IAAKtC,EAAI,EAAGA,EAAI8C,EAAW3V,OAAQ6S,IAAOtS,EAAMoV,EAAW9C,GAAQ6C,EAASG,QAAQtV,IAAQ,IAAaxE,EAAOwE,GAAO4U,EAAO5U,IAAQ,OAAOxE,EAFxM+Z,CAA8BX,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAKtC,EAAI,EAAGA,EAAImD,EAAiBhW,OAAQ6S,IAAOtS,EAAMyV,EAAiBnD,GAAQ6C,EAASG,QAAQtV,IAAQ,GAAkByU,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5U,KAAgBxE,EAAOwE,GAAO4U,EAAO5U,IAAU,OAAOxE,EAMne,SAASma,EAAcC,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACf7V,EAAQgV,EAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOpB,EAAS,CACtD9O,GAAI,mBACJsQ,MAAO,6BACPC,WAAY,+BACZC,EAAG,MACHC,EAAG,MACHC,QAAS,YACT/a,MAAO,CACLgb,iBAAkB,iBAEpBC,SAAU,WACV1Q,IAAKiQ,EACL,kBAAmBE,GAClB7V,GAAQ4V,EAAqB,gBAAoB,QAAS,CAC3DpQ,GAAIqQ,GACHD,GAAS,KAAMxB,IAAWA,EAAsB,gBAAoB,QAAS,CAC9EhT,KAAM,YACL,kCAAmCiT,IAAOA,EAAkB,gBAAoB,IAAK,CACtF7O,GAAI,SACU,gBAAoB,IAAK,CACvCA,GAAI,YACU,gBAAoB,IAAK,KAAmB,gBAAoB,OAAQ,CACtF7I,UAAW,MACX0Z,EAAG,mTAIP,IAAIC,EAA0B,aAAiBb,GAChC,K,oGCDAc,IAhCiB,WAAO,IAAD,EACR7O,mBAAS,IADD,mBAC7BmJ,EAD6B,KACrB2F,EADqB,OAEJ9O,oBAAS,GAFL,mBAE7BnE,EAF6B,KAEnBkT,EAFmB,KAI9BC,EAAY,uCAAG,WAAOC,EAAQ3L,GAAf,eAAApJ,EAAA,yDACd+U,EADc,uBAEjBF,GAAY,GAFK,kBAGVD,EAAU,KAHA,gCAOMlF,YAAYqF,EAAQ3L,GAP1B,OAOX7I,EAPW,OAQjBqU,EAAUrU,GAAsB,IAChCsU,GAAY,GATK,wDAWjBA,GAAY,GACN,IAAIrU,MAAJ,MAZW,0DAAH,wDAeZwU,EAAwBC,IAASH,EAAc,KAIrD,MAAO,CACLI,yBAJ+BnS,kBAAO,SAACgS,EAAQ3L,GAAT,OACtC4L,EAAsBD,EAAQ3L,MAC9B5F,QAGAyL,SACA2F,YACAjT,WACAkT,iB,iCCtCJ,yEAMaM,EAAc,CAACC,KAK5B,IAAMC,EAAQC,YAAYC,IAAaC,IAAe,WAAf,EAAmBL,IAE3CE,O,oFCgBAI,UA1BI,SAAC,GASb,IARLva,EAQI,EARJA,SACA6P,EAOI,EAPJA,KACAH,EAMI,EANJA,SACAI,EAKI,EALJA,KACA0K,EAII,EAJJA,MACA5K,EAGI,EAHJA,OACAD,EAEI,EAFJA,MACGyC,EACC,8EACEqI,EAAuBC,IAAW,CACtC,eAAe,EACf,YAAaF,EACb,YAAa5K,EACb,YAAaD,EACb,aAAcE,EACd,eAAgBH,EAChB,YAAaI,IAEf,OACE,4CAAYsC,EAAZ,CAA6BvS,UAAW4a,IACrCza,K,oECtBM6N,EAAgB,CAC3B3M,YAAa,KACbqE,OAAO,EACPkB,UAAU,EACVE,gBAAgB,EAChBE,iBAAiB,EACjBxF,MAAOC,aAAaC,QAAQ,UA2GfoZ,EAxGK,WAAoC,IAAnC7W,EAAkC,uDAA1B+J,EAAeG,EAAW,uCACrD,OAAQA,EAAO1J,MACb,KAAKwE,IAAUO,qBACf,KAAKP,IAAUK,cACf,KAAKL,IAAUC,cACb,OAAO,2BAAKjF,GAAZ,IAAmByB,OAAO,EAAOkB,UAAU,IAE7C,KAAKqC,IAAUS,uBACf,KAAKT,IAAUG,gBACb,OAAO,2BACFnF,GADL,IAEE5C,YAAa8M,EAAOhC,QAAQ5F,KAC5Bb,OAAO,EACPkB,UAAU,EACVpF,MAAO2M,EAAOhC,QAAQ3K,QAG1B,KAAKyH,IAAUQ,uBACf,KAAKR,IAAUM,gBACf,KAAKN,IAAUE,gBACb,OAAO,2BACFlF,GADL,IAEE2C,UAAU,EACVlB,MAAOyI,EAAOhC,UAGlB,KAAKlD,IAAUI,SACb,OAAO,2BACFpF,GADL,IAEE5C,YAAa,KACbG,MAAO,OAGX,KAAKyH,IAAUU,cAAgB,IAAD,EACEwE,EAAOhC,QAA7B4O,EADoB,EACpBA,UAAWlO,EADS,EACTA,OACfmO,EAAYpE,KAAKqE,MAAMrE,KAAKC,UAAU5S,EAAM5C,YAAY2Z,YAM5D,MALkB,QAAdD,EACFC,EAAUtF,KAAK,CAAE7P,KAAMgH,IAEvBmO,EAAYA,EAAUxP,QAAO,SAAC0P,GAAD,OAAcA,EAASrV,OAASgH,KAExD,2BACF5I,GADL,IAEE5C,YAAY,2BACP4C,EAAM5C,aADA,IAET2Z,gBAIN,KAAK/R,IAAUc,oBACf,KAAKd,IAAUW,oBACb,OAAO,2BAAK3F,GAAZ,IAAmB6C,gBAAgB,IAErC,KAAKmC,IAAUY,sBACb,OAAO,2BACF5F,GADL,IAEE5C,YAAY,2BAAM4C,EAAM5C,aAAb,IAA0ByG,OAAQqG,EAAOhC,UACpDrF,gBAAgB,IAGpB,KAAKmC,IAAUgB,sBACf,KAAKhB,IAAUa,sBACb,OAAO,2BACF7F,GADL,IAEE6C,gBAAgB,EAChBpB,MAAOyI,EAAOhC,UAGlB,KAAKlD,IAAUe,sBAAuB,MAEE/F,EAAM5C,YAAzB8Z,GAFiB,EAE5BrT,OAF4B,2BAGpC,OAAO,2BACF7D,GADL,IAEE5C,YAAY,eAAM8Z,GAClBrU,gBAAgB,EAChBpB,OAAO,IAGX,KAAKuD,IAAUiB,qBACb,OAAO,2BACFjG,GADL,IAEE+C,iBAAiB,IAGrB,KAAKiC,IAAUmB,uBACb,OAAO,2BACFnG,GADL,IAEEyB,OAAO,EACPsB,iBAAiB,EACjB3F,YAAY,2BAAM4C,EAAM5C,aAAgB8M,EAAOhC,WAGnD,KAAKlD,IAAUkB,uBACb,OAAO,2BACFlG,GADL,IAEE+C,iBAAiB,EACjBtB,MAAOyI,EAAOhC,UAGlB,QACE,OAAOlI,I,iBC7GP+J,EAAgB,CACpBrL,OAAQ,IAyBKyY,EAnBM,WAAoC,IAAnCnX,EAAkC,uDAA1B+J,EAAeG,EAAW,uCACtD,OAAQA,EAAO1J,MACb,KAAKwC,IAAWE,WACd,IAAMxE,EAASsB,EAAMtB,OACf0Y,EAAiB1Y,EAAO6I,QAC5B,SAAArK,GAAK,OAAIA,EAAMiC,YAAc+K,EAAOhC,WAEtC,MAAO,CAAExJ,OAAQ0Y,GAEnB,KAAKpU,IAAWC,WAAa,IAAD,EACGiH,EAAOhC,QAA5B9I,EADkB,EAClBA,MAAOD,EADW,EACXA,UACf,MAAO,CAAET,OAAO,GAAD,mBAAMsB,EAAMtB,QAAZ,CAAoB,CAAEU,QAAOD,gBAE9C,QACE,OAAOa,I,QCrBP+J,EAAgB,CACpBtK,KAAM,GACND,QAAS,KACTzB,WAAW,EACXsZ,UAAW,MA6BEC,EA1BM,WAAoC,IAAnCtX,EAAkC,uDAA1B+J,EAAeG,EAAW,uCACtD,OAAQA,EAAO1J,MACb,KAAK+W,IAAWC,WAAa,IAAD,EACAtN,EAAOhC,QAAzBzI,EADkB,EAClBA,KAAMD,EADY,EACZA,QACd,OAAO,2BACFQ,GADL,IAEEP,OACAD,UACAzB,WAAW,IAGf,KAAKwZ,IAAWE,WACd,OAAO,2BAAKzX,GAAZ,IAAmBP,KAAM,GAAID,QAAS,KAAMzB,WAAW,IAEzD,KAAKwZ,IAAWG,qBACd,OAAO,2BACF1X,GADL,IAEEqX,UAAWnN,EAAOhC,UAGtB,QACE,OAAOlI,I,SC5BP2X,EAAe,CACnBC,OAAQ,MAqBKC,EAlBO,WAAmC,IAAlC7X,EAAiC,uDAAzB2X,EAAczN,EAAW,uCACtD,OAAQA,EAAO1J,MACb,KAAKI,IAAYC,QACf,OAAO,2BACFb,GADL,IAEE4X,OAAQ1N,EAAOhC,UAGnB,KAAKtH,IAAYE,WAEf,OADAd,EAAM4X,QAAU5X,EAAM4X,OAAOE,aACtBH,EAET,QACE,OAAO3X,I,QCjBP+J,EAAgB,CACpB3G,cAAe,GACf2U,YAAa,EACbpV,UAAU,EACVlB,OAAO,GA4DMuW,EAzDa,WAAoC,IAAnChY,EAAkC,uDAA1B+J,EAAeG,EAAW,uCAC7D,OAAQA,EAAO1J,MACb,KAAKyX,IAAkBC,iBACrB,OAAO,2BACFlY,GADL,IAEEoD,cAAc,CAAE8G,EAAOhC,SAAV,mBAAsBlI,EAAMoD,gBACzC2U,YAAa/X,EAAM+X,YAAc,IAGrC,KAAKE,IAAkBE,0BACrB,OAAO,2BACFnY,GADL,IAEE2C,UAAU,EACVlB,OAAO,IAGX,KAAKwW,IAAkBG,4BACrB,OAAO,2BACFpY,GADL,IAEE2C,UAAU,EACVlB,MAAOyI,EAAOhC,UAGlB,KAAK+P,IAAkBI,4BACrB,IAAMN,EAAc7N,EAAOhC,QAAQX,QACjC,SAAC8E,GAAD,OAAwC,IAAtBA,EAAa6B,QAC/BvP,OACF,OAAO,2BACFqB,GADL,IAEE2C,UAAU,EACVlB,OAAO,EACP2B,cAAe8G,EAAOhC,QACtB6P,gBAGJ,KAAKE,IAAkBK,mBACrB,IAAMlV,EAAgBuP,KAAKqE,MAAMrE,KAAKC,UAAU5S,EAAMoD,gBAEtD,OADAA,EAAc6K,SAAQ,SAAC5B,GAAD,OAAmBA,EAAa6B,MAAO,KACtD,2BACFlO,GADL,IAEE+X,YAAa,EACb3U,kBAGJ,KAAK6U,IAAkBM,oBACrB,OAAO,2BACFvY,GADL,IAEE+X,YAAa,EACb3U,cAAe,KAGnB,QACE,OAAOpD,I,QC3DP+J,EAAgB,CACpBuJ,MAAO,GACP3Q,UAAU,EACVlB,OAAO,EACP+W,SAAS,GAyDIC,EAtDK,WAAoC,IAAnCzY,EAAkC,uDAA1B+J,EAAeG,EAAW,uCACrD,OAAQA,EAAO1J,MACb,KAAK+J,IAAUC,kBACb,OAAO,2BACFxK,GADL,IAEE2C,UAAU,EACVlB,OAAO,IAGX,KAAK8I,IAAUE,oBACb,OAAO,2BACFzK,GADL,IAEE2C,UAAU,EACVlB,OAAO,EACP6R,MAAM,GAAD,mBAAMtT,EAAMsT,OAAZ,YAAsBpJ,EAAOhC,UAClCsQ,QAAmC,IAA1BtO,EAAOhC,QAAQvJ,SAG5B,KAAK4L,IAAUG,oBACb,OAAO,2BACF1K,GADL,IAEE2C,UAAU,EACVlB,MAAOyI,EAAOhC,UAGlB,KAAKqC,IAAUK,SACb,OAAO,2BACF5K,GADL,IAEEsT,MAAM,CAAEpJ,EAAOhC,SAAV,mBAAsBlI,EAAMsT,UAGrC,KAAK/I,IAAUO,YACb,IAAMwI,EAAQX,KAAKqE,MAAMrE,KAAKC,UAAU5S,EAAMsT,QACxCoF,EAAYpF,EAAMqF,WAAU,SAAC/W,GAAD,OAAUA,EAAK8F,MAAQwC,EAAOhC,WAIhE,OAHIwQ,GACFpF,EAAMsF,OAAOF,EAAW,GAEnB,2BACF1Y,GADL,IAEEsT,UAGJ,KAAK/I,IAAUS,YACb,OAAO,2BACFhL,GADL,IAEEsT,MAAO,KAGX,QACE,OAAOtT,ICjDPuW,EAAcsC,YAAgB,CAClCvW,KAAMuU,EACN3Z,MAAOia,EACPha,MAAOma,EACPM,OAAQC,EACRzU,cAAe4U,EACfc,KAAML,IAGOlC,O,qJCbFlZ,EAAgB,kBAAM,SAAC6C,GAClC,IAAM0X,ECHSmB,IAAG,CAChBC,MAAO,CAAEzb,MAAOC,aAAaC,QAAQ,YDGvCyC,EAAS,CAAEM,KAAMI,IAAYC,QAASqH,QAAS0P,IAE/CA,EAAOqB,GAAG,mBAAmB,SAAC/X,GAC5BhB,EAASgZ,YAAgBhY,OAG3B0W,EAAOqB,GAAG,WAAW,SAAC/X,GACpBhB,EAASyK,YAAQzJ,OAGnB0W,EAAOqB,GAAG,cAAc,SAAC/X,GACvBhB,EAAS2K,YAAW3J,SAIXiY,EAAmB,iBAAO,CACrC3Y,KAAMI,IAAYE,c,gCEvBpB,oDAkCesY,UA5BA,SAAC,GAA+D,IAA7Dld,EAA4D,EAA5DA,SAAUsD,EAAkD,EAAlDA,QAASxE,EAAyC,EAAzCA,SAAUT,EAA+B,EAA/BA,MAAOmR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACxD0N,EAAgBrd,IAAW,CAC/BZ,QAAQ,EACR,mBAAoBJ,EACpB,mBAAoB0Q,IAEtB,OACE,4BACEnR,MAAOA,EACPwB,UAAWsd,EACX7Z,QAASmM,EAAU,aAAWnM,EAC9BgB,KAAMkL,EAAW,SAAW,UAE3BC,GAAW,kBAAC,UAAD,MACXzP,K,iCCpBP,iHAEMod,EAAa,SAACtZ,GAAD,OAAWA,EAAM8Y,MAEvBS,EAAkBhX,YAC7B,CAAC+W,IACD,SAACR,GAAD,OAAUA,EAAKxF,SAQJkG,GALkBjX,YAC7B,CAAC+W,IACD,SAACR,GAAD,OAAUA,EAAKrX,SAGiBc,YAChC,CAAC+W,IACD,SAACR,GAAD,OAAUA,EAAKnW,aAGJ8W,EAAgBlX,YAC3B,CAAC+W,IACD,SAACR,GAAD,OAAUA,EAAKN,Y,iCCrBjB,iEA4CezY,sBAAQ,MALI,SAACG,GAAD,MAAe,CACxC0D,UAAW,SAACxE,EAAOD,GAAR,OAAsBe,EAAS0D,YAAUxE,EAAOD,KAC3Dua,QAAS,kBAAMxZ,EAASwZ,mBAGX3Z,EAnCQ,SAAC,GAA4B,IAA1B6D,EAAyB,EAAzBA,UAAW8V,EAAc,EAAdA,QAC7BpH,EAAU3U,cAChB,OACE,kBAAC,UAAD,CACEzC,KAAK,mBACLX,MAAO,CAAE6J,OAAQ,WACjB5E,QAAS,WACPoE,EACE,CACEW,QAAS,CACP,CACE9E,KAAM,kBACND,QAAS,kBAAM8S,EAAQb,KAAK,wBAE9B,CACEhS,KAAM,UACND,QAAS,WACPka,IACApH,EAAQb,KAAK,SAKrB,sC,yLCyEJlO,EAAkBC,YAAyB,CAC/CpG,YAAa6C,IACb1C,MAAOkF,MAGM1C,sBAAQwD,GATI,SAACrD,GAAD,MAAe,CACxCnC,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,QAQ1CO,EA5FY,SAAC,GAAuC,IAArC3C,EAAoC,EAApCA,YAAaG,EAAuB,EAAvBA,MAAOQ,EAAgB,EAAhBA,UAAgB,EAC1B+I,mBAAS,IADiB,mBACzD5E,EADyD,KAC5CyX,EAD4C,OAE1B7S,mBAAS,IAFiB,mBAEzD3E,EAFyD,KAE5CyX,EAF4C,OAGZ9S,mBAAS,IAHG,mBAGzD+S,EAHyD,KAGrCC,EAHqC,OAIhChT,oBAAS,GAJuB,mBAIzDnE,EAJyD,KAI/CkT,EAJ+C,KAKhEjY,qBAAU,WACRgB,SAASoW,MAAQ,sCAChB,IAEH,IAAM3J,EAAY,uCAAG,WAAOpH,GAAP,eAAAjD,EAAA,yDACnBiD,EAAMK,iBACFnC,IAAgB0X,EAFD,yCAGV9b,EAAU,2CAHA,YAKbgc,EAAmBC,YAAiB7X,IALvB,yCAMUpE,EAAUgc,IANpB,uBASjBlE,GAAY,GATK,UAUX5T,YAAeC,EAAaC,EAAa5E,GAV9B,QAWjBQ,EACE,qFAEF8X,GAAY,GAdK,kDAgBjBA,GAAY,GACZ9X,EAAU,KAAIoL,SAjBG,0DAAH,sDAqBlB,OACE,kBAAC,UAAD,CAAciC,SAAU,SAACnH,GAAD,OAAWoH,EAAapH,KAC9C,kBAAC,UAAD,KACE,kBAAC,UAAD,CAAQlI,UAAU,gBAAgBkN,SAAU7L,EAAYyG,SACxD,wBAAI9H,UAAU,cAAcxB,MAAO,CAAE0Y,SAAU,WAC5C7V,EAAY4E,WAGjB,kBAAC,UAAD,KACE,2BAAOjG,UAAU,uBAAjB,gBACA,kBAAC,UAAD,CACEgJ,SAAU,SAACd,GAAD,OAAW0V,EAAe1V,EAAMvJ,OAAO8Q,QACjDhL,KAAK,cAGT,kBAAC,UAAD,KACE,2BAAOzE,UAAU,uBAAjB,gBACA,kBAAC,UAAD,CACEgJ,SAAU,SAACd,GAAD,OAAW2V,EAAe3V,EAAMvJ,OAAO8Q,QACjDhL,KAAK,cAGT,kBAAC,UAAD,KACE,2BAAOzE,UAAU,uBAAjB,wBACA,kBAAC,UAAD,CACEgJ,SAAU,SAACd,GAAD,OAAW6V,EAAsB7V,EAAMvJ,OAAO8Q,QACxDhL,KAAK,cAGT,kBAAC,UAAD,KACE,gCACA,kBAAC,UAAD,CACEjG,MAAO,CAAEQ,MAAO,SAChB4Q,QAAShJ,EACT+I,SACExJ,EAAYvD,OAAS,GACrBwD,EAAYxD,OAAS,GACrBkb,EAAmBlb,OAAS,GANhC,oBAYF,kBAAC,UAAD,KACE,gCACA,kBAAC,UAAD,CAAYpE,MAAO,CAAEQ,MAAO,QAASkf,UAAW,QAAUlO,MAAI,EAACC,MAAI,GAAnE,0B,oMCmEFzI,EAAkBC,YAAyB,CAC/CpG,YAAa6C,IACb1C,MAAOkF,IACPM,gBAAiBD,MAGJ/C,sBAAQwD,GAZI,SAACrD,GAAD,MAAe,CACxCga,mBAAoB,SAAC7Z,EAAW8Z,GAAZ,OAClBja,EAASga,YAAmB7Z,EAAW8Z,KACzCpc,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,QAS1CO,EAzIS,SAAC,GAMlB,IALL3C,EAKI,EALJA,YACAW,EAII,EAJJA,UACAR,EAGI,EAHJA,MACA2c,EAEI,EAFJA,mBACAnX,EACI,EADJA,gBAsBMqX,EAASC,YAAU,CACvBC,cAAe,CACbxY,MAAO1E,EAAY0E,MACnBC,SAAU3E,EAAY2E,SACtBC,SAAU5E,EAAY4E,SACtBuY,IAAKnd,EAAYmd,KAAO,GACxBC,QAASpd,EAAYod,SAAW,IAElCC,SA5Be,SAACC,GAChB,IAAMC,EAAS,GACTC,EAAaC,YAAcH,EAAO5Y,OACpC8Y,IAAYD,EAAO7Y,MAAQ8Y,GAE/B,IAAME,EAAgBC,YAAiBL,EAAO3Y,UAC1C+Y,IAAeH,EAAO5Y,SAAW+Y,GAErC,IAAME,EAAgBC,YAAiBP,EAAO1Y,UAC1CgZ,IAAeL,EAAO3Y,SAAWgZ,GAErC,IAAME,EAAWC,YAAYT,EAAOH,KAChCW,IAAUP,EAAOJ,IAAMW,GAE3B,IAAME,EAAeC,YAAgBX,EAAOF,SAG5C,OAFIY,IAAcT,EAAOH,QAAUY,GAE5BT,GAYPvP,SAAS,WAAD,4BAAE,WAAOsP,GAAP,SAAA1Z,EAAA,sEACFkZ,EAAmB3c,EAAOmd,GADxB,OAER3c,EAAU,kBAFF,2CAAF,mDAAC,KAUX,OAJAH,qBAAU,WACRgB,SAASoW,MAAQ,mCAChB,IAGD,kBAAC,UAAD,CAAc5J,SAAUgP,EAAO/O,cAC7B,kBAAC,UAAD,KACE,kBAAC,UAAD,KACE,kBAAC,UAAD,CACEtP,UAAU,gBACVkN,SAAU7L,EAAYyG,OACtBtJ,MAAO,CAAE+gB,UAAW,YAGxB,yBAAK/gB,MAAO,CAAEghB,WAAY,WACxB,wBAAIxf,UAAU,yBAAyBqe,EAAOM,OAAO1Y,UACrD,kBAAC,UAAD,QAGJ,kBAAC,UAAD,KACE,2BAAOjG,UAAU,uBAAjB,QACA,kBAAC,UAAD,CACEsV,KAAK,WACLtB,WAAYqK,EAAOoB,cAAc,eAGrC,kBAAC,UAAD,KACE,2BAAOzf,UAAU,uBAAjB,YACA,kBAAC,UAAD,CACEsV,KAAK,WACLtB,WAAYqK,EAAOoB,cAAc,eAGrC,kBAAC,UAAD,KACE,2BAAOzf,UAAU,uBAAjB,WACA,kBAAC,UAAD,CACEsV,KAAK,UACLtB,WAAYqK,EAAOoB,cAAc,cAGrC,kBAAC,UAAD,KACE,2BAAOzf,UAAU,uBAAjB,OACA,kBAAC,UAAD,CAAcsV,KAAK,MAAMtB,WAAYqK,EAAOoB,cAAc,UAE5D,kBAAC,UAAD,KACE,gCACA,6BACE,wBAAIzf,UAAU,kCAAd,wBAGA,uBACExB,MAAO,CAAE0Y,SAAU,SAAUsI,WAAY,UACzCxf,UAAU,cAFZ,0JAUJ,kBAAC,UAAD,KACE,2BAAOA,UAAU,uBAAjB,SACA,kBAAC,UAAD,CAAWsV,KAAK,QAAQtB,WAAYqK,EAAOoB,cAAc,YAE3D,kBAAC,UAAD,KACE,gCACA,kBAAC,UAAD,CACEjhB,MAAO,CAAEQ,MAAO,SAChB2Q,SAAiD,IAAvCiI,OAAOY,KAAK6F,EAAOqB,SAAS9c,OACtCgN,QAAS5I,EACTvD,QAAS,WACF4a,EAAOsB,SACV3d,EAAU4V,OAAO+G,OAAON,EAAOO,QAAQ,MAN7C,gB,iCCzIR,mEA+BMpX,EAAkBC,YAAyB,CAC/CmY,UAAWpC,IACXqC,aAAcpC,MAGDzZ,sBAAQwD,EAARxD,EAxBF,SAAC,GAAiC,IAA/B4b,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACzB,OACE,6BAAS7f,UAAU,QAChB4f,GACCA,EAAU5c,KAAI,SAAC6C,EAAM5C,GAAP,OACZ,kBAAC,UAAD,CAAY0H,QAAM,EAACmV,SAAUja,EAAMgH,OAAQhH,EAAK8F,IAAKxI,IAAKF,OAE7D4c,GACC,kBAAC,WAAD,KACE,kBAAC,UAAD,CAAYlV,QAAM,EAACiF,SAAO,IAC1B,kBAAC,UAAD,CAAYjF,QAAM,EAACiF,SAAO,IAC1B,kBAAC,UAAD,CAAYjF,QAAM,EAACiF,SAAO,MAG5BiQ,GAAgBD,EAAUhd,OAAS,GAAK,kBAAC,UAAD,W,iCC1BhD,iDA0Femd,UApFK,WAClB,IAcMlK,EAAoB,kBACxB,uBACErX,MAAO,CAAEC,eAAgB,QACzBC,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,UAAD,CACEJ,MAAO,CACL2O,MAAO,UACPiC,QAAS,MACT0G,OAAQ,MACRjC,WAAY,QAEd5U,UAAQ,GAPV,mCAcE8W,EAAmB,kBACvB,uBACEvX,MAAO,CAAEC,eAAgB,QACzBC,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,UAAD,CACEJ,MAAO,CACL2O,MAAO,UACPiC,QAAS,MACT0G,OAAQ,MACRjC,WAAY,QAEd5U,UAAQ,GAPV,kBAeJ,OACE,4BAAQe,UAAU,wCAChB,yBAAKA,UAAU,wBA3DL,CACZ,QACA,OACA,QACA,MACA,OACA,UACA,QACA,YACA,eACA,WACA,YAiDWgD,KAAI,SAACgd,EAAM/c,GAAP,OACT,kBAAC,IAAD,CAAME,IAAKF,EAAK+J,GAAG,KAChBgT,OAIP,wBACEhgB,UAAU,kEACVxB,MAAO,CAAEyhB,cAAe,eAF1B,QAIQ,IACN,kBAAC,UAAD,CACE9gB,KAAK,QACLa,UAAU,2BACVxB,MAAO,CAAEwX,OAAQ,WAChB,IATL,eAUA,kBAACD,EAAD,MACA,kBAACF,EAAD,U,0KCoCSqK,UA5GM,SAAC,GAAqC,IAAnC1e,EAAkC,EAAlCA,MAAOqG,EAA2B,EAA3BA,UAAW7F,EAAgB,EAAhBA,UAAgB,EAC9B+I,mBAAS,CACjCwM,MAAO,GACP4I,UAAW,EACXvZ,UAAU,EACV6V,SAAS,IAL6C,mBACjDlF,EADiD,KAC1C6I,EAD0C,KAQhD7V,EAAY8V,cAAZ9V,QACFgM,EAAU3U,cAgBV0e,EAAa,uCAAG,WAAOjS,GAAP,eAAApJ,EAAA,sEAElBmb,GAAS,SAAC7T,GAAD,mBAAC,eAAmBA,GAApB,IAA8B3F,UAAU,OAF/B,SAGK2Z,YAAgB/e,EAAO+I,EAAS8D,GAHrC,QAGZ7I,EAHY,QAIT+R,MACL6I,GAAS,SAAC7T,GAAD,MAAe,CACtBgL,MAAOhL,EAASgL,MAAT,sBACChL,EAASgL,OADV,YACoB/R,EAAS+R,QAChC/R,EAAS+R,MACb4I,UAAW3a,EAAS2a,UACpBvZ,UAAU,EACV6V,QAA6B,KAApBjX,EAAS5C,WAEpBwd,GAAS,SAAC7T,GAAD,mBAAC,eAAmBA,GAApB,IAA8B3F,UAAU,OAbnC,gDAelB5E,EAAU,KAAIoL,SAfI,yDAAH,sDA6BnBoE,aACE,YAAkB,EAAfkD,UACe6C,EAAMkF,UAAYlF,EAAM3Q,UACtC0Z,EAAc/I,EAAMA,MAAM3U,UAG9B,KACA,CAAC2U,IAGH,IAAMiJ,EAAmBxY,iBAAOsY,GAMhC,OAJAze,qBAAU,WACR2e,EAAiB/X,YAChB,CAAC+X,IAEIjJ,EAAM3Q,UAAmC,IAAvB2Q,EAAMA,MAAM3U,OAOpC,kBAAC,WAAD,KACE,kBAAC,UAAD,CAAc6d,WAAS,GACrB,kBAAC,UAAD,CAAYjiB,MAAO,CAAEkiB,YAAa,UAAYzQ,MAAI,EAAC0K,OAAK,GAAxD,IACIpQ,IAGN,yBAAKvK,UAAU,wBACb,wBAAIA,UAAU,aAAd,IAA4BuK,GAC5B,wBAAIvK,UAAU,yBACZ,0BAAMA,UAAU,aAAauX,EAAM4I,WAAkB,IAChC,IAApB5I,EAAM4I,UAAkB,OAAS,UAGtC,kBAAC,UAAD,KACG5I,EAAMA,OACLA,EAAMA,MAAMvU,KAAI,SAAC6C,EAAM5C,GAAP,OACd,kBAAC,UAAD,CACEE,IAAKF,EACL0E,MAAO9B,EAAK2R,UACZmJ,MAAO9a,EAAK+a,UACZC,SAAUhb,EAAKgb,SACfrV,OAAQ3F,EAAK2F,OACb/H,QAAS,kBAxFAoJ,EAwFkBhH,EAAK8F,IAxFf7D,EAwFoBjC,EAAKiC,YAvFhDjI,OAAO6R,YAAc,IACvB6E,EAAQb,KAAR,gBAAsB7I,IAEtBhF,EACE,CACEgF,SACA/E,UAEF,0BATc,IAAC+E,EAAQ/E,QA2FtByP,EAAM3Q,UA1DU,SAAC2O,GAEtB,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAASE,KACP,kBAAC,UAAD,CAAgBvS,IAAKsS,EAAGjX,MAAO,CAAEkS,UAAW,SAAWiF,UAAQ,KAGnE,OAAOH,EAmDgBI,CAAe,MA/BtC,yBAAK5V,UAAU,wBACb,wBAAIA,UAAU,aAAd,4CAC4CuK,EAD5C,Q,kJC+CSuW,UAzHC,SAAC,GAAoB,IAAlB3K,EAAiB,EAAjBA,KAAMrD,EAAW,EAAXA,KAAW,EACM/H,mBAAS,CAC/CmG,IAAK,KACL4F,KAAM,GACNtL,OAAQ,KACRuL,WAAY,KALoB,mBAC3B7B,EAD2B,KACbkC,EADa,OAOQrM,mBAAS,UAPjB,mBAO3BgW,EAP2B,KAOZC,EAPY,OAQJjW,mBAAS,IARL,mBAQ3BkK,EAR2B,KAQlBgM,EARkB,KAWlCpf,qBAAU,WACR,GAAkB,cAAdsU,EAAK1R,MAAsC,eAAd0R,EAAK1R,KAAuB,CAC3D,IAAMyc,EAAS,IAAIC,WACnBD,EAAOE,cAAcjL,GACrB+K,EAAOG,OAAS,SAACnZ,GACfkP,GAAgB,SAAC7K,GAAD,mBAAC,eACZA,GADW,IAEd2E,IAAKhJ,EAAMvJ,OAAOuV,aAOxB,OAAO,WACLrU,OAAOyhB,IAAIC,gBAAgBrM,MAG5B,CAACiB,IAEJtU,qBAAU,WACR,sBAAC,4BAAAoD,EAAA,+EAE0Buc,cAF1B,OAEShc,EAFT,OAGGyb,EAAWzb,EAASyP,SAHvB,gDAKGwM,QAAQC,KAAR,MALH,wDAAD,KAQC,IAiCH,OACE,6BAAS1hB,UAAU,YACE,YAAlB+gB,GACC,kBAAC,UAAD,CAAc9J,MAAI,GAChB,kBAAC,UAAD,CACE9X,KAAK,gBACLsE,QAAS,kBAAMqP,KACftU,MAAO,CAAE6J,OAAQ,aAEnB,wBAAIrI,UAAU,aAAd,YACA,kBAAC,UAAD,CACEiQ,MAAI,EACJD,MAAI,EACJxR,MAAO,CAAE0Y,SAAU,UACnBzT,QAAS,kBAAMud,EAAiB,aAJlC,SAzCe,WACrB,OAAQD,GACN,IAAK,UACH,OACE,kBAAC,UAAD,CACE5K,KAAMA,EACNjB,aAAcA,EACdkB,KAAM,kBAAM4K,EAAiB,WAC7BlO,KAAM,kBAAMA,OAIlB,QAQE,OACE,kBAAC,UAAD,CACEoC,aAAcA,EACdkC,gBAAiBA,EACjBnC,QAASA,KA2Bd0M,GACkB,YAAlBZ,GACC,yBAAK/gB,UAAU,iBACb,4BACE,wBACEA,UAAS,6BACW,WAAlB+gB,GAA8B,8BAEhCtd,QAAS,kBAAMud,EAAiB,WAChCxiB,MAAO,CAAEQ,MAAO,SAEhB,wBAAIgB,UAAU,aAAd,gB,iCClHd,kCAmBe4hB,UAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAU1iB,EAAb,EAAaA,KAAb,OACtB,yBAAKa,UAAU,sBACb,yBAAKA,UAAU,gCACb,kBAAC,UAAD,CAAMb,KAAMA,IACZ,wBAAIa,UAAU,eAAe6hB,O,iCCTnC,2IAuKMra,EAAkBC,YAAyB,CAC/C/B,MAAOe,IACPG,SAAUD,MAGG3C,sBAAQwD,GAVI,SAACrD,GAAD,MAAe,CACxC2d,YAAa,SAAC/b,EAAOC,EAAUC,EAAU5B,GAA5B,OACXF,EAAS2d,YAAY/b,EAAOC,EAAUC,EAAU5B,QAQrCL,EApJI,SAAC,GAAsC,IAApC8d,EAAmC,EAAnCA,YAAapc,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SAiBlCyX,EAASC,YAAU,CACvBC,cAAe,CACbxY,MAAO,GACPC,SAAU,GACVC,SAAU,GACV5B,SAAU,IAEZqa,SAvBe,SAACC,GAChB,IAAMC,EAAS,GACTC,EAAaC,YAAcH,EAAO5Y,OACpC8Y,IAAYD,EAAO7Y,MAAQ8Y,GAE/B,IAAME,EAAgBC,YAAiBL,EAAO3Y,UAC1C+Y,IAAeH,EAAO5Y,SAAW+Y,GAErC,IAAME,EAAgBC,YAAiBP,EAAO1Y,UAC1CgZ,IAAeL,EAAO3Y,SAAWgZ,GAErC,IAAM8C,EAAgB9D,YAAiBU,EAAOta,UAE9C,OADI0d,IAAenD,EAAOva,SAAW0d,GAC9BnD,GAWPvP,SAAU,SAACsP,GAAD,OACRmD,EACEnD,EAAO5Y,MACP4Y,EAAO3Y,SACP2Y,EAAO1Y,SACP0Y,EAAOta,aAIb,OACE,kBAAC,WAAD,KACE,kBAAC,UAAD,CAAMrE,UAAU,aACd,wBAAIA,UAAU,4BAAd,cACA,wBACExB,MAAO,CAAE0Y,SAAU,UACnBlX,UAAU,oCAFZ,uDAMA,kBAAC,UAAD,CACExB,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPmO,MAAO,SAET9N,QAAM,IAER,kBAAC,UAAD,WACCuY,OAAOY,KAAK6F,EAAOO,QAAQ5b,KAAI,SAACgf,GAC/B,GAAI3D,EAAOqB,QAAQsC,GACjB,OACE,uBACEhiB,UAAU,QACVmD,IAAKkb,EAAOO,OAAOoD,GACnBxjB,MAAO,CAAEiP,UAAW,MAEnB4Q,EAAOO,OAAOoD,OAKvB,0BAAMhiB,UAAU,kBAAkBqP,SAAUgP,EAAO/O,cACjD,kBAAC,UAAD,CACEgG,KAAK,QACLtB,WAAYqK,EAAOoB,cAAc,SACjCwC,MAAO5D,EAAOqB,QAAQ3Z,QAAUsY,EAAOO,OAAO7Y,MAC9CwJ,YAAY,kBAEd,kBAAC,UAAD,CACE+F,KAAK,WACLtB,WAAYqK,EAAOoB,cAAc,YACjCwC,MAAO5D,EAAOqB,QAAQ1Z,WAAaqY,EAAOO,OAAO5Y,SACjDuJ,YAAY,cAEd,kBAAC,UAAD,CACE+F,KAAK,WACLtB,WAAYqK,EAAOoB,cAAc,YACjCwC,MAAO5D,EAAOqB,QAAQzZ,WAAaoY,EAAOO,OAAO3Y,SACjDsJ,YAAY,aAEd,kBAAC,UAAD,CACE+F,KAAK,WACLtB,WAAYqK,EAAOoB,cAAc,YACjClQ,YAAY,WACZ0S,MAAO5D,EAAOqB,QAAQrb,WAAaga,EAAOO,OAAOva,SACjDI,KAAK,aAEP,kBAAC,UAAD,CACEmL,QAAShJ,EACT+I,SACyC,IAAvCiI,OAAOY,KAAK6F,EAAOqB,SAAS9c,SAAuByb,EAAOsB,SAH9D,WAQA,6BAEF,uBAAG3f,UAAU,SACV0F,GAEG2Y,EAAO6D,YAAc,GAAKtK,OAAO+G,OAAON,EAAOO,QAAQ,IAE7D,uBAAG5e,UAAU,wBAAb,sPAKF,kBAAC,UAAD,KACE,6BACExB,MAAO,CACLK,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZsQ,QAAS,SAGX,wBAAI5Q,MAAO,CAAEU,YAAa,OAASc,UAAU,uBAA7C,oBAGA,kBAAC,IAAD,CAAMgN,GAAG,UACP,kBAAC,UAAD,CAAY+C,QAAM,EAACC,MAAI,EAACC,MAAI,GAA5B,aAMN,kBAAC,UAAD,W,kLCrCSkS,UA3GQ,SAAC,GAAqC,IAAnC3gB,EAAkC,EAAlCA,MAAOqG,EAA2B,EAA3BA,UAAW7F,EAAgB,EAAhBA,UACpCuU,EAAU3U,cAD0C,EAE9BmJ,mBAAS,IAFqB,mBAEnDmJ,EAFmD,KAE3C2F,EAF2C,OAG9B9O,oBAAS,GAHqB,mBAGnDqX,EAHmD,KAG3CC,EAH2C,OAIhCtX,mBAAS,CACjCwM,MAAO,KACP3Q,UAAU,EACV6V,SAAS,IAP+C,mBAInDlF,EAJmD,KAI5C6I,EAJ4C,KAwBpDE,EAAa,uCAAG,WAAOjS,GAAP,eAAApJ,EAAA,sEAElBmb,GAAS,SAAC7T,GAAD,mBAAC,eAAmBA,GAApB,IAA8B3F,UAAU,OAF/B,SAGK0b,YAAkB9gB,EAAO6M,GAH9B,OAGZ7I,EAHY,OAIlB4a,GAAS,SAAC7T,GAAD,MAAe,CACtBgL,MAAOhL,EAASgL,MAAT,sBAAqBhL,EAASgL,OAA9B,YAAwC/R,IAAYA,EAC3DoB,UAAU,EACV6V,QAA6B,KAApBjX,EAAS5C,WAPF,gDAUlBZ,EAAU,KAAIoL,SAVI,yDAAH,sDAcboT,EAAmBxY,iBAAOsY,GAkBhC,OAhBAze,qBAAU,WACR2e,EAAiB/X,YAChB,CAAC+X,IAEJhP,aACE,YAAkB,EAAfkD,UACe6C,EAAMkF,UAAYlF,EAAM3Q,UACtC0Z,EAAc/I,EAAMA,MAAM3U,UAG9B,KACA,CAAC2U,IAMD,kBAAC,WAAD,KACE,kBAAC,UAAD,CACE/Y,MACE4jB,GAAU,CACRG,oBAAqB,6BACrBC,cAAe,SAInB,kBAAC,UAAD,CACEhkB,MAAO,CAAEikB,WAAW,GAAD,OAAKL,EAAS,aAAe,WAChDvI,UAAWA,EACXpW,QAAS,kBAAM4e,GAAU,MAE1BD,GACC,kBAAC,UAAD,CAAY3e,QAAS,kBAAM4e,GAAU,IAAQpS,MAAI,EAAC0K,OAAK,GAAvD,iBAKHyH,EACC,yBAAKpiB,UAAU,iBACZkU,EAAOlR,KAAI,SAACuD,GAAD,OACV,kBAAC,UAAD,CACEuB,OAAQvB,EAAKuB,OACb7B,SAAUM,EAAKN,SACf4K,QAAStK,EAAKP,eAKpB,kBAAC,UAAD,KACGuR,EAAMA,OACLA,EAAMA,MAAMvU,KAAI,SAAC6C,EAAM5C,GAAP,OACd,kBAAC,UAAD,CACEE,IAAKF,EACL0E,MAAO9B,EAAK2R,UACZjI,YAAa1J,EAAK0J,YAClBoR,MAAO9a,EAAK+a,UACZC,SAAUhb,EAAKgb,SACfrV,OAAQ3F,EAAK2F,OACb/H,QAAS,kBAxFFoJ,EAwFoBhH,EAAK8F,IAxFjB7D,EAwFsBjC,EAAKiC,YAvFlDjI,OAAO6R,YAAc,IACvB6E,EAAQb,KAAR,gBAAsB7I,IAEtBhF,EACE,CACEgF,SACA/E,UAEF,0BATc,IAAC+E,EAAQ/E,Y,yKC2EzBN,EAAkBC,YAAyB,CAC/CjG,MAAOkF,MAOM1C,sBAAQwD,GAJI,SAACkb,GAAD,MAAe,CACxC1gB,UAAW,SAAC0B,EAAMD,GAAP,OAAmBif,EAAS1gB,YAAU0B,EAAMD,QAG1CO,EA3FQ,SAAC,GAA4C,IAA1CxC,EAAyC,EAAzCA,MAAOQ,EAAkC,EAAlCA,UAAW2gB,EAAuB,EAAvBA,KAAMnkB,EAAiB,EAAjBA,MAAOokB,EAAU,EAAVA,IAAU,EACvC7X,mBAAS,MAD8B,mBAC1D6J,EAD0D,KACnDiO,EADmD,KAGjEhhB,qBAAU,WACR,sBAAC,4BAAAoD,EAAA,+EAE0B6d,YAAkBthB,EAAOohB,GAFnD,OAESpd,EAFT,OAGGqd,EAASrd,GAHZ,gDAKGxD,EAAU,KAAIoL,SALjB,wDAAD,KAQC,CAAC5L,EAAOQ,IAEX,IAAM+gB,EAAc,WAClB,OAAInO,EACKA,EAAMhS,OAAS,EACpBgS,EAAM5R,KAAI,SAACuD,EAAMtD,GAAP,OACR,kBAAC,UAAD,CACE6E,OAAQvB,EAAKuB,OACb7B,SAAUM,EAAKN,SACf4K,QAAStK,EAAKP,SACdxH,MAAOmkB,EAAO,CAAEvT,QAAS,UAAa,CAAEA,QAAS,UACjDjM,IAAKF,GAEL,kBAAC,UAAD,CACE+N,OAAQzK,EAAKoF,IACb1F,SAAUM,EAAKN,SACf6K,WAAW,EACXhJ,OAAQvB,EAAKuB,aAKnB,wBAAI9H,UAAU,oCAAd,iDAMG,kBAAC,UAAD,CAAkBuV,OAAQ,EAAG/W,MAAO,CAAE4Q,QAAS,aAGxD,OACE,yBAAKpP,UAAU,kBAAkBxB,MAAOA,GACtC,kBAAC,WAAD,KACE,yBAAKwB,UAAU,0BACb,wBAAIA,UAAU,mBAAd,uBACC2iB,EAAO,kBAAC,UAAD,KAAOI,KAAwB,6BAAMA,MAE/C,yBAAK/iB,UAAU,0BACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,uBAAd,yBACA,wBAAIA,UAAU,oCAAd,4DAIF,yBAAKA,UAAU,mCACZ4U,GACCA,EAAM5R,KAAI,SAACuD,EAAMtD,GAAP,OACR,kBAAC,UAAD,CACE6E,OAAQvB,EAAKuB,OACb7B,SAAUM,EAAKN,SACfD,SAAUO,EAAKP,SACfuR,MAAOhR,EAAKgR,MACZpU,IAAKF,GAEL,kBAAC,UAAD,CACE+N,OAAQzK,EAAKoF,IACb1F,SAAUM,EAAKN,SACf6K,WAAW,EACXhJ,OAAQvB,EAAKuB,OACbtJ,MAAO,CAAEQ,MAAO,qB,kJCkCrBgkB,UAzGG,SAAC,GAMZ,IALLhS,EAKI,EALJA,OACAxP,EAII,EAJJA,MACAyhB,EAGI,EAHJA,eACAC,EAEI,EAFJA,eACApS,EACI,EADJA,UACI,EACsBqS,qBAAWjV,mBAAkBF,iBADnD,mBACG/J,EADH,KACUE,EADV,KAEEsQ,EAAezM,mBAErBwJ,YAA0B,uCAAC,iCAAAvM,EAAA,yDAASyP,EAAT,EAASA,SAC5B0O,EAAQH,GAAkCC,IAE9CxO,GACAzQ,EAAMkB,KAAKvC,OAASwgB,IACnBnf,EAAM2C,UACN3C,EAAMgK,mBANgB,6BASrB9J,EAAS,CAAEM,KAAM,4BACAqM,EAVI,iCAWXuS,YAAsBrS,EAAQ/M,EAAMkB,KAAKvC,OAAQpB,GAXtC,4DAYX8hB,YAAsBtS,EAAQ/M,EAAMkB,KAAKvC,OAAQpB,GAZtC,4BAUfgE,EAVe,KAarBrB,EAAS,CAAEM,KAAM,YAAa0H,QAAS3G,IAblB,kDAerBrB,EAAS,CAAEM,KAAM,gBAAiB0H,QAAQ,EAAD,KAfpB,0DAAD,sDAkBvBsI,EAAahM,SAEhB,IAAM8a,EAAWvb,iBAAO/D,EAAMkB,MAAMsD,QAC9B+a,EAAexb,iBAAO8I,GAAWrI,QAwBvC,OAtBA5G,qBAAU,WACR,sBAAC,4BAAAoD,EAAA,kEAEGd,EAAS,CAAEM,KAAM,iBACA+e,EAHpB,gCAIaH,YACJrS,EACAuS,EAAWA,EAAS3gB,OAAS,EAC7BpB,GAPT,2DASa8hB,YACJtS,EACAuS,EAAWA,EAAS3gB,OAAS,EAC7BpB,GAZT,4BAGSgE,EAHT,KAcGrB,EAAS,CAAEM,KAAM,gBAAiB0H,QAAS3G,IAd9C,kDAgBGrB,EAAS,CAAEM,KAAM,gBAAiB0H,QAAQ,EAAD,KAhB5C,yDAAD,KAmBC,CAAC6E,EAAQxP,EAAO+hB,EAAUC,IAG3B,6BACExjB,UAAU,qBACV+I,IAAK0L,EACLjW,MAAO,CAAEilB,UAAW,SAElBP,GAAmBD,EAkBjBhf,EAAM2C,SACR,kBAAC,UAAD,MAEA3C,EAAMkB,KAAKnC,KAAI,SAACuD,EAAMtD,GAAP,OACb,kBAAC,UAAD,CACEE,IAAKF,EACL6E,OAAQvB,EAAKuB,OACb7B,SAAUM,EAAKN,SACf4K,QAAStK,EAAKP,SACdgL,OAAQzK,EAAKoF,IACbmF,UAAWvK,EAAKwK,aAEhB,kBAAC,UAAD,CACEC,OAAQzK,EAAKoF,IACbmF,UAAWvK,EAAKwK,YAChB9K,SAAUM,EAAKN,SACf6B,OAAQvB,EAAKuB,aAjCnB,yBAAKtJ,MAAO,CAAE4Q,QAAS,OAAQ8O,UAAW,WACxC,kBAAC,UAAD,CACE1f,MAAO,CAAEwX,OAAQ,UACjBhW,UAAU,eACVb,KAAK,uBAEP,wBAAIa,UAAU,uBACX8Q,EACG,0BACA,8BAEN,wBAAI9Q,UAAU,yBACX8Q,EACG,wDACA,yDAwBT7M,EAAMgK,oBAAsB,kBAAC,UAAD,S,6JCpHtBD,EAAgB,CAC3B0V,SAAS,EACThe,OAAO,EACP+E,QAAS,IAGEkZ,EAA+B,SAAC1f,EAAOkK,GAClD,OAAQA,EAAO1J,MACb,IAAK,qBACH,OAAO,2BAAKR,GAAZ,IAAmByf,SAAS,IAE9B,IAAK,uBACH,OAAO,2BAAKzf,GAAZ,IAAmByf,SAAS,EAAOhe,MAAOyI,EAAOhC,UAEnD,IAAK,uBAAyB,IAAD,EACGgC,EAAOhC,QAA7B1B,EADmB,EACnBA,QAAStG,EADU,EACVA,SAEjB,OADAA,GAAYA,EAAS,CAAEM,KAAM,cAAe0H,QAAS1B,IAC9CuD,EAET,IAAK,6BAA+B,IAAD,EACcG,EAAOhC,QAA9C1B,EADyB,EACzBA,QAAStG,EADgB,EAChBA,SAAUuI,EADM,EACNA,gBAM3B,OALAvI,GACEA,EAAS,CACPM,KAAM,oBACN0H,QAAS,CAAE1B,UAASiC,qBAEjBsB,EAET,IAAK,cACH,OAAO,2BAAK/J,GAAZ,IAAmBwG,QAAS0D,EAAOhC,UAErC,QACE,MAAM,IAAI1G,MAAJ,+BACoB0I,EAAO1J,KAD3B,iD,gCChCZ,iFAMa+F,EAAY,SAAAoZ,GAAa,MAAK,CACzCnf,KAAMwC,IAAWE,WACjBgF,QAASyX,IASE/b,EAAY,SAACxE,EAAOD,GAAR,MAAuB,CAC9CqB,KAAMwC,IAAWC,WACjBiF,QAAS,CAAE9I,QAAOD,gB,wFCsCLygB,UApDG,SAAC,GAOZ,IANLpf,EAMI,EANJA,KACAjG,EAKI,EALJA,MACAyjB,EAII,EAJJA,MACA1S,EAGI,EAHJA,YACAyE,EAEI,EAFJA,WACGzB,EACC,qEAC8BxH,mBAAS,YADvC,mBACG+Y,EADH,KACcC,EADd,KAMJ,OACE,yBACEvlB,MAAK,2BAAOA,GAAP,IAAcwlB,aAAezU,EAAoB,SAAN,MAChD/M,YAAU,kBACVxC,UAAU,cAEV,yCACEA,UAAU,oBACVyE,KAAe,aAATA,EAAsBqf,EAAYrf,EACxC8K,YAAaA,EACb/Q,MAAQ+Q,EAAoC,GAAtB,CAAEH,QAAS,SAC7B4E,EACAzB,IAEN,0BAAMvS,UAAU,2BAA2BuP,GAC3C,yBAAKvP,UAAU,eACK,mBAAViiB,EACNA,EACE,kBAAC,UAAD,CAAMjiB,UAAU,aAAab,KAAK,6BAElC,kBAAC,UAAD,CAAMa,UAAU,YAAYb,KAAK,yBAEjC,KACM,aAATsF,GACC,0BAAMhB,QAAS,WA3BMsgB,EAAb,aAAdD,EAAwC,OAAuB,aA2BrB9jB,UAAU,sBAC7B,aAAd8jB,EAA2B,OAAS,Y,iCC3CjD,OAAe,cAA0B,4C,iCCAzC,0FAWaG,EAAQ,WAEnB,OADgBC,kBAAQ,kBAAC,iBAAD,CAAgB/iB,MAAO,CAAEwB,OAAQ,QAI3DwhB,SAAS,UAAU,WACjBC,KAAK,yBAAyB,WAC5B,IAAMC,EAAUJ,IACV7gB,EAAYkhB,YAAoBD,EAAS,iBAC/CE,OAAOnhB,EAAUohB,UAAUC,oB,oFCYhBC,UA5BA,SAAC,GAKT,IAAD,IAJJxX,gBAII,MAJO0F,EAAQ,KAAuCC,QAItD,EAHJ7S,EAGI,EAHJA,UACAyD,EAEI,EAFJA,QACAjF,EACI,EADJA,MAEMmmB,EAAgB1kB,IAAW,aAC/B6H,QAAQ,GACP9H,EAAYA,IAGf,OACE,yBACEA,UAAW2kB,EACXlhB,QAASA,EACTjF,MAAOA,EACP0S,IAAKhE,EACLiE,IAAI,a,gCCrBV,2BAeeyT,UAZQ,SAAC,GAAyB,IAAvBpmB,EAAsB,EAAtBA,MACxB,OAD8C,EAAfmX,SAE7B,yBAAKnX,MAAOA,EAAOwB,UAAU,8BAE7B,yBAAKxB,MAAOA,EAAOwB,UAAU,sB,8LCMpB6kB,EAAe,SAAAC,GAC1B,OAAOvK,YACLC,IACAsK,EACArK,IAAe,WAAf,cAAmBL,QAWVkK,EAAsB,SAACD,EAASU,GAE3C,OADkBV,EAAQ1W,KAAR,sBAA4BoX,EAA5B,QAYPC,EAAa,SAACC,EAAWC,GAQpC,OAPeC,IACbF,EAAUG,UACVF,EACA,OACAD,EAAU3P,Q,0JC9CDtH,EAAgB,CAC3BpH,UAAU,EACVlB,OAAO,EACP2f,UAAU,EACVC,mBAAoB,IAAIC,IACxBpgB,KAAM,CACJwG,IAAK,KACLhE,MAAO,GACP+C,QAAS,GACTY,OAAQ,KACRL,KAAM,KACN2V,UAAW,GACXC,SAAU,GACVtV,eAAgB,KAIPia,EAAoB,SAACvhB,EAAOkK,GACvC,OAAQA,EAAO1J,MACb,IAAK,qBACH,OAAO,2BAAKR,GAAZ,IAAmB2C,UAAU,EAAOlB,MAAOyI,EAAOhC,UAEpD,IAAK,qBAAuB,IAAD,EAEvBgC,EAAOhC,QAAQoB,aAAe,GAFP,IACjBsT,gBADiB,MACN,GADM,MACFrT,oBADE,MACa,EADb,EAGzB,OAAO,2BACFvJ,GADL,IAEE2C,UAAU,EACVlB,OAAO,EACPP,KAAK,2BACAgJ,EAAOhC,SADR,IAEFZ,eAAgB,GAChBsV,WACArT,mBAIN,IAAK,YAAc,IAAD,EAC0BW,EAAOhC,QAAzC9K,EADQ,EACRA,YAAawL,EADL,EACKA,OAAQ1I,EADb,EACaA,SACzByc,EAAYhK,KAAKqE,MAAMrE,KAAKC,UAAU5S,EAAMkB,KAAKyb,YAarD,QAZgBA,EAAUjT,MAAK,SAACC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAInEiV,EAAYA,EAAUpV,QAAO,SAACoC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAFnEiV,EAAUlL,KAAK,CAAEpK,OAAQjK,EAAYsK,MAIvCxH,GACEA,EAAS,CACPM,KAAM,uBACN0H,QAAS,CAAEU,SAAQ4Y,MAAO7E,EAAUhe,UAGjC,2BACFqB,GADL,IAEEkB,KAAK,2BACAlB,EAAMkB,MADP,IAEFyb,gBAIN,IAAK,eAAiB,IAAD,EACgBzS,EAAOhC,QAAlCC,EADW,EACXA,UAAW/K,EADA,EACAA,YACbwf,EAAWjK,KAAKqE,MAAMrE,KAAKC,UAAU5S,EAAMkB,KAAK0b,WAChD6E,EAAe7E,EAASjE,WAC5B,SAACnS,GAAD,OAAaA,EAAQkB,MAAQS,KAc/B,QAZgByU,EAAS6E,GAAcpY,aAAaK,MAClD,SAACC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAMtCkV,EAAS6E,GAAcpY,aAAeuT,EACpC6E,GACApY,aAAa9B,QAAO,SAACoC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAJ5DkV,EAAS6E,GAAcpY,aAAaoI,KAAK,CAAEpK,OAAQjK,EAAYsK,MAO1D,2BACF1H,GADL,IAEEkB,KAAK,2BACAlB,EAAMkB,MADP,IAEF0b,eAIN,IAAK,cACH,IAAIpW,EAAU0D,EAAOhC,QACjBmZ,EAAqB,IAAIC,IAAIthB,EAAMqhB,oBAKvC,OAJKK,MAAMC,QAAQnb,KACjB6a,EAAmBO,IAAIpb,EAAQkB,KAC/BlB,EAAU,CAACA,IAEN,2BACFxG,GADL,IAEEqhB,qBACAngB,KAAK,2BACAlB,EAAMkB,MADP,IAEF0b,SAAS,GAAD,mBAAM5c,EAAMkB,KAAK0b,UAAjB,YAA8BpW,QAI5C,IAAK,iBACH,IAAM2B,EAAY+B,EAAOhC,QACnBmZ,EAAqB,IAAIC,IAAIthB,EAAMqhB,oBAGzC,OAFAA,EAAmBQ,IAAI1Z,IAAckZ,EAAmBS,OAAO3Z,GAExD,2BACFnI,GADL,IAEEkB,KAAK,2BACAlB,EAAMkB,MADP,IAEFmgB,qBACAzE,SAAU5c,EAAMkB,KAAK0b,SAASrV,QAC5B,SAACf,GAAD,OAAaA,EAAQkB,MAAQS,KAE/BoB,aAAcvJ,EAAMkB,KAAKqI,aAAe,MAI9C,IAAK,oBAAsB,IAAD,EACuBW,EAAOhC,QAAvC6Z,EADS,EAClBvb,QAAqBiC,EADH,EACGA,gBACrBmU,EAAWjK,KAAKqE,MAAMrE,KAAKC,UAAU5S,EAAMkB,KAAK0b,WAChDoF,EAAqBpF,EAASjE,WAClC,SAACnS,GAAD,OAAaA,EAAQkB,MAAQe,KAE/B,IAAKiZ,MAAMC,QAAQI,GAAa,CAC9B,IAAMta,EAAgBmV,EAASoF,GAG/BD,EAAa,CAACA,GACdta,EAAcH,eAAiBG,EAAcH,eACzCG,EAAcH,eAAiB,EAC/B,EAEN,OAAO,2BACFtH,GADL,IAEEkB,KAAK,2BACAlB,EAAMkB,MADP,IAEF0b,WACAtV,eAAe,GAAD,mBAAMtH,EAAMkB,KAAKoG,gBAAjB,YAAoCya,QAIxD,IAAK,uBAAyB,IAAD,EACiB7X,EAAOhC,QAA3CsH,EADmB,EACnBA,eAAgB/G,EADG,EACHA,gBAClBmU,EAAWjK,KAAKqE,MAAMrE,KAAKC,UAAU5S,EAAMkB,KAAK0b,WAChD6E,EAAe7E,EAASjE,WAC5B,SAACnS,GAAD,OAAaA,EAAQkB,MAAQe,KAI/B,OAFAmU,EAAS6E,GAAcna,gBAAkB,EAElC,2BACFtH,GADL,IAEEkB,KAAK,2BACAlB,EAAMkB,MADP,IAEF0b,WACAtV,eAAgBtH,EAAMkB,KAAKoG,eAAeC,QACxC,SAACC,GAAD,OAAkBA,EAAaE,MAAQ8H,SAK/C,IAAK,qBAAuB,IAAD,EACetF,EAAOhC,QAAvCsH,EADiB,EACjBA,eAAgBpS,EADC,EACDA,YAClBkK,EAAiBqL,KAAKqE,MAC1BrE,KAAKC,UAAU5S,EAAMkB,KAAKoG,iBAEtB2a,EAAoBjiB,EAAMkB,KAAKoG,eAAeqR,WAClD,SAACnR,GAAD,OAAkBA,EAAaE,MAAQ8H,KAezC,QAbgBlI,EAAe2a,GAAmBpS,kBAAkBnG,MAClE,SAACC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAOtCJ,EAAe2a,GAAmBpS,kBAAoBvI,EACpD2a,GACApS,kBAAkBtI,QAAO,SAACoC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OANjEJ,EAAe2a,GAAmBpS,kBAAkB4B,KAAK,CACvDpK,OAAQjK,EAAYsK,MAQjB,2BACF1H,GADL,IAEEkB,KAAK,2BACAlB,EAAMkB,MADP,IAEFoG,qBAIN,IAAK,eAAiB,IAAD,EACa4C,EAAOhC,SAAW,GAA1ClG,EADW,EACXA,SAAUmG,EADC,EACDA,UAClB,OAAInG,GAAYmG,EAGZnI,EAAMohB,SAASjZ,YAAcA,GAC7BnI,EAAMohB,SAASc,cAAgBlgB,EAExBhC,EAEF,2BAAKA,GAAZ,IAAmBohB,SAAU,CAAEc,YAAalgB,EAAUmG,eAE/C,2BAAKnI,GAAZ,IAAmBohB,UAAU,IAGjC,QACE,MAAM,IAAI5f,MAAJ,+BACoB0I,EAAO1J,KAD3B,sC,gCC/MZ,8CAEa2hB,EAAY,iBAAO,CAC9B3hB,KAAM+W,IAAWE,aAGN1Z,EAAY,SAAC0B,GAAD,IAAOD,EAAP,uDAAiB,KAAjB,OAA0B,SAACU,EAAUkiB,GAC5D,IAAMpiB,EAAQoiB,IACdC,aAAariB,EAAM7C,MAAMka,WACzB,IAAMiL,EAAUC,YAAW,WACzBriB,EAASiiB,KACTjiB,EAAS,CAAEM,KAAM+W,IAAWG,qBAAsBxP,QAAS,SAC1D,KACHhI,EAAS,CAAEM,KAAM+W,IAAWG,qBAAsBxP,QAASoa,IAIvDtiB,EAAM7C,MAAMY,WACdmC,EAASiiB,KACTI,YAAW,WACTriB,EAAS,CACPM,KAAM+W,IAAWC,WACjBtP,QAAS,CAAEzI,OAAMD,eAElB,MAEHU,EAAS,CACPM,KAAM+W,IAAWC,WACjBtP,QAAS,CAAEzI,OAAMD,gB,iICrBjBgjB,EAAe,CACnBlX,YAAa,OACb9K,KAAM,OACNuE,SAAU0d,KAAKC,KACfjX,UAAU,GAQCuU,EAAQ,WAAwB,IAAvB2C,EAAsB,uDAAP,GAC7BC,EAAU,2BAAQJ,GAAiBG,GACnCvC,EAAUH,kBAAQ,kBAAC,UAAc2C,IACvC,OAAOxC,GAGTF,SAAS,UAAU,WACjBC,KAAK,yBAAyB,WAC5B,IAAMC,EAAUJ,IACV7gB,EAAYkhB,YAAoBD,EAAS,mBAC/CE,OAAOnhB,EAAUohB,UAAUC,mBAI/BL,KAAK,4CAA4C,WAC/C,IAAMlQ,EAAS8Q,YAAWnB,UAAW4C,GACrClC,OAAOrQ,GAAQ4S,oB,mICwEFC,UArGK,SAAC,GAA6C,IAA3C7R,EAA0C,EAA1CA,aAAckC,EAA4B,EAA5BA,gBAA4B,KAAXjB,KAChBpL,mBAAS,CAC3C+L,KAAM,CAAEkQ,KAAM,IAAKC,OAAQ,GAAK,GAChCC,YAAY,KAHiD,mBACxDC,EADwD,KAC5CC,EAD4C,KAKzDC,EAAWrf,mBAEXsf,EAAgB,SAAC3f,EAAOmP,GAC5B,IAAMyQ,EAAS1kB,SAAS6P,cAAc,UAChC8U,EAAS7f,EAAM8f,aAAe9f,EAAM3I,MACpC0oB,EAAS/f,EAAMggB,cAAgBhgB,EAAM0F,OAiB3C,OAhBAka,EAAOvoB,MAAQ8X,EAAK9X,MACpBuoB,EAAOla,OAASyJ,EAAKzJ,OACTka,EAAOK,WAAW,MAE1BC,UACFlgB,EACAmP,EAAKuC,EAAImO,EACT1Q,EAAKwC,EAAIoO,EACT5Q,EAAK9X,MAAQwoB,EACb1Q,EAAKzJ,OAASqa,EACd,EACA,EACA5Q,EAAK9X,MACL8X,EAAKzJ,QAGA,IAAIya,SAAQ,SAACC,EAASC,GAC3BT,EAAOU,QAAO,SAACC,GACb,GAAKA,EAAL,CAKAA,EAAK5S,KAAO,eACZ,IAAM6S,EAAUtoB,OAAOyhB,IAAI8G,gBAAgBF,GAC3CH,EAAQI,QALN1G,QAAQ/b,MAAM,qBAMf,kBAID2iB,EAAc,uCAAG,WAAOvR,GAAP,eAAA7R,EAAA,yDACrBpF,OAAOyhB,IAAIC,gBAAgBrM,EAAahE,OACpCiW,EAAWE,UAAYvQ,EAAK9X,OAAS8X,EAAKzJ,QAFzB,gCAGWia,EAC5BH,EAAWE,SACXvQ,GALiB,OAGbwR,EAHa,OAQnBlR,EAAgB,CAAElG,IAAKoX,EAAiBxR,SACxCsQ,GAAc,SAAC7a,GAAD,mBAAC,eAAmBA,GAApB,IAA8B2a,YAAY,OATrC,2CAAH,sDA4BpB,OACE,kBAAC,WAAD,KACE,yBAAKlnB,UAAU,qBACb,yBAAKA,UAAU,qCACb,kBAAC,IAAD,CACEkR,IAAKgE,EAAahE,IAClB4F,KAAMqQ,EAAWrQ,KACjB9N,SAtBW,SAAC8N,EAAMyR,GAC1BnB,GAAc,SAAC7a,GAAD,mBAAC,eACVA,GADS,IAEZuK,aAoBM0R,cAhBY,SAAC7gB,GACrByf,GAAc,SAAC7a,GAAD,mBAAC,eAAmBA,GAApB,IAA8B8a,SAAU1f,QAgB9C8gB,YAbU,WAClBrB,GAAc,SAAC7a,GAAD,mBAAC,eAAmBA,GAApB,IAA8B2a,YAAY,QAahD1oB,MAAO,CAAEQ,MAAO,OAAQqO,OAAQ,QAChCtE,IAAKse,EACLqB,WAAY,CACV1pB,MAAO,OACPqO,OAAQ,OACRgK,UAAW,UACX7L,OAAQ0J,EAAa1J,QAEvBmd,cAAY,IAEd,kBAAC,UAAD,CACExpB,KAAK,oBACLa,UAAU,wBACVxB,MAAO2oB,EAAWD,WAAa,CAAEroB,QAAS,gBAAmB,GAC7D4E,QAAS,kBAAM4kB,EAAelB,EAAWrQ,c,qGCnBtC8R,UAzEO,SAAC,GAMhB,IALL9V,EAKI,EALJA,KACAtK,EAII,EAJJA,QACArI,EAGI,EAHJA,SACA8Y,EAEI,EAFJA,MAEI,IADJ4P,oBACI,SAYJ,OAXoB9mB,aAAc,EAAM,KAAM,CAC5CE,KAAM,CAAEC,UAAW,aAAc4mB,QAAS,IAC1C3mB,MAAO,CAAED,UAAW,WAAY4mB,QAAS,GACzC1mB,MAAO,CAAE0mB,QAAS,GAClBzmB,OAAQ,CACN0mB,KAAM,EACNzmB,QAAS,IACTC,SAAU,MAIKS,KAAI,cAAGO,KAAH,IAASJ,EAAT,EAASA,IAAKE,EAAd,EAAcA,MAAd,OACrB,kBAAC,IAASiP,IAAV,CAAc9T,MAAO6E,EAAOF,IAAKA,EAAKnD,UAAU,kBAC7CiZ,GACC,4BAAQjZ,UAAU,yBAChB,wBAAIA,UAAU,aAAaiZ,IACzB4P,GACA,kBAAC,UAAD,CAAYrqB,MAAO,CAAE0Y,SAAU,QAAUzT,QAAS,kBAAMqP,MAAxD,WAML3S,EACAqI,EAAQxF,KAAI,SAACgmB,EAAQ/lB,GACpB,IAAMgmB,EAAmBhpB,IAAW,aAClC,0BAA0B,EAC1B,kCAAmC+oB,EAAOrgB,SACzCqgB,EAAOhpB,UAAYgpB,EAAOhpB,YAE7B,OACE,4BACEyD,QAAS,SAACyE,GACJ8gB,EAAO/Q,eAAe,aACxB/P,EAAMghB,kBACNF,EAAOvlB,UACPqP,MAGJ9S,UAAWipB,EACX9lB,IAAKF,GAEJ+lB,EAAOtlB,SAIbmlB,GACC,4BACE7oB,UAAU,yBACVyD,QAAS,SAACyE,GACRA,EAAMihB,YAAYC,2BAClBtW,MAJJ,gB,iCC7DR,mDAWMuW,EAAgB,CACpBxc,OAAQ,MACR5G,SAAU,OACV4E,gBAAiB6b,KAAKC,MASlB1C,EAAQ,WAER,IADJa,EACG,uDADY,CAAEve,KAAM,CAAE/E,MAAO,MAAOH,YAAa,CAAE4E,SAAU,UAE1DqU,EAAQuK,YAAaC,GACrBT,EAAUH,kBACd,kBAAC,UAAD,eAAY5J,MAAOA,GAAW+O,KAC9BC,OACF,OAAOjF,GAGTD,KAAK,yBAAyB,WAC5B,IAAMC,EAAUJ,IAAQqF,OAClBlmB,EAAYkhB,YAAoBD,EAAS,yBAC/CE,OAAOnhB,EAAUohB,UAAUC,gBAG7BN,SAAS,eAAe,WACtBC,KAAK,oCAAoC,WACvC,IAAMC,EAAUJ,IAChBM,OAAOF,EAAQhhB,QAAQ7B,OAAO+nB,KAAK,UAGrCnF,KAAK,0CAA0C,WAC7C,IAAMC,EAAUJ,IAChBM,OAAOF,EAAQhhB,QAAQhC,aAAamoB,QAAQ,CAAEvjB,SAAU,eAI5Dme,KAAK,4CAA4C,WAC/C,IAAMlQ,EAAS8Q,YAAWyE,UAAYJ,GACtC9E,OAAOrQ,GAAQ4S,oB,mHC7CjBJ,KAAKgD,KAAK,oCAEV,IAAML,EAAgB,CACpB7nB,MAAO,MACPqL,OAAQ,MACR8c,YAAa,GACb/e,eAAgB8b,KAAKC,KACrB9b,gBAAiB6b,KAAKC,KACtBtB,UAAU,GASNpB,EAAQ,WAA2B,IAA1B1R,EAAyB,uDAAP,GACzB8R,EAAUH,kBACd,kBAAC,UAAD,iBAA2BmF,EAAmB9W,KAEhD,OAAO8R,GAGTD,KAAK,yBAAyB,WAC5B,IAAMC,EAAUJ,IACV7gB,EAAYkhB,YAChBD,EACA,qCAGFE,OAAOnhB,EAAUohB,UAAUC,gBAG7BL,KAAK,4CAA4C,WAC/C,IAAMlQ,EAAS8Q,YAAW4E,UAAuBP,GAEjD9E,OAAOrQ,GAAQ4S,mBAGjB3C,SAAS,cAAc,WACrB0F,YAAW,WACTC,IAAcC,eAGhB3F,KAAK,gEAAgE,WACnE0F,IAAcE,kBAAkB,IAChC,IAAM3F,EAAUJ,IACHK,YACXD,EACA,qCAIG4F,SAAS,SAAU,CAAE1hB,eAAgBme,KAAKC,OAE/CpC,OAAOuF,KAAeI,sBAAsB,MAG9C9F,KAAK,mDAAD,sBAAqD,8BAAAnf,EAAA,6DACvDsf,OAAO4F,WAAW,GAClBL,IAAcE,kBAAkB,CAC9Bre,IAAK,MACLyB,QAAS,eACT9B,OAAQ,CAAEK,IAAK,MAAO1F,SAAU,QAChCgF,KAAMa,KAAKse,MACXxJ,UAAW,GACXC,SAAU,KAENwD,EAAUJ,IACVoG,EAAO/F,YACXD,EACA,qCAIYC,YAAoBD,EAAS,+BACrC4F,SAAS,SAAU,CAAEtrB,OAAQ,CAAE8Q,MAAO,UAG5C4a,EAAKJ,SAAS,SAAU,CAAE1hB,eAAgBme,KAAKC,OArBQ,SAuBjDpC,OAAOuF,KAAeI,sBAAsB,GAvBK,gD,2DC9D3D9F,KAAK,8DAA8D,WACjE,IAAMkG,EAAW3G,uCAA6B3V,gBAAe,CAC3DvJ,KAAM,uBAGR8f,OAAO+F,GAAUd,QAAjB,2BAA8Bxb,iBAA9B,IAA6C0V,SAAS,QAGxDU,KAAK,gEAAgE,WACnE,IAAMkG,EAAW3G,uCAA6B,2BAEvC3V,iBAFsC,IAGzC0V,SAAS,IAEX,CAAEjf,KAAM,uBAAwB0H,QAAS,UAG3CoY,OAAO+F,GAAUd,QAAjB,2BACKxb,iBADL,IAEE0V,SAAS,EACThe,MAAO,cAIX0e,KAAK,mFAAmF,WACtF,IAAMmG,EAAe7D,KAAKC,KACpB2D,EAAW3G,uCAA6B3V,gBAAe,CAC3DvJ,KAAM,uBACN0H,QAAS,CAAE1B,QAAS,OAAQtG,SAAUomB,KAGxChG,OAAO+F,GAAUd,QAAQxb,iBACzBuW,OAAOgG,GAAcL,sBAAsB,MAG7C9F,KAAK,yFAAyF,WAC5F,IAAMmG,EAAe7D,KAAKC,KACpB2D,EAAW3G,uCAA6B3V,gBAAe,CAC3DvJ,KAAM,6BACN0H,QAAS,CAAE1B,QAAS,OAAQtG,SAAUomB,EAAc7d,gBAAiB,SAGvE6X,OAAO+F,GAAUd,QAAQxb,iBACzBuW,OAAOgG,GAAcL,sBAAsB,MAG7C9F,KAAK,uDAAuD,WAC1D,IAAMkG,EAAW3G,uCAA6B3V,gBAAe,CAC3DvJ,KAAM,cACN0H,QAAS,iBAGXoY,OAAO+F,GAAUd,QAAjB,2BAA8Bxb,iBAA9B,IAA6CvD,QAAS,qBAGxD2Z,KAAK,iDAAiD,WACpDG,QAAO,kBACLZ,uCAA6B3V,gBAAe,CAAEvJ,KAAM,YACpD+lB,c,4VCrDSV,EAAa,uCAAG,WAAO1c,EAASP,EAAQvI,GAAxB,eAAAW,EAAA,+EAEFK,IAAMO,KAAN,uBACLgH,GAChB,CAAEO,WACF,CACEhI,QAAS,CACPC,cAAef,KAPI,cAEnBkB,EAFmB,yBAWlBA,EAASL,MAXS,sCAanB,IAAIM,MAAJ,MAbmB,yDAAH,0DAuBbqH,EAAa,uCAAG,WAAOV,EAAW9H,GAAlB,SAAAW,EAAA,+EAEnBK,IAAMygB,OAAN,uBAA6B3Z,GAAa,CAC9ChH,QAAS,CACPC,cAAef,KAJM,4DAQnB,IAAImB,MAAJ,MARmB,wDAAH,wDAkBb4G,EAAW,uCAAG,WAAOD,EAAW9H,GAAlB,SAAAW,EAAA,+EAEjBK,IAAMO,KAAN,uBAA2BuG,EAA3B,SAA6C,KAAM,CACvDhH,QAAS,CAAEC,cAAef,KAHL,4DAMjB,IAAImB,MAAJ,MANiB,wDAAH,wDAkBXglB,EAAkB,uCAAG,WAChCrd,EACAV,EACApI,GAHgC,eAAAW,EAAA,+EAMPK,IAAMO,KAAN,uBACL6G,EADK,UAErB,CAAEU,WACF,CACEhI,QAAS,CACPC,cAAef,KAXS,cAMxBkB,EANwB,yBAevBA,EAASL,MAfc,sCAiBxB,IAAIM,MAAJ,MAjBwB,yDAAH,0DA2BlBmO,EAAkB,uCAAG,WAAOH,EAAgBnP,GAAvB,SAAAW,EAAA,+EAExBK,IAAMygB,OAAN,uBAA6BtS,EAA7B,UAAqD,CACzDrO,QAAS,CACPC,cAAef,KAJW,4DAQxB,IAAImB,MAAJ,MARwB,wDAAH,wDAkBlBiO,EAAgB,uCAAG,WAAOD,EAAgBnP,GAAvB,SAAAW,EAAA,+EAEtBK,IAAMO,KAAN,uBAA2B4N,EAA3B,cAAuD,KAAM,CACjErO,QAAS,CAAEC,cAAef,KAHA,4DAMtB,IAAImB,MAAJ,MANsB,wDAAH,wDAiBhB+G,EAAiB,uCAAG,WAAOE,GAAP,6BAAAzH,EAAA,6DAAwBoJ,EAAxB,+BAAiC,EAAjC,kBAEN/I,IAAMgJ,IAAN,uBACL5B,EADK,YACc2B,EADd,aAFM,cAEvB7I,EAFuB,yBAKtBA,EAASL,MALa,sCAOvB,IAAIM,MAAJ,MAPuB,yDAAH,sDAmBjBilB,EAAW,uCAAG,WAAO7d,EAAQwB,GAAf,6BAAApJ,EAAA,6DAAuB0lB,EAAvB,+BAAiC,EAAjC,kBAEArlB,IAAMgJ,IAAN,uBACLzB,EADK,YACKwB,EADL,YACesc,IAHf,cAEjBnlB,EAFiB,yBAKhBA,EAASL,MALO,sCAOjB,IAAIM,MAAJ,MAPiB,yDAAH,yD,mECpJlBgF,EAAU,CACdkB,IAAK,MACLyB,QAAS,OACT9B,OAAQ,CAAEK,IAAK,MAAO1F,SAAU,QAChCJ,KAAM,QACNoF,KAAM,YACNM,eAAgB,EAChB+B,aAAc,IAGVzH,EAAO,CACX8F,IAAK,QACLhE,MAAO,gBACP+C,QAAS,YACTY,OAAQ,CAAErF,SAAU,QACpBgF,KAAM,YACN2V,UAAW,CAAC,CAAE6E,MAAO,KACrB5E,SAAU,CAACpW,GACXc,eAAgB,IAGZhF,EAAO,CAAEoF,IAAK,MAAO1F,SAAU,QAE/B2kB,EAAc,CAClBhkB,UAAU,EACVlB,OAAO,EACP2f,UAAU,EACVlgB,KAAMU,GAGRue,KAAK,iDAAiD,WACpDG,QAAO,kBAAMiB,4BAAkB,KAAM,CAAE/gB,KAAM,SAAU+lB,gBAGzDpG,KAAK,8DAA8D,WACjE,IAAM1e,EAAQ,SACR4kB,EAAW9E,4BAAkBxX,gBAAe,CAChDvJ,KAAM,qBACN0H,QAASzG,IAGX6e,OAAO+F,GAAUd,QAAjB,2BACKxb,iBADL,IAEEpH,UAAU,EACVlB,cAIJ0e,KAAK,8DAA8D,WACjE,IAAMkG,EAAW9E,4BAAkBxX,gBAAe,CAChDvJ,KAAM,qBACN0H,QAAStG,IAGX0e,OAAO+F,GAAUd,QAAQ,CACvB5iB,UAAU,EACVlB,OAAO,EACP2f,UAAU,EACVlgB,KAAMU,OAIVue,KAAK,wEAAwE,WAC3E,IAAMyG,EAAenE,KAAKC,KACpB2D,EAAW9E,4BAAkBoF,EAAa,CAC9CnmB,KAAM,YACN0H,QAAS,CACP9K,YAAakF,EACbsG,OAAQ,MACR1I,SAAU0mB,KAIdtG,OAAO+F,GAAUd,QAAQ,CACvB5iB,UAAU,EACVlB,OAAO,EACP2f,UAAU,EACVlgB,KAAK,2BACAU,GADD,IAEF+a,UAAW,CAAC,CAAE6E,MAAO,CAAC,CAAEna,OAAQ/E,EAAKoF,YAIzC4Y,OAAOsG,GAAcX,sBAAsB,MAG7C9F,KAAK,0FAA0F,WAC7F,IAAMkG,EAAW9E,4BAAkBoF,EAAa,CAC9CnmB,KAAM,eACN0H,QAAS,CAAEC,UAAW,MAAO/K,YAAakF,KAG5Cge,OAAO+F,GAAUd,QAAjB,2BACKoB,GADL,IAEEzlB,KAAK,2BACAylB,EAAYzlB,MADb,IAEF0b,SAAU,CAAC,2BAAKpW,GAAN,IAAe6C,aAAc,CAAC,CAAEhC,OAAQ/E,EAAKoF,iBAK7DyY,KAAK,uDAAuD,WAC1D,IAAM4B,EAAa,CACjBra,IAAK,MACLyB,QAAS,QACT9B,OAAQ/E,EACRV,KAAM,QACNoF,KAAM,YACNM,eAAgB,EAChB+B,aAAc,IAEVgd,EAAW9E,4BAAkBoF,EAAa,CAC9CnmB,KAAM,cACN0H,QAAS6Z,IAGXzB,OAAO+F,GAAUd,QAAjB,2BACKoB,GADL,IAEEzlB,KAAK,2BACAylB,EAAYzlB,MADb,IAEF0b,SAAS,GAAD,mBAAM+J,EAAYzlB,KAAK0b,UAAvB,CAAiCmF,YAK/C5B,KAAK,0DAA0D,WAC7D,IAAMkG,EAAW9E,4BAAkBoF,EAAa,CAC9CnmB,KAAM,iBACN0H,QAAS1B,EAAQkB,MAGnB4Y,OAAO+F,GAAUd,QAAjB,2BACKoB,GADL,IAEEzlB,KAAK,2BAAMylB,EAAYzlB,MAAnB,IAAyB0b,SAAU,WAI3CsD,SAAS,iBAAiB,WACxB,IAAI1Y,OAAeqf,EACnBjB,YAAW,WACTpe,EAAe,CACbE,IAAK,MACLD,cAAejB,EAAQkB,IACvByB,QAAS,gBACT9B,OAAQ/E,EACRuN,kBAAmB,OAIvBsQ,KAAK,6DAA6D,WAChE,IAAMkG,EAAW9E,4BAAkBoF,EAAa,CAC9CnmB,KAAM,oBACN0H,QAAS,CACP1B,QAASgB,EACTiB,gBAAiBjC,EAAQkB,OAI7B4Y,OAAO+F,GAAUd,QAAjB,2BACKoB,GADL,IAEEzlB,KAAK,2BACAylB,EAAYzlB,MADb,IAEF0b,SAAU,CAAC,2BAAKpW,GAAN,IAAec,eAAgB,KACzCA,eAAgB,CAACE,WAKvB2Y,KAAK,gEAAgE,WACnE,IAAMkG,EAAW9E,4BAAkB,2BAE5BoF,GAF2B,IAG9BzlB,KAAK,2BACAylB,EAAYzlB,MADb,IAEFoG,eAAgB,CAACE,GACjBoV,SAAU,CAAC,2BAAKpW,GAAN,IAAec,eAAgB,SAG7C,CACE9G,KAAM,uBACN0H,QAAS,CACPsH,eAAgBhI,EAAaE,IAC7Be,gBAAiBjC,EAAQkB,OAK/B4Y,OAAO+F,GAAUd,QAAjB,2BACKoB,GADL,IAEEzlB,KAAK,2BACAylB,EAAYzlB,MADb,IAEF0b,SAAU,CAAC,2BAAKpW,GAAN,IAAec,eAAgB,KACzCA,eAAgB,WAKtB6Y,KAAK,8DAA8D,WACjE,IAAMkG,EAAW9E,4BAAkB,2BAE5BoF,GAF2B,IAG9BzlB,KAAK,2BACAylB,EAAYzlB,MADb,IAEFoG,eAAgB,CAACE,GACjBoV,SAAU,CAAC,2BAAKpW,GAAN,IAAec,eAAgB,SAG7C,CACE9G,KAAM,qBACN0H,QAAS,CAAEsH,eAAgBhI,EAAaE,IAAKtK,YAAakF,KAI9Dge,OAAO+F,GAAUd,QAAjB,2BACKoB,GADL,IAEEzlB,KAAK,2BACAylB,EAAYzlB,MADb,IAEF0b,SAAU,CAAC,2BAAKpW,GAAN,IAAec,eAAgB,KACzCA,eAAgB,CAAC,2BACVE,GADS,IACKqI,kBAAmB,CAAC,CAAExI,OAAQ/E,EAAKoF,oBAOhEyY,KAAK,wDAAwD,WAC3D,IAAMkG,EAAW9E,4BAAkBoF,EAAa,CAC9CnmB,KAAM,eACN0H,QAAS,CAAElG,SAAUM,EAAKN,SAAUmG,UAAW3B,EAAQkB,OAGzD4Y,OAAO+F,GAAUd,QAAjB,2BACKoB,GADL,IAEEvF,SAAU,CAAEc,YAAa5f,EAAKN,SAAUmG,UAAW3B,EAAQkB,Y,2FCjOzDof,EAAkB,CAAEpf,IAAK,MAAO1F,SAAU,OAAQ+U,UAAW,IAE7DqO,EAAgB,CACpBxjB,KAAM,CACJ8F,IAAK,MACLhE,MAAO,gBACP+C,QAAS,OACTY,OAAO,eAAMyf,GACbnK,UAAW,CAAC,CAAE6E,MAAO,KACrBxa,KAAMa,KAAKse,OAEb5oB,MAAO,QACPH,YAAa0pB,EACb5mB,SAAUuiB,KAAKC,KACf9b,gBAAiB6b,KAAKC,KACtBqE,aAActE,KAAKC,MASf1C,EAAQ,WAA8C,IAA7Ca,EAA4C,uDAA7B,GAAIvS,EAAyB,uDAAP,GAC5C+H,EAAQuK,YAAaC,GACrBT,EAAUH,kBACd,kBAAC,UAAD,eAAiB5J,MAAOA,GAAW+O,EAAmB9W,KACtD+W,OACF,OAAOjF,GAGTD,KAAK,yBAAyB,WAC5B,IAAMC,EAAUJ,IACV7gB,EAAYkhB,YAAoBD,EAAS,+BAE/CE,OAAOnhB,EAAUohB,UAAUC,gBAG7BL,KAAK,4CAA4C,WAC/C,IAAMlQ,EAAS8Q,YAAWiG,UAAiB5B,GAC3C9E,OAAOrQ,GAAQ4S,mBAGjB1C,KAAK,8CAA8C,WACjD,IAAMmG,EAAe7D,KAAKC,KACpBtC,EAAUJ,EAAM,GAAI,CAAE9f,SAAUomB,IACnBjG,YAAoBD,EAAS,yBAErC4F,SAAS,QAAS,CAC3Bd,YAAa,CAAEC,yBAA0B1C,KAAKC,QAEhDpC,OAAOgG,GAAcL,sBAAsB,O,gCC/D7C,2BAMegB,UAJW,SAAC,GAAD,IAAG/qB,EAAH,EAAGA,SAAH,OACxB,yBAAKH,UAAU,6BAA6BG,K,gZCYjCwd,EAAU,kBAAM,SAACxZ,GAC5B1C,aAAa0pB,WAAW,SACxBhnB,EAASiZ,eACTjZ,EAAS,CAAEM,KAAMwE,IAAUI,aAgBhBnI,EAAc,SAACkD,EAAiBC,EAAUC,GAA5B,8CAA0C,WACnEH,GADmE,eAAAc,EAAA,sEAIjEd,EAAS,CAAEM,KAAMwE,IAAUC,gBAJsC,SAK1ClE,YAAMZ,EAAiBC,EAAUC,GALS,OAK3DkB,EAL2D,OAMjErB,GAnB0BoC,EAmBHf,EAlBzB/D,aAAa7B,QAAQ,QAAS2G,EAAK/E,OAC5B,CACLiD,KAAMwE,IAAUG,gBAChB+C,QAAS5F,KASwD,gDAQ7DjC,GAAWH,EAASwZ,GACxBxZ,GAd0BinB,EAcH,KAAIhe,QAdQ,CACrC3I,KAAMwE,IAAUE,gBAChBgD,QAASif,KAG0D,kCALxC,IAACA,EARA7kB,IAauC,oBAA1C,uDAad8kB,EAAoB,SAACzlB,GAAD,8CAAU,WAAOzB,GAAP,eAAAc,EAAA,sEAEvCd,EAAS,CAAEM,KAAMwE,IAAUO,uBAFY,SAGhB7D,YAAqBC,GAHL,OAGjCJ,EAHiC,OAIvC/D,aAAa7B,QAAQ,QAAS4F,EAAShE,OACvC2C,EAAS,CAAEM,KAAMwE,IAAUS,uBAAwByC,QAAS3G,IALrB,gDAOvCrB,EAAS,CAAEM,KAAMwE,IAAUQ,uBAAwB0C,QAAS,KAAIiB,UAPzB,yDAAV,uDAWpB0U,EAAc,SAAC/b,EAAOC,EAAUC,EAAU5B,GAA5B,8CAAyC,WAClEF,GADkE,eAAAc,EAAA,sEAIhEd,EAAS,CAAEM,KAAMwE,IAAUC,gBAJqC,SAKzCpD,YAAaC,EAAOC,EAAUC,EAAU5B,GALC,OAK1DmB,EAL0D,OAMhErB,EAASjD,EAAY,KAAM,KAAMsE,EAAShE,QANsB,gDAQhE2C,EAAS,CAAEM,KAAMwE,IAAUM,gBAAiB4C,QAAS,KAAIiB,UARO,yDAAzC,uDAYd4d,EAAe,SAACne,EAAQvI,GAAT,8CAAuB,WAAOH,GAAP,eAAAc,EAAA,+EAExBiW,YAASrO,EAAQvI,GAFO,OAEzCkB,EAFyC,OAG/CrB,EAAS,CACPM,KAAMwE,IAAUU,cAChBwC,QAAQ,2BAAM3G,GAAP,IAAiBqH,aALqB,wIAAvB,uDAYfnF,EAAoB,SAAC8O,EAAUlS,GAAX,8CAAyB,WAAOH,GAAP,eAAAc,EAAA,sEAEtDd,EAAS,CAAEM,KAAMwE,IAAUW,sBAF2B,SAG/B3B,YAAauO,EAAUlS,GAHQ,OAGhDkB,EAHgD,OAItDrB,EAAS,CACPM,KAAMwE,IAAUY,sBAChBsC,QAAS3G,EAASsC,SANkC,gDAStD3D,EAAS,CACPM,KAAMwE,IAAUa,sBAChBqC,QAAS,KAAIiB,UAXuC,yDAAzB,uDAgBpBxF,EAAoB,SAACtD,GAAD,8CAAe,WAAOH,GAAP,SAAAc,EAAA,sEAE5Cd,EAAS,CAAEM,KAAMwE,IAAUc,sBAFiB,SAGtCuhB,YAAahnB,GAHyB,OAI5CH,EAAS,CAAEM,KAAMwE,IAAUe,wBAJiB,gDAM5C7F,EAAS,CAAEM,KAAMwE,IAAUgB,sBAAuBkC,QAAS,KAAIiB,UANnB,yDAAf,uDAUpB+Q,EAAqB,SAAC7Z,EAAW8Z,GAAZ,8CAAwB,WAAOja,GAAP,eAAAc,EAAA,sEAEtDd,EAAS,CAAEM,KAAMwE,IAAUiB,uBAF2B,SAG/BqhB,YAAcjnB,EAAW8Z,GAHM,OAGhD5Y,EAHgD,OAItDrB,EAAS,CAAEM,KAAMwE,IAAUmB,uBAAwB+B,QAAS3G,IAJN,gDAMtDrB,EAAS,CAAEM,KAAMwE,IAAUkB,uBAAwBgC,QAAS,KAAIiB,UANV,yDAAxB,wD,8XCnGrBoe,EAAO,uCAAG,WAAO3e,GAAP,eAAA5H,EAAA,+EAEIK,IAAMgJ,IAAN,oBAAuBzB,IAF3B,cAEbrH,EAFa,yBAGZA,EAASL,MAHG,sCAKb,IAAIM,MAAM,KAAID,SAASL,KAAKO,OALf,yDAAH,sDAcP+lB,EAAQ,uCAAG,WAAOxlB,GAAP,6BAAAhB,EAAA,6DAAiBoJ,EAAjB,+BAA0B,EAA1B,kBAEG/I,IAAMgJ,IAAN,oBAAuBrI,EAAvB,kBAAyCoI,IAF5C,cAEd7I,EAFc,yBAGbA,EAASL,MAHI,sCAKd,IAAIM,MAAM,KAAID,SAASL,KAAKO,OALd,yDAAH,sDAeRgmB,EAAQ,uCAAG,WAAO7e,EAAQvI,GAAf,SAAAW,EAAA,+EAEdK,IAAMO,KAAN,oBAAwBgH,EAAxB,SAAuC,KAAM,CACjDzH,QAAS,CAAEC,cAAef,KAHR,4DAMd,IAAImB,MAAM,KAAID,SAASL,KAAKO,OANd,wDAAH,wDAiBRsR,EAAU,uCAAG,WAAOR,EAAUlS,GAAjB,eAAAW,EAAA,+EAEHK,IAAMO,KAAK,YAAa2Q,EAAU,CACnDpR,QAAS,CACPC,cAAef,EACf,eAAgB,yBALE,cAEhBuB,EAFgB,yBAQfA,EAAKV,MARU,sCAUhB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OAVZ,yDAAH,wDAoBVimB,EAAU,uCAAG,WAAO9e,EAAQvI,GAAf,SAAAW,EAAA,+EAEhBK,IAAMygB,OAAN,oBAA0BlZ,GAAU,CACxCzH,QAAS,CACPC,cAAef,KAJG,4DAQhB,IAAImB,MAAM,KAAID,SAASL,KAAKO,OARZ,wDAAH,wDAkBVslB,EAAY,uCAAG,WAAOne,EAAQvI,GAAf,eAAAW,EAAA,+EAEDK,IAAMO,KAAN,oBAAwBgH,EAAxB,aAA2C,KAAM,CACtEzH,QAAS,CAAEC,cAAef,KAHJ,cAElBkB,EAFkB,yBAKjBA,EAASL,MALQ,sCAOlB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OAPV,yDAAH,wDAgBZ8b,EAAc,uCAAG,4BAAAvc,EAAA,+EAEHK,IAAMgJ,IAAI,qBAFP,cAEpB9I,EAFoB,yBAGnBA,EAASL,MAHU,sCAKpB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OALR,yDAAH,qDAgBd4c,EAAiB,uCAAG,WAAOhe,GAAP,6BAAAW,EAAA,6DAAkBoJ,EAAlB,+BAA2B,EAA3B,kBAEN/I,IAAMgJ,IAAI,uBAAyBD,EAAQ,CAChEjJ,QAAS,CACPC,cAAef,KAJU,cAEvBkB,EAFuB,yBAOtBA,EAASL,MAPa,sCASvB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OATL,yDAAH,sDAqBjB6a,EAAe,uCAAG,WAAOjc,EAAWiG,GAAlB,6BAAAtF,EAAA,6DAA2BoJ,EAA3B,+BAAoC,EAApC,kBAEJ/I,IAAMgJ,IAAN,4BAA+B/D,EAA/B,YAA0C8D,GAAU,CACzEjJ,QAAS,CACPC,cAAef,KAJQ,cAErBkB,EAFqB,yBAOpBA,EAASL,MAPW,sCASrB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OATP,yDAAH,yD,oBClJ5B,IAAI1C,EAAM,CACT,gBAAiB,IACjB,mBAAoB,IACpB,YAAa,IACb,eAAgB,IAChB,iBAAkB,IAClB,oBAAqB,IACrB,kBAAmB,GACnB,qBAAsB,GACtB,kBAAmB,GACnB,qBAAsB,GACtB,qCAAsC,GACtC,wCAAyC,GACzC,iCAAkC,GAClC,oCAAqC,GACrC,cAAe,GACf,iBAAkB,GAClB,0CAA2C,IAC3C,6CAA8C,IAC9C,0CAA2C,IAC3C,6CAA8C,IAC9C,oBAAqB,IACrB,uBAAwB,IACxB,sCAAuC,IACvC,yCAA0C,IAC1C,oBAAqB,GACrB,uBAAwB,GACxB,oCAAqC,IACrC,uCAAwC,IACxC,cAAe,IACf,iBAAkB,IAClB,+BAAgC,IAChC,kCAAmC,IACnC,kCAAmC,IACnC,qCAAsC,IACtC,kBAAmB,IACnB,qBAAsB,IACtB,mCAAoC,IACpC,sCAAuC,IACvC,wBAAyB,GACzB,2BAA4B,GAC5B,6BAA8B,IAC9B,gCAAiC,IACjC,8BAA+B,IAC/B,iCAAkC,IAClC,wCAAyC,IACzC,2CAA4C,IAC5C,8BAA+B,IAC/B,iCAAkC,IAClC,kBAAmB,IACnB,qBAAsB,IACtB,qCAAsC,GACtC,wCAAyC,GACzC,cAAe,EACf,iBAAkB,EAClB,qCAAsC,GACtC,wCAAyC,GACzC,wBAAyB,IACzB,2BAA4B,IAC5B,kBAAmB,GACnB,qBAAsB,GACtB,wBAAyB,IACzB,2BAA4B,IAC5B,wBAAyB,IACzB,2BAA4B,IAC5B,gBAAiB,IACjB,mBAAoB,IACpB,oBAAqB,IACrB,uBAAwB,IACxB,wCAAyC,GACzC,2CAA4C,GAC5C,oCAAqC,IACrC,uCAAwC,IACxC,wCAAyC,IACzC,2CAA4C,IAC5C,oCAAqC,IACrC,uCAAwC,IACxC,uDAAwD,GACxD,0DAA2D,GAC3D,wEAAyE,IACzE,2EAA4E,IAC5E,mDAAoD,IACpD,sDAAuD,IACvD,gCAAiC,IACjC,mCAAoC,IACpC,wBAAyB,GACzB,2BAA4B,GAC5B,0BAA2B,GAC3B,6BAA8B,GAC9B,+BAAgC,IAChC,kCAAmC,IACnC,2DAA4D,GAC5D,8DAA+D,GAC/D,gEAAiE,IACjE,mEAAoE,IACpE,kEAAmE,GACnE,qEAAsE,GACtE,uEAAwE,IACxE,0EAA2E,IAC3E,sCAAuC,IACvC,yCAA0C,IAC1C,+CAAgD,GAChD,kDAAmD,GACnD,oDAAqD,IACrD,uDAAwD,IACxD,iCAAkC,GAClC,oCAAqC,GACrC,8BAA+B,GAC/B,iCAAkC,GAClC,oCAAqC,IACrC,uCAAwC,IACxC,kCAAmC,GACnC,qCAAsC,GACtC,wBAAyB,GACzB,2BAA4B,GAC5B,sCAAuC,IACvC,yCAA0C,IAC1C,kCAAmC,IACnC,qCAAsC,IACtC,8BAA+B,GAC/B,iCAAkC,GAClC,qDAAsD,GACtD,wDAAyD,GACzD,0BAA2B,IAC3B,6BAA8B,IAC9B,kCAAmC,GACnC,qCAAsC,GACtC,kCAAmC,IACnC,qCAAsC,IACtC,6CAA8C,IAC9C,gDAAiD,IACjD,6CAA8C,IAC9C,gDAAiD,IACjD,kCAAmC,IACnC,qCAAsC,IACtC,sBAAuB,GACvB,yBAA0B,GAC1B,wBAAyB,IACzB,2BAA4B,IAC5B,kDAAmD,GACnD,qDAAsD,GACtD,+BAAgC,IAChC,kCAAmC,IACnC,0CAA2C,IAC3C,6CAA8C,KAI/C,SAAS4oB,EAAeC,GACvB,IAAIhjB,EAAKijB,EAAsBD,GAC/B,OAAOE,EAAoBljB,GAE5B,SAASijB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEhpB,EAAK6oB,GAAM,CACpC,IAAIrc,EAAI,IAAI/J,MAAM,uBAAyBomB,EAAM,KAEjD,MADArc,EAAE5J,KAAO,mBACH4J,EAEP,OAAOxM,EAAI6oB,GAEZD,EAAepT,KAAO,WACrB,OAAOZ,OAAOY,KAAKxV,IAEpB4oB,EAAe7D,QAAU+D,EACzBG,EAAOC,QAAUN,EACjBA,EAAe/iB,GAAK,K,2FC7ILsjB,UAnBF,SAAC,GAAyC,IAAvC1oB,EAAsC,EAAtCA,QAASzD,EAA6B,EAA7BA,UAAWb,EAAkB,EAAlBA,KAAMX,EAAY,EAAZA,MAClC4tB,EAAiBnsB,IAAW,aAChCd,MAAM,GACLa,EAAYA,IAGf,OACE,kBAAC,IAASsS,IAAV,CAAc9T,MAAOA,EAAOiF,QAASA,EAASzD,UAAWosB,GACvD,8BAAUnf,KAAK,QAAQqI,KAAMnW,O,oDCbnC,kFAsFe6E,sBAAQ,MAJI,SAACG,GAAD,MAAe,CACxCqG,UAAW,SAACpH,GAAD,OAAee,EAASqG,YAAUpH,QAGhCY,EA5EE,SAAC,GAWX,IAVL8D,EAUI,EAVJA,OACA7B,EASI,EATJA,SACA4K,EAQI,EARJA,QACAJ,EAOI,EAPJA,YACAxF,EAMI,EANJA,KACAzM,EAKI,EALJA,MACAgM,EAII,EAJJA,UACA/G,EAGI,EAHJA,QACAtD,EAEI,EAFJA,SACAksB,EACI,EADJA,aAEMC,EAAmBrsB,IAAW,CAClC,iBAAkBosB,EAClB,iBAAkBA,IAEpB,OACE,yBAAKrsB,UAAU,YAAYxB,MAAOA,GAC/BiF,EACC,kBAAC,UAAD,CACEA,QAAS,kBAAMA,KACfzD,UAAWssB,EACXpf,SAAUpF,EACVtJ,MAAO,CAAE6J,OAAQ,aAGnB,kBAAC,IAAD,CACE7J,MAAO,CAAEK,QAAS,QAClB4E,QAAS,kBAAM+G,EAAU,kBACzBwC,GAAE,WAAM/G,IAER,kBAAC,UAAD,CAAQjG,UAAWssB,EAAkBpf,SAAUpF,KAGnD,yBAAK9H,UAAU,sBACZyD,EACC,uBACEA,QAAS,kBAAMA,KACfjF,MAAO,CAAE6J,OAAQ,WACjBrI,UAAU,uBAETiG,GAGH,kBAAC,IAAD,CACExC,QAAS,kBAAM+G,EAAU,kBACzBhM,MAAO,CAAEC,eAAgB,QACzBuO,GAAE,WAAM/G,IAER,uBAAGjG,UAAU,uBAAuBiG,IAGvC4K,GACC,uBACE7Q,UAAS,oBACPyQ,EAAc,cAAgB,eAG/BI,EACA5F,GACC,0BAAMjL,UAAU,oBACbgL,YAAmBC,MAM7B9K,O,gCCpEQ+b,IATW,CACxBC,iBAAkB,mBAClBC,0BAA2B,4BAC3BE,4BAA6B,8BAC7BD,4BAA6B,8BAC7BE,mBAAoB,qBACpBC,oBAAqB,wB,gCCGRhO,IATG,CAChBC,kBAAmB,cACnBE,oBAAqB,sBACrBD,oBAAqB,sBACrBG,SAAU,WACVE,YAAa,cACbE,YAAa,gB,gCCNf,4MAAO,IAAM6P,EAAgB,SAAC/Y,GAC5B,QACGA,IACAA,EAAMwmB,MAEL,+JAGK,gCAKEvN,EAAmB,SAAChZ,GAC/B,OAAKA,GACI,uBAKEkZ,EAAmB,SAACjZ,GAC/B,OAAKA,EAEMA,EAASrD,OAAS,IAAMqD,EAASrD,OAAS,EAC5C,yDAEGqD,EAASsmB,MAAM,sBAClB,2FALA,2BAUEtO,EAAmB,SAAC5Z,GAC/B,OAAKA,EAEMA,EAASzB,OAAS,EACpB,4EAENyB,EAASkoB,MAAM,2DAET,sHANA,2BAWEnN,EAAc,SAACZ,GAC1B,OAAIA,EAAI5b,OAAS,KACR,8CAKE0c,EAAkB,SAACb,GAC9B,SACEA,GACCA,EAAQ8N,MAEP,6HAGK,oC,2CC5DP7U,EAAI8U,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,E,gBAEtC,SAASnV,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUlZ,GAAU,IAAK,IAAI8W,EAAI,EAAGA,EAAIqC,UAAUlV,OAAQ6S,IAAK,CAAE,IAAIsC,EAASD,UAAUrC,GAAI,IAAK,IAAItS,KAAO4U,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ5U,KAAQxE,EAAOwE,GAAO4U,EAAO5U,IAAY,OAAOxE,IAA2BwZ,MAAMC,KAAMN,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE5U,EAAKsS,EAAnE9W,EAEzF,SAAuCoZ,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D5U,EAAKsS,EAA5D9W,EAAS,GAAQ4Z,EAAaX,OAAOY,KAAKT,GAAqB,IAAKtC,EAAI,EAAGA,EAAI8C,EAAW3V,OAAQ6S,IAAOtS,EAAMoV,EAAW9C,GAAQ6C,EAASG,QAAQtV,IAAQ,IAAaxE,EAAOwE,GAAO4U,EAAO5U,IAAQ,OAAOxE,EAFxM+Z,CAA8BX,EAAQO,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBZ,GAAS,IAAKtC,EAAI,EAAGA,EAAImD,EAAiBhW,OAAQ6S,IAAOtS,EAAMyV,EAAiBnD,GAAQ6C,EAASG,QAAQtV,IAAQ,GAAkByU,OAAOI,UAAUa,qBAAqBX,KAAKH,EAAQ5U,KAAgBxE,EAAOwE,GAAO4U,EAAO5U,IAAU,OAAOxE,EAMne,SAASouB,EAAUhU,EAAMC,GACvB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACf7V,EAAQgV,EAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOpB,EAAS,CACtDwB,MAAO,6BACPC,WAAY,+BACZ5a,MAAO,CACLwX,OAAQ,OACRgX,WAAY,OACZnuB,QAAS,QACTouB,eAAgB,QAElBjuB,MAAO,OACPqO,OAAQ,OACRkM,QAAS,cACT2T,oBAAqB,WACrBnkB,IAAKiQ,EACL,kBAAmBE,GAClB7V,GAAQ4V,EAAqB,gBAAoB,QAAS,CAC3DpQ,GAAIqQ,GACHD,GAAS,KAAMvB,IAAOA,EAAkB,gBAAoB,IAAK,CAClExV,UAAW,oBACG,gBAAoB,IAAK,CACvCA,UAAW,aACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,EACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,UACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,gBACDhB,IAAQA,EAAmB,gBAAoB,IAAK,CAC1DtqB,UAAW,kDACG,gBAAoB,IAAK,CACvCA,UAAW,cACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,KACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,SACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,eACDf,IAAQA,EAAmB,gBAAoB,IAAK,CAC1DvqB,UAAW,oBACG,gBAAoB,IAAK,CACvCA,UAAW,cACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,IACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,UACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,gBACDd,IAAQA,EAAmB,gBAAoB,IAAK,CAC1DxqB,UAAW,mDACG,gBAAoB,IAAK,CACvCA,UAAW,eACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,KACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,QACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,cACDb,IAAQA,EAAmB,gBAAoB,IAAK,CAC1DzqB,UAAW,oBACG,gBAAoB,IAAK,CACvCA,UAAW,eACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,GACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,UACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,gBACDZ,IAAQA,EAAmB,gBAAoB,IAAK,CAC1D1qB,UAAW,mDACG,gBAAoB,IAAK,CACvCA,UAAW,eACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,KACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,SACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,eACDX,IAAQA,EAAmB,gBAAoB,IAAK,CAC1D3qB,UAAW,mCACG,gBAAoB,IAAK,CACvCA,UAAW,eACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,IACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,UACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,gBACDV,IAAQA,EAAmB,gBAAoB,IAAK,CAC1D5qB,UAAW,kDACG,gBAAoB,IAAK,CACvCA,UAAW,eACG,gBAAoB,SAAU,CAC5CirB,GAAI,EACJC,GAAI,EACJC,EAAG,EACHC,KAAM,UACNC,YAAa,KACbrrB,UAAW,0BACG,gBAAoB,mBAAoB,CACtD6iB,cAAe,YACftgB,KAAM,QACN+oB,MAAO,KACP7O,OAAQ,cACR8O,SAAU,MACVC,IAAK,KACLC,YAAa,eACE,gBAAoB,UAAW,CAC9C5I,cAAe,eACf0I,SAAU,MACVC,IAAK,KACLC,YAAa,aACbhP,OAAQ,MACR6O,MAAO,YAIX,IAAI7T,EAA0B,aAAiBoT,GAChC,IC1OAa,UANA,kBACb,yBAAK5tB,UAAU,UACb,kBAAC,EAAD,CAAWA,UAAU,mB,4GCML6tB,QACW,cAA7BhuB,OAAOC,SAASguB,UAEe,UAA7BjuB,OAAOC,SAASguB,UAEhBjuB,OAAOC,SAASguB,SAASvB,MACvB,2D,kCCFNnZ,IAAS2a,OACP,kBAAC,IAAD,CAAUzT,MAAOA,KACf,kBAAC,IAAD,KACE,kBAAC0T,EAAA,QAAD,QAGJnrB,SAASorB,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9oB,GACL+b,QAAQ/b,MAAMA,EAAM0H,a,oFEzHbqhB,UAbF,SAAC,GAAoC,IAAlCzuB,EAAiC,EAAjCA,UAAWxB,EAAsB,EAAtBA,MAAO2B,EAAe,EAAfA,SAC1BuuB,EAAiBzuB,IAAW,aAChC0iB,MAAM,GACL3iB,EAAYA,IAGf,OACE,yBAAKA,UAAW0uB,EAAgBlwB,MAAOA,GACpC2B,K,gCCXP,2BAYewuB,UAVC,SAAC,GAAD,IAAGxuB,EAAH,EAAGA,SAAH,OACd,wBACEH,UAAS,+BACPG,EAAW,iBAAmB,YAG/BA,K,0EC4CUyuB,UAhDW,SAAC,GAA2B,IAAD,IAAxBrZ,cAAwB,MAAf,EAAe,EAAZ/W,EAAY,EAAZA,MA6CvC,OAAO,kBAAC,WAAD,KA5CgB,WAErB,IADA,IAAMgX,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAASE,KACP,yBACEvS,IAAKsS,EACLjX,MAAK,aACHK,QAAS,OACTC,WAAY,SACZsQ,QAAS,iBACN5Q,IAGL,kBAAC,UAAD,CACEA,MAAO,CACLQ,MAAO,OACPqO,OAAQ,OACRwhB,aAAc,WAGlB,yBACErwB,MAAO,CACLK,QAAS,OACTiwB,cAAe,WAGjB,kBAAC,UAAD,CACEtwB,MAAO,CACLQ,MAAO,QACPqO,OAAQ,OACRwG,WAAY,OACZmQ,aAAc,SAGlB,kBAAC,UAAD,CACExlB,MAAO,CAAEQ,MAAO,QAASqO,OAAQ,OAAQwG,WAAY,aAM/D,OAAO2B,EAGSI,M,uHCEdpO,EAAkBC,YAAyB,CAC/CpG,YAAa6C,MAGAF,sBAAQwD,EAARxD,EA5CM,SAAC,GAAuD,IAArD7D,EAAoD,EAApDA,SAAUsgB,EAA0C,EAA1CA,UAAWjiB,EAA+B,EAA/BA,MAAOyY,EAAwB,EAAxBA,KAAM5V,EAAkB,EAAlBA,YAClDkV,EAAU3U,cAChB,OACE,4BACEpD,MAAK,2BAAOA,GAAP,IAAcK,QAAQ,GAAD,OAAKoY,GAAQ,UACvCjX,UAAU,kBAETqB,EACC,kBAAC,WAAD,KACGof,GACC,kBAAC,UAAD,CACEhd,QAAS,kBAAM8S,EAAQwY,UACvBvwB,MAAO,CAAE6J,OAAQ,WACjBlJ,KAAK,iBAGRgB,GAGH,kBAAC,WAAD,KACE,wBAAI3B,MAAO,CAAE0Y,SAAU,UAAYlX,UAAU,gBAA7C,cAGA,yBAAKxB,MAAO,CAAEikB,WAAY,OACxB,kBAAC,UAAD,CACEhf,QAAS,kBAAM8S,EAAQb,KAAK,MAC5BlX,MAAO,CAAEU,YAAa,SAFxB,UAMA,kBAAC,UAAD,CAAYuE,QAAS,kBAAM8S,EAAQb,KAAK,YAAYzF,MAAI,EAACD,MAAI,GAA7D,kB,qECjCNgf,EAA2B,SAACC,GAEhC,OADsBA,EAAdC,WA8CK1d,IAnCoB,SAAC2d,EAAUF,GAAwB,IAAfG,EAAc,uDAAP,GACtDC,EAAiBJ,GAAoBpsB,SAASysB,gBAC9CC,EAAiBvnB,iBAAOgnB,EAAyBK,IAMvDxtB,qBAAU,WACR,IAYM2tB,EAAwBC,KAZT,WACnBF,EAAe9mB,QAAUumB,EAAyBK,GAClDF,EAAS,CACP1d,sBAAuB8d,EAAe9mB,QACtCiM,SACE2a,EAAeK,aACbL,EAAeH,UACfG,EAAeM,aACjB,QAI+C,KAKrD,OAJAV,EACIA,EAAQjc,iBAAiB,SAAUwc,GACnC3vB,OAAOmT,iBAAiB,SAAUwc,GAE/B,WACLP,EACIA,EAAQ/b,oBAAoB,SAAUsc,GACtC3vB,OAAOqT,oBAAoB,SAAUsc,MArBpC,sBAwBFJ,GAxBE,CAwBIH,EAASI,EAAgBF,O,+RC3C3Bxa,EAAW,uCAAG,WAAO1O,GAAP,6BAAAhB,EAAA,6DAAiBoJ,EAAjB,+BAA0B,EAA1B,kBAEA/I,IAAMgJ,IAAN,oBAAuBrI,EAAvB,YAAmCoI,EAAnC,YAFA,cAEjB7I,EAFiB,yBAGhBA,EAASL,MAHO,gCAKvBsc,QAAQC,KAAR,MALuB,yDAAH,sDAeXkO,EAAW,uCAAG,WAAOtrB,EAAWurB,GAAlB,SAAA5qB,EAAA,+EAEjBK,IAAMe,IACV,oBACA,CACE7E,MAAOquB,GAET,CACEzqB,QAAS,CACPC,cAAef,KATE,4DAcjB,IAAImB,MAAJ,MAdiB,wDAAH,wDAyBXwC,EAAY,uCAAG,WAAON,EAAOrD,GAAd,iBAAAW,EAAA,6DACpBuR,EAAW,IAAIC,UACZC,OAAO,QAAS/O,GAFC,kBAIDrC,IAAMe,IAAI,mBAAoBmQ,EAAU,CAC7DpR,QAAS,CACP,eAAgB,sBAChBC,cAAef,KAPK,cAIlBkB,EAJkB,yBAUjBA,EAASL,MAVQ,sCAYlB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OAZV,yDAAH,wDAqBZ4lB,EAAY,uCAAG,WAAOhnB,GAAP,SAAAW,EAAA,+DAExBK,IAAMygB,OAAO,mBAAoB,CAC/B3gB,QAAS,CACPC,cAAef,KAJK,qDAQlB,IAAImB,MAAM,KAAID,SAASL,KAAKO,OARV,wDAAH,sDAmBZ6lB,EAAa,uCAAG,WAAOjnB,EAAW8Z,GAAlB,eAAAnZ,EAAA,+EAEFK,IAAMe,IAC3B,YADqB,eAGhB+X,GAEL,CACEhZ,QAAS,CACPC,cAAef,KATI,cAEnBkB,EAFmB,yBAalBA,EAASL,MAbS,sCAenB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OAfT,yDAAH,wDAyBbod,EAAiB,uCAAG,WAAOxe,EAAWse,GAAlB,eAAA3d,EAAA,+EAENK,IAAMgJ,IAAN,8BAAiCsU,GAAO,IAAM,CACnExd,QAAS,CACPC,cAAef,KAJU,cAEvBkB,EAFuB,yBAOtBA,EAASL,MAPa,sCASvB,IAAIM,MAAM,KAAID,SAASL,KAAKO,OATL,yDAAH,yD,iRClFxB+jB,EAAa,SAAC,GAab,IAZL5c,EAYI,EAZJA,OACArL,EAWI,EAXJA,MACAH,EAUI,EAVJA,YACAwJ,EASI,EATJA,gBACAhD,EAQI,EARJA,UACA2C,EAOI,EAPJA,UACAxI,EAMI,EANJA,UACAxD,EAKI,EALJA,MACAwB,EAII,EAJJA,UACA8f,EAGI,EAHJA,SACAlQ,EAEI,EAFJA,QACAjF,EACI,EADJA,OAEMgf,EAAc3hB,mBADhB,EAEsBmb,qBAAWqC,oBAAmBxX,iBAFpD,mBAEG/J,EAFH,KAEUE,EAFV,KAGEoS,EAAU3U,cAEVgF,OAAuBkkB,IAAZlb,EAAwBA,EAAU3L,EAAM2C,SAEzD/E,qBAAU,WAuBR,OAtBK+N,IAECkQ,EACF3b,EAAS,CAAEM,KAAM,qBAAsB0H,QAAS2T,KAEhDjgB,OAAO0W,QAAQuZ,UACb,CAAEC,QAASlwB,OAAOC,SAASpB,MAC3B,KAFF,gBAGWmO,IAEX,sBAAC,4BAAA5H,EAAA,+EAE0BumB,YAAQ3e,GAFlC,OAESrH,EAFT,OAGGrB,EAAS,CAAEM,KAAM,qBAAsB0H,QAAS3G,IAHnD,gDAKG+Q,EAAQb,KAAK,KACbvR,EAAS,CAAEM,KAAM,qBAAsB0H,QAAQ,EAAD,KANjD,wDAAD,KAYG,WACDtM,OAAO0W,QAAQtS,OAASpE,OAAO0W,QAAQtS,MAAM8rB,SAC/ClwB,OAAO0W,QAAQuZ,UACb,UACA,UACAjwB,OAAO0W,QAAQtS,MAAM8rB,YAI1B,CAACljB,EAAQ0J,EAAS3G,EAASkQ,IAE9B,IAAMkQ,EAAuB,uCAAG,4BAAA/qB,EAAA,+EAEFylB,YACxB7d,EACA5I,EAAMkB,KAAK0b,SAASje,OACpBqB,EAAMqhB,mBAAmBrY,MALC,OAEtBM,EAFsB,OAO5BpJ,EAAS,CAAEM,KAAM,cAAe0H,QAASoB,EAAYsT,WAPzB,gDAS5B7e,EAAU,wCAAwC,kBAChDguB,OAV0B,yDAAH,qDAevBC,EAAgB,uCAAG,sBAAAhrB,EAAA,+EAEf0mB,YAAW9e,EAAQrL,GAFJ,OAGrBqJ,GACEA,EAAgB,CACdpG,KAAM,cACN0H,QAASU,IAEbrC,EAAU,yBARW,gDAUrBxI,EAAU,0BAA0B,kBAAMiuB,OAVrB,yDAAH,qDActB,OACE,yBACEjwB,UAAWC,IAAW,aACpB,eAAe,EACf,sBAAuB0K,GACtB3K,EAAYA,IAEfwC,YAAU,wBACVhE,MAAOA,GAEP,kBAAC,WAAD,KACE,yBACEwB,UAAWC,IAAW,CACpB,sBAAsB,EACtB,6BAA8B0K,KAG/B/D,EACC,kBAAC,UAAD,CAAgB+O,UAAQ,IAExB,kBAAC,IAAD,CACEua,WAAUjsB,EAAMkB,KAAKwC,MACrBuJ,IAAK,uEACLC,IAAI,OACJwF,IAAK,CAAC,CAAEzF,IAAKjN,EAAMkB,KAAKwC,QACxBnJ,MAAO,CAAEgN,OAAQvH,EAAMkB,KAAKqG,QAC5B2kB,OAAQ,SACRC,MAAM,cAIZ,4BACEpwB,UAAWC,IAAW,CACpB,uBAAuB,EACvB,8BAA+B0K,KAGhC/D,EACC,kBAAC,UAAD,CACEpI,MAAO,CAAE6O,OAAQ,OAAQrO,MAAO,OAAQ6vB,aAAc,WAGxD,kBAAC,IAAD,CACE7hB,GAAE,WAAM/I,EAAMkB,KAAKmG,OAAOrF,UAC1BzH,MAAO,CAAEK,QAAS,SAElB,kBAAC,UAAD,CACEmB,UAAU,gBACVkN,SAAUjJ,EAAMkB,KAAKmG,OAAOxD,UAIjClB,EACC,yBAAKpI,MAAO,CAAEK,QAAS,OAAQiwB,cAAe,WAC5C,kBAAC,UAAD,CAAgBtwB,MAAO,CAAE6O,OAAQ,OAAQrO,MAAO,WAChD,kBAAC,UAAD,CACER,MAAO,CAAE6O,OAAQ,OAAQrO,MAAO,QAASyO,UAAW,UAIxD,kBAAC,IAAD,CACEjP,MAAO,CAAEC,eAAgB,QACzBuO,GAAE,WAAM/I,EAAMkB,KAAKmG,OAAOrF,WAE1B,uBAAGjG,UAAU,6BACX,2BAAIiE,EAAMkB,KAAKmG,OAAOrF,aAI1BW,GACA,yBACEnD,QAAS,WACP,IAAM+E,EAAU,CACd,CACE9E,KAAM,2BACND,QAAS,WACP+G,EAAU,yBACV+L,EAAQb,KAAR,gBAAsB7I,MAG1B,CACEnJ,KAAM,2BACND,QAAS,WACPyqB,UAAUmC,UACPC,UAAUztB,SAASye,KACnB+M,MAAK,kBAAMrsB,EAAU,gCACrBwsB,OAAM,kBACLxsB,EAAU,2CAKpB6F,EACE,CACEW,QACEnH,GACAA,EAAY4E,WAAahC,EAAMkB,KAAKmG,OAAOrF,SAD3C,UAGSuC,EAHT,CAIM,CACE9E,KAAM,2BACNiF,SAAS,EACTlF,QAAS,WACPwsB,IACA1Z,EAAQb,KAAK,IAAMrU,EAAY4E,cAIrCuC,GAER,gCAGJhK,MAAO,CAAE6J,OAAQ,WACjBrI,UAAU,qBAEV,kBAAC,UAAD,CAAMA,UAAU,cAAcb,KAAK,0BAIzC,yBACEqD,YAAU,gCACVxC,UAAWC,IAAW,CACpB,wBAAwB,EACxB,+BAAgC0K,KAGlC,yBACE5B,IAAK4gB,EACL3pB,UAAWC,IAAW,CACpB4gB,UAAU,EACV,mBAAoBlW,KAIrB1G,EAAMkB,KAAKuF,UAAY9D,EACtB,kBAAC,UAAD,CACE6D,QAAS,CACP2C,QAASnJ,EAAMkB,KAAKuF,QACpB5C,OAAQ7D,EAAMkB,KAAKmG,OAAOxD,OAC1B7B,SAAUhC,EAAMkB,KAAKmG,OAAOrF,UAE9B5E,YAAaA,EACbG,MAAOA,EACPqE,KAAM5B,EAAMkB,KACZuF,SAAO,EACPC,OAAQA,IAER,MACF/D,GACA3C,EAAMkB,KAAK0b,SAAS7d,KAAI,SAACyH,EAASxH,GAAV,OACtB,kBAAC,UAAD,CACEwH,QAASA,EACTpJ,YAAaA,EACbG,MAAOA,EACPqE,KAAM5B,EAAMkB,KACZhC,IAAKF,EACL2H,eAAgBzG,EAChB0G,gBAAiBA,EACjBF,OAAQA,QAGZmV,GACA7b,EAAMkB,KAAK0b,SAASje,OAASqB,EAAMqhB,mBAAmBrY,KACpDhJ,EAAMkB,KAAKqI,aAAevJ,EAAMqhB,mBAAmBrY,MACnD,yBACEzO,MAAO,CAAE4Q,QAAS,OAAQ/G,OAAQ,WAClC5E,QAAS,kBAAMusB,MAEf,kBAAC,UAAD,CACExxB,MAAO,CACLwX,OAAQ,UAEV7W,KAAK,yBAKdyH,EACC,yBACEpI,MAAO,CACLK,QAAS,OACTiwB,cAAe,SACf1f,QAAS,wBAGX,kBAAC,UAAD,CAAgB5Q,MAAO,CAAE6O,OAAQ,SAAUrO,MAAO,WAClD,kBAAC,UAAD,CACER,MAAO,CAAE6O,OAAQ,SAAUrO,MAAO,QAASyO,UAAW,UAExD,kBAAC,UAAD,CACEjP,MAAO,CAAE6O,OAAQ,SAAUrO,MAAO,QAASyO,UAAW,WAI1D,kBAAC,UAAD,CACEpM,YAAaA,EACbG,MAAOA,EACPqE,KAAM5B,EAAMkB,KACZhB,SAAUA,EACV0G,gBAAiBA,EACjBF,OAAQA,KAGV/D,GACA,kBAAC,UAAD,CACEiG,OAAQA,EACRrL,MAAOA,EACPH,YAAaA,EACbsoB,YAAaA,EACb/e,eAAgBzG,EAChB0G,gBAAiBA,EACjBwa,SAAUphB,EAAMohB,eAgBxB7d,EAAkBC,YAAyB,CAC/CjG,MAAOkF,IACPrF,YAAa6C,MASfulB,EAAW5X,iBAAkB,EAEd7N,sBAAQwD,GARI,SAACrD,GAAD,MAAe,CACxC0D,UAAW,SAACxE,EAAOD,GAAR,OAAsBe,EAAS0D,YAAUxE,EAAOD,KAC3DoH,UAAW,SAACpH,GAAD,OAAee,EAASqG,YAAUpH,KAC7CpB,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,QAK1CO,CAA6CylB,I,gCCpW5D,0FAEaze,EAAqB,SAACulB,GACjC,IACMC,EADSC,YAAqB,IAAI3kB,KAAQ,IAAIA,KAAKykB,IACjCG,MAAM,KAE9B,OADAF,EAAS,GAAKA,EAAS,GAAG9rB,UAAU,EAAG,GACnB,MAAhB8rB,EAAS,GACJ,WAEFA,EAASG,KAAK,MAGVC,EAAa,SAAC3lB,GAGzB,OAFAA,EAAO,IAAIa,KAAKb,GACM4lB,YAAO5lB,EAAM,Y,gCCRtBuQ,IANI,CACjBC,WAAY,aACZC,WAAY,aACZC,qBAAsB,yB,iGCUlBnU,EAAkBC,YAAyB,CAC/CjG,MAAOkF,MAGM1C,sBAAQwD,EAARxD,EAVQ,SAAC,GAAmC,IAAjCxC,EAAgC,EAAhCA,MAAOrB,EAAyB,EAAzBA,SAAakD,EAAY,oCACxD,OACE,kBAAC,IAAUA,EAAQ7B,EAAQrB,EAAW,kBAAC,IAAD,CAAU6M,GAAG,gB,wJC0EjDxF,EAAkBC,YAAyB,CAC/CpG,YAAa6C,IACb1C,MAAOkF,MAQM1C,sBAAQwD,GALI,SAACrD,GAAD,MAAe,CACxC0D,UAAW,SAACxE,EAAOD,GAAR,OAAsBe,EAAS0D,YAAUxE,EAAOD,KAC3DpB,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,QAG1CO,EA7EM,SAAC,GAUf,IATLgN,EASI,EATJA,OACAxP,EAQI,EARJA,MACAH,EAOI,EAPJA,YACAwG,EAMI,EANJA,UACAiJ,EAKI,EALJA,UACA7K,EAII,EAJJA,SACA6B,EAGI,EAHJA,OACA9F,EAEI,EAFJA,UACAxD,EACI,EADJA,MACI,EACkCuM,mBAAS+F,GAD3C,mBACGC,EADH,KACgB+f,EADhB,OAE0B/lB,oBAAS,GAFnC,mBAEG6E,EAFH,KAEY0G,EAFZ,KAIEya,EAAM,uCAAG,sBAAA9rB,EAAA,sEAEXqR,GAAW,GAFA,SAGL0a,YAAWhgB,EAAQxP,GAHd,OAOTsvB,GAHG/f,GAKLuF,GAAW,GATA,gDAWXA,GAAW,GACXtU,EAAU,8BAA8B,kBAAM+uB,OAZnC,yDAAH,qDAgBZ,OAAI9qB,IAAa5E,EAAY4E,SACpB,kBAAC,UAAD,CAAQ0J,UAAQ,GAAhB,UAGLoB,EAEA,kBAAC,UAAD,CACEvS,MAAOA,EACPoR,QAASA,EACTnM,QAAS,kBACPoE,EACE,CACEW,QAAS,CACP,CACEG,SAAS,EACTjF,KAAM,WACND,QAAS,kBAAMstB,OAGnB5wB,SAAU,kBAAC,UAAD,CAAgB2H,OAAQA,EAAQ7B,SAAUA,KAEtD,gCAGJhH,UAAQ,GAlBV,aAyBF,kBAAC,UAAD,CAAQT,MAAOA,EAAOoR,QAASA,EAASnM,QAAS,kBAAMstB,MAAvD,c,gCC7EJ,0CAwDeE,UAlDO,SAAC,GAKhB,IAJLvjB,EAII,EAJJA,OAII,IAHJG,qBAGI,MAHY,GAGZ,EAFJC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEMjM,EAAcC,YAAc2L,EAAQ,KAAM,CAC9CzL,KAAM,CAAEC,UAAW,cACnBC,MAAO,CAAED,UAAW,YACpBE,MAAO,CAAEvD,QAAS,QAClBwD,OAAQ,CACN0mB,KAAM,EACNzmB,QAAS,IACTC,SAAU,IAGZ2uB,WAAYnjB,EAAWtF,UAGzB,OACE,kBAAC,WAAD,KACG3G,EAAYkB,KAAI,gBAAGO,EAAH,EAAGA,KAAMJ,EAAT,EAASA,IAAKE,EAAd,EAAcA,MAAd,OACfE,EACE,kBAAC,UAAD,iBACMsK,EACAC,EAAa,GAFnB,CAGEtP,MAAO6E,EACPF,IAAKA,KAGP,kBAAC,UAAD,iBACM0K,EACAC,EAAa,GAFnB,CAGEtP,MAAO6E,EACPF,IAAKA,W,4NChCJguB,EAAqB,uCAAG,WAAO7sB,GAAP,eAAAW,EAAA,+EAEVK,IAAMgJ,IAAI,oBAAqB,CACpDlJ,QAAS,CACPC,cAAef,KAJc,cAE3BkB,EAF2B,yBAO1BA,EAASL,MAPiB,sCAS3B,IAAIM,MAAM,KAAID,SAASL,MATI,yDAAH,sDAkBrBisB,EAAiB,uCAAG,WAAO9sB,GAAP,SAAAW,EAAA,+EAEvBK,IAAMe,IAAI,oBAAqB,KAAM,CACzCjB,QAAS,CACPC,cAAef,KAJU,4DAQvB,IAAImB,MAAM,KAAID,SAASL,MARA,wDAAH,sDCnBjBgY,EAAkB,SAAC7M,GAAD,MAAmB,CAChD7L,KAAMyX,IAAkBC,iBACxBhQ,QAASmE,IAGE/O,EAA0B,SAAC+C,GAAD,8CAAe,WAAOH,GAAP,eAAAc,EAAA,sEAElDd,EAAS,CAAEM,KAAMyX,IAAkBE,4BAFe,SAG3B+U,EAAsB7sB,GAHK,OAG5CkB,EAH4C,OAIlDrB,EAAS,CACPM,KAAMyX,IAAkBI,4BACxBnQ,QAAS3G,IANuC,gDASlDrB,EAAS,CACPM,KAAMyX,IAAkBG,4BACxBlQ,QAAS,KAAIiB,UAXmC,yDAAf,uDAgB1B+C,EAAyB,SAAC7L,GAAD,8CAAe,WAAOH,GAAP,SAAAc,EAAA,sEAEjDd,EAAS,CAAEM,KAAMyX,IAAkBK,qBAFc,SAG3C6U,EAAkB9sB,GAHyB,sDAKjDmd,QAAQC,KAAK,KAAItU,SALgC,wDAAf,uDASzBgD,EAAqB,iBAAO,CACvC3L,KAAMyX,IAAkBM,uB,0IC+JXoN,UA5Ke,SAAC,GAQxB,IAPLpoB,EAOI,EAPJA,MACAqL,EAMI,EANJA,OACA8c,EAKI,EALJA,YACA/e,EAII,EAJJA,eACAC,EAGI,EAHJA,gBACAwa,EAEI,EAFJA,SACAhkB,EACI,EADJA,YACI,EACsB8hB,qBACxBQ,+BACA3V,iBAHE,mBACG/J,EADH,KACUE,EADV,OAK0B4G,mBAAS,MALnC,mBAKGV,EALH,KAKYgnB,EALZ,OAaAzX,cALFO,EARE,EAQFA,yBACAjG,EATE,EASFA,OACA2F,EAVE,EAUFA,UACAjT,EAXE,EAWFA,SACAkT,EAZE,EAYFA,YAGIwX,EAAkBtpB,mBAExBnG,qBAAU,WACJwjB,GAAYiM,EAAgB7oB,UAC9B6oB,EAAgB7oB,QAAQgH,MAAxB,WAAoC4V,EAASc,YAA7C,KACAmL,EAAgB7oB,QAAQ8oB,WAEzB,CAAClM,IAEJ,IAAM/V,EAAY,uCAAG,WAAOpH,GAAP,iBAAAjD,EAAA,yDACnBiD,EAAMK,iBACuB,IAAzBtE,EAAMwG,QAAQ7H,OAFC,yCAGVuB,EAAS,CACdM,KAAM,uBACN0H,QAAS,uCALM,mBAUjB0N,EAAU,MACV1V,EAAS,CAAEM,KAAM,uBACZ4gB,EAZY,iCAcOyE,YAAc7lB,EAAMwG,QAASoC,EAAQrL,GAd5C,OAcTiJ,EAdS,OAeftG,EAAS,CACPM,KAAM,uBACN0H,QAAS,CAAE1B,UAAStG,SAAUyG,EAAgBiC,YAGhD8c,EAAYlhB,QAAQymB,UAAYvF,EAAYlhB,QAAQinB,aApBrC,yCAuBOjF,YACpBxmB,EAAMwG,QACN4a,EAASjZ,UACT5K,GA1Ba,QAuBTiJ,EAvBS,OA4BftG,EAAS,CACPM,KAAM,6BACN0H,QAAS,CACP1B,UACAtG,SAAUyG,EACV8B,gBAAiB2Y,EAASjZ,aAG9BxB,EAAe,CAAEnG,KAAM,iBApCR,QAuCjBoG,GACEA,EAAgB,CACdpG,KAAM,gCACN0H,QAASU,IA1CI,kDA6CjB1I,EAAS,CAAEM,KAAM,uBAAwB0H,QAAQ,EAAD,KA7C/B,0DAAH,sDAiDlB,OACE,0BACEkD,SAAU,SAACnH,GAAD,OAAWoH,EAAapH,IAClClI,UAAU,2BACVwC,YAAU,qCAEV,kBAAC,WAAD,KACGnB,EACC,kBAAC,WAAD,KACG4C,EAAMyf,SAAW,kBAAC,UAAD,MAClB,2BACE1jB,UAAU,qBACVyE,KAAK,OACL8K,YAAY,mBACZvG,SAAU,SAACd,GAELmd,IAAand,EAAMvJ,OAAO8Q,OAC5B7E,EAAe,CAAEnG,KAAM,iBAEzBN,EAAS,CAAEM,KAAM,cAAe0H,QAASjE,EAAMvJ,OAAO8Q,QAEtD,IAAIuK,EAAS9R,EAAMvJ,OAAO8Q,MAAM8c,MAC9B,IAAIiF,OAAO,mBAETxX,EACFqX,GAAW,WACTvX,GAAY,GACZ,IAAMzP,EAAU2P,EAAO,GAAGtV,UAAU,GAIpC,OAFAmV,EAAU,IACVM,EAAyB9P,GAClBA,KAGTwP,EAAU,OAGdpK,MAAOxL,EAAMwG,QACb1B,IAAKuoB,EACL9uB,YAAU,gCAEZ,4BACEiC,KAAK,SACLzE,UAAU,kDAFZ,SAQF,kBAAC,WAAD,KACE,wBAAIA,UAAU,oCACZ,8BACE,kBAAC,IAAD,CAAMgN,GAAG,SAAShN,UAAU,QAA5B,UAEQ,KAJZ,yBAWLkU,GACC,kBAAC,UAAD,CACEtN,SAAUA,EACVsN,OAAQA,EACRjO,SAAUoE,EACV5G,QAAS,SAAC8C,GACR,IAAIkE,EAAU6mB,EAAgB7oB,QAAQgH,MAEtCtL,EAAS,CACPM,KAAM,cACN0H,QAAS1B,EAAQgnB,QAAQ,YAAhB,WAAiClrB,EAAKN,SAAtC,QAEXqrB,EAAgB7oB,QAAQ8oB,QACxB1X,EAAU,Y,0KCjBP7V,sBAAQ,MARI,SAACG,GAAD,MAAe,CACxC6mB,aAAc,SAACne,EAAQvI,GAAT,OACZH,EAAS6mB,YAAane,EAAQvI,KAChCtC,UAAW,SAAC0B,EAAMD,GAAP,OAAmBU,EAASnC,YAAU0B,EAAMD,KACvDoE,UAAW,SAACxE,EAAOD,GAAR,OAAsBe,EAAS0D,YAAUxE,EAAOD,KAC3DoH,UAAW,SAACpH,GAAD,OAAee,EAASqG,YAAUpH,QAGhCY,EAnJS,SAAC,GAWlB,IAVL3C,EAUI,EAVJA,YACAwE,EASI,EATJA,KACArE,EAQI,EARJA,MACA2C,EAOI,EAPJA,SACA0G,EAMI,EANJA,gBACAmgB,EAKI,EALJA,aACAhpB,EAII,EAJJA,UACA6F,EAGI,EAHJA,UACA2C,EAEI,EAFJA,UACAG,EACI,EADJA,OAEM5B,EAAMf,mBAENY,EAAW,uCAAG,sBAAA3D,EAAA,yDACb5D,EADa,yCAETwG,EACL,CACE1H,SAAU,kBAAC,UAAD,CAAWsD,QAAS,kBAAM+G,EAAU,cAAcrJ,OAAK,IACjE3C,MAAO,CACLikB,WAAY,4BACZ/B,YAAa,SACb1hB,MAAO,UAGX,cAXc,cAelBmF,EAAS,CACPM,KAAM,YACN0H,QAAS,CAAE9K,cAAawL,OAAQhH,EAAK8F,IAAKxH,SAAU0G,KAjBpC,kBAoBV6gB,YAAS7lB,EAAK8F,IAAKnK,GApBT,uDAsBhBQ,EAAU,+BAA+B,kBAAM4G,OAtB/B,yDAAH,qDA0BX8oB,EAA4BzxB,IAAW,CAC3C,sBAAsB,EACtB,6BAA8B0K,IAGhC,OACE,yBACE5B,IAAKA,EACL/I,UAAW0xB,EACXlvB,YAAU,+BAEV,yBAAKxC,UAAU,wBACZqB,EACC,kBAAC,UAAD,CACEqM,SACI7H,EAAK+a,UAAUjT,MAAK,SAACC,GAAD,OAAUA,EAAKtC,SAAWjK,EAAYsK,OAE9DoC,WAAYhF,EACZ8E,cAAe,CACbpK,QAAS,kBAAMmF,MAEjBkF,aAAc,CACZ,CACE9N,UAAW,2CACXb,KAAM,SAER,CACEa,UAAW,iCACXb,KAAM,oBAKZ,kBAAC,UAAD,CACEsE,QAAS,kBAAMmF,KACfzJ,KAAK,gBACLa,UAAU,mCAGd,kBAAC,UAAD,CACEyD,QAAS,kBACPpC,GAAewB,SAASC,cAAc,uBAAuByuB,SAE/DvxB,UAAU,eACVb,KAAK,uBAEP,kBAAC,UAAD,CAAMa,UAAU,eAAeb,KAAK,wBACpC,kBAAC,UAAD,CACEa,UAAU,eACVyD,QAAS,kBAAMunB,EAAanlB,EAAK8F,IAAKnK,IACtCrC,KACEkC,GAAeA,EAAY2Z,WACrB3Z,EAAY2Z,UAAUrN,MACtB,SAACuN,GAAD,OAAcA,EAASrV,OAASA,EAAK8F,OAErC,WAEF,sBAIV,uBAAG3L,UAAU,aACgB,IAA1B6F,EAAK+a,UAAUhe,OACd,gDACkB,IAChB,uBACEpE,MAAO,CAAE6J,OAAQ,WACjB5E,QAAS,SAACyE,GACRA,EAAMihB,YAAYC,2BAClBxgB,KAEFpG,YAAU,yBANZ,cAYF,8BACE,2BACGqD,EAAK+a,UAAUhe,OAAQ,IACG,IAA1BiD,EAAK+a,UAAUhe,OAAe,OAAS,WAKhD,uBAAG5C,UAAU,mCAAmC4wB,YAAW/qB,EAAKoF,Y,oNCtIzD0mB,EAAc,uCAAG,WAAO1rB,EAAU3B,GAAjB,eAAAW,EAAA,+EAEHK,IAAMgJ,IAAN,oBACRrI,GACb3B,GAAa,CAAEc,QAAS,CAAEC,cAAef,KAJjB,cAEpBkB,EAFoB,yBAMnBA,EAASL,MANU,sCAQpB,IAAIM,MAAJ,MARoB,yDAAH,wDAmBdurB,EAAU,uCAAG,WAAOhgB,EAAQ1M,GAAf,eAAAW,EAAA,+EAECK,IAAMO,KAAN,oBAAwBmL,EAAxB,WAAyC,KAAM,CACpE5L,QAAS,CAAEC,cAAef,KAHN,cAEhBkB,EAFgB,yBAKfA,EAASL,MALM,sCAOhB,IAAIM,MAAJ,MAPgB,yDAAH,wDAkBV4d,EAAqB,uCAAG,WAAOrS,EAAQ3C,EAAQ/J,GAAvB,eAAAW,EAAA,+EAEVK,IAAMgJ,IAAN,oBACR0C,EADQ,YACE3C,EADF,cAErB,CACEjJ,QAAS,CAAEC,cAAef,KALG,cAE3BkB,EAF2B,yBAQ1BA,EAASL,MARiB,sCAU3B,IAAIM,MAAJ,MAV2B,yDAAH,0DAqBrB6d,EAAqB,uCAAG,WAAOtS,EAAQ3C,EAAQ/J,GAAvB,eAAAW,EAAA,+EAEVK,IAAMgJ,IAAN,oBACR0C,EADQ,YACE3C,EADF,cAErB,CACEjJ,QAAS,CAAEC,cAAef,KALG,cAE3BkB,EAF2B,yBAQ1BA,EAASL,MARiB,sCAU3B,IAAIM,MAAJ,MAV2B,yDAAH,2D,uGCNnBzB,sBAAQ,MALI,SAACG,GAAD,MAAe,CACxC0D,UAAW,SAACxE,EAAOD,GAAR,OAAsBe,EAAS0D,YAAUxE,EAAOD,KAC3DoH,UAAW,SAACpH,GAAD,OAAee,EAASqG,YAAUpH,QAGhCY,EAnDO,SAAC,GAAyD,IAAvD6D,EAAsD,EAAtDA,UAAW2C,EAA2C,EAA3CA,UAAWyL,EAAgC,EAAhCA,SAAU9V,EAAsB,EAAtBA,SAAU3B,EAAY,EAAZA,MAAY,EACrDuM,wBAAS+f,GAD4C,mBACtE3U,EADsE,KAChEyb,EADgE,KAEvEC,EAAe7pB,mBACfuO,EAAU3U,cAiBhB,OAfAC,qBAAU,WACJsU,IACEtW,OAAO6R,WAAa,IACtB7J,EACE,CAAEsO,OAAMrD,KAAM,kBAAMtI,EAAU,qBAC9B,mBAGF+L,EAAQb,KAAK,OAAQ,CAAES,SAIzB0b,EAAappB,QAAQgH,MAAQ,MAE9B,CAAC0G,EAAMtO,EAAW2C,EAAW+L,IAE9B,kBAAC,WAAD,KACE,2BACE/X,MAAK,aAAI6J,OAAQ,WAAc7J,GAC/BwB,UAAU,OACV8xB,QAAQ,eAEP3xB,GAGC,kBAAC,UAAD,CAAMhB,KAAM8W,EAAW,qBAAuB,oBAGlD,2BACEpN,GAAG,cACHpE,KAAK,OACLjG,MAAO,CAAEK,QAAS,QAClBiK,OAAO,UAEPE,SAAU,SAACd,GAAD,OAAW0pB,EAAQ1pB,EAAMvJ,OAAOyJ,MAAM,KAChDW,IAAK8oB,S,gCChDb,gDAuCeE,UA3BM,SAAC,GAAD,IAAGtuB,EAAH,EAAGA,QAASkE,EAAZ,EAAYA,MAAOgZ,EAAnB,EAAmBA,MAAOE,EAA1B,EAA0BA,SAAUrV,EAApC,EAAoCA,OAApC,OACnB,4BAAQ/H,QAASA,EAASN,IAAKwE,EAAO3H,UAAU,iBAC9C,yBAAKkR,IAAK,mEAAoEgf,WAAUvoB,EAAOwJ,IAAI,YAAY3S,MAAO,CAAEgN,UAAU4kB,MAAM,aACxI,yBAAKpwB,UAAU,0BACb,0BAAMA,UAAU,0BACb2gB,EAAQ,GACP,yBAAK3gB,UAAU,uBACb,kBAAC,UAAD,CAAMb,KAAK,QAAQa,UAAU,gBAC7B,8BAAO2gB,IAGX,yBAAK3gB,UAAU,uBACb,kBAAC,UAAD,CAAMb,KAAK,cAAca,UAAU,gBACnC,8BAAO6gB,S,0HC0DFmR,UAxEG,SAAC,GAAmC,IAAjCxzB,EAAgC,EAAhCA,MAAOqb,EAAyB,EAAzBA,UAAWpW,EAAc,EAAdA,QAAc,EACzBsH,mBAAS,IADgB,mBAC5CkS,EAD4C,KACrCgV,EADqC,OAO/CrY,cAJFO,EAHiD,EAGjDA,yBACAjG,EAJiD,EAIjDA,OACAtN,EALiD,EAKjDA,SACAkT,EANiD,EAMjDA,YAEIvD,EAAU3U,cAQhB,OANAC,qBAAU,WACJqS,EAAOtR,OAAS,GAAKiX,GACvBA,EAAU3F,KAEX,CAACA,EAAQ2F,IAGV,kBAAC,WAAD,KACE,0BACE7Z,UAAU,aACVxB,MAAOA,EACP6Q,SAAU,SAACnH,GAAD,OAAWA,EAAMK,mBAE3B,2BACES,SAAU,SAACd,GACTiS,EAAyBjS,EAAMvJ,OAAO8Q,OACtCwiB,EAAS/pB,EAAMvJ,OAAO8Q,OACtBvH,EAAMvJ,OAAO8Q,OAASqK,GAAY,IAEpCrW,QAASA,EACTgM,MAAOwN,EACPjd,UAAU,oBACVuP,YAAY,WAEd,0BAAMvP,UAAU,2BACd,kBAAC,UAAD,CAAMb,KAAK,SAASa,UAAU,0BAC7B4G,GAAY,kBAAC,UAAD,QAGhBqW,IAAUrW,IAAaiT,GACtB,kBAAC,UAAD,CAAW/G,KAAM,kBAAMmf,EAAS,MACX,IAAlB/d,EAAOtR,QAAiBgE,EAQvBsN,GACAA,EAAOlR,KAAI,SAACuD,EAAMtD,GAAP,OACT,kBAAC,WAAD,CAAUE,IAAKF,GACb,kBAAC,UAAD,CACE6E,OAAQvB,EAAKuB,OACb7B,SAAUM,EAAKN,SACf4K,QAAStK,EAAKP,SACdxH,MAAO,CAAE4Q,QAAS,iBAClB3L,QAAS,WACP8S,EAAQb,KAAR,WAAiBnP,EAAKN,WACtBgsB,EAAS,OAGZ/d,EAAOtR,SAAWK,EAAM,GAAK,kBAAC,UAAD,UApBlC,wBACEzE,MAAO,CAAE4Q,QAAS,UAClBpP,UAAU,gDAFZ,yB,gCCrDZ,oDAuCekyB,UAlCG,SAAC,GAAmC,IAAjC/xB,EAAgC,EAAhCA,SAAU2S,EAAsB,EAAtBA,KAAMqf,EAAgB,EAAhBA,UAWnC,OAVAtwB,qBAAU,WAKR,OAJIiR,GACFjT,OAAOmT,iBAAiB,QAASF,GAG5B,WACLjT,OAAOqT,oBAAoB,QAASJ,MAErC,CAACA,IAGF,kBAAC,UAAD,CACE9S,UAAWC,IAAW,CACpB,cAAc,EACd,yBAA0BkyB,KAG5B,wBACE3zB,MAAO,CACL4zB,cAAe,OACfC,UAAW,QACX5O,UAAW,OACX6O,gBAAiB,SAGnB7uB,QAAS,SAACyE,GAAD,OAAWA,EAAMghB,oBAEzB/oB,M,kICqEHqH,EAAkBC,YAAyB,CAC/CJ,cAAeC,IACf4I,kBAAmB3I,MAGNvD,sBAAQwD,EAARxD,EA5FY,SAAC,GAKrB,IAJLqD,EAII,EAJJA,cACA6I,EAGI,EAHJA,kBACAgG,EAEI,EAFJA,OACA/W,EACI,EADJA,KACI,EAC8C4L,oBAAS,GADvD,mBACGwnB,EADH,KACsBliB,EADtB,OAEsDtF,oBAAS,GAF/D,mBAEGynB,EAFH,KAE0BC,EAF1B,OAGgE1nB,mBAClE,MAJE,mBAGG2nB,EAHH,KAG6BC,EAH7B,KAOJ9wB,qBAAU,WACJ6wB,GACFpM,aAAaoM,GAEXxiB,EAAkB8L,YAAc,KACjCwW,GAAyBC,GAAyB,GACnDE,EACEnM,YAAW,kBAAMiM,GAAyB,KAAQ,SAGrD,CAACviB,EAAkB8L,cAEtBna,qBAAU,WACJ0wB,IACFjM,aAAaoM,GACbD,GAAyB,MAE1B,CAACF,EAAmBG,IAEvB,IAAM5wB,EAAcC,eAClBmO,EAAkB8L,YAAc,GAAKwW,IACjC,CAAEnrB,iBAEN,KACA,CACEpF,KAAM,CACJC,UAAW,4BACX4mB,QAAS,GAEX3mB,MAAO,CACLD,UAAW,4BACX4mB,QAAS,GAEX1mB,MAAO,CACLF,UAAW,4BACX4mB,QAAS,GAEXzmB,OAAQ,CACNC,QAAS,IACTC,SAAU,MAKhB,OACE,yBAAK/D,MAAO,CAAE8J,SAAU,WAAY+E,OAAQ,SAC1C,4BAAQrN,UAAU,uBAChB,kBAAC,UAAD,CACEb,KAAMA,IAAcozB,EAAoB,QAAU,iBAClDvyB,UAAWkQ,EAAkB8L,YAAc,EAAI,eAAiB,GAChEvY,QAAS,kBACNyS,GAAU7F,GAAqB,SAAC9D,GAAD,OAAeA,MAEjD/N,MAAO,CAAE6J,OAAQ,aAElBvG,EAAYkB,KACX,gBAAGO,EAAH,EAAGA,KAAMJ,EAAT,EAASA,IAAKE,EAAd,EAAcA,MAAd,OACEE,GACE,kBAAC,UAAD,CACE/E,MAAO6E,EACPgE,cAAe9D,EAAK8D,cACpBlE,IAAKA,QAKdovB,IAAsBrc,GACrB,kBAAC,UAAD,CAAWpD,KAAM,kBAAMzC,GAAqB,IAAQ8hB,WAAS,GAC3D,kBAAC,UAAD,CAAkB9hB,qBAAsBA,U,gCC/FlD,2BAQeuiB,UANM,SAAC,GAAD,IAAGvjB,EAAH,EAAGA,SAAUlP,EAAb,EAAaA,SAAb,OACnB,0BAAMH,UAAU,gBAAgBqP,SAAUA,GACvClP,M","file":"static/js/main.57f2824e.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '../Button/Button';\nimport Icon from '../Icon/Icon';\n\nconst ViewOnGithubButton = () => (\n  <a\n    style={{ textDecoration: 'none' }}\n    href=\"https://github.com/chawaa/timcha\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    <Button\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n      }}\n      inverted\n    >\n      <Icon style={{ marginRight: '1rem' }} icon=\"logo-github\" />\n      View on GitHub\n    </Button>\n  </a>\n);\n\nexport default ViewOnGithubButton;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Icon from '../Icon/Icon';\n\nconst GithubLoginButton = ({ button, style }) => {\n  const authState = Math.random().toString(36).slice(2);\n  sessionStorage.setItem('authState', authState);\n\n  return (\n    <a\n      href={`https://github.com/login/oauth/authorize?client_id=${\n        process.env.NODE_ENV === 'development'\n          ? 'f9097f88fd42bfe5445f'\n          : '2b37ac447010b84fa1fa'\n      }&redirect_uri=${\n        window.location.origin\n      }/login&state=${authState}&scope=user:email`}\n      className={classNames({ 'github-login-button': true, button })}\n      style={style}\n    >\n      <Icon\n        style={{ marginRight: '1rem' }}\n        icon=\"logo-github\"\n        className={classNames({ 'color-white': button })}\n      />\n      <h3 className={classNames({ 'heading-4': true, 'color-white': button })}>\n        Log in with GitHub\n      </h3>\n    </a>\n  );\n};\n\nexport default GithubLoginButton;\n","import React from 'react';\n\nconst ImageGrid = ({ children }) => (\n  <div className=\"image-grid\">{children}</div>\n);\n\nexport default ImageGrid;\n","import React from 'react';\n\nimport { ReactComponent as Logo } from '../../assets/svg/logo-camera.svg';\n\nconst LoadingPage = () => (\n  <main className=\"loading-page\">\n    <Logo />\n  </main>\n);\n\nexport default LoadingPage;\n","import React, { useEffect, Fragment, Suspense, lazy } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useTransition } from 'react-spring';\n\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\nimport { signInStart } from '../../redux/user/userActions';\nimport { connectSocket } from '../../redux/socket/socketActions';\nimport { fetchNotificationsStart } from '../../redux/notification/notificationActions';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport Header from '../Header/Header';\nimport Modal from '../../components/Modal/Modal';\nimport Alert from '../../components/Alert/Alert';\nimport Footer from '../../components/Footer/Footer';\nimport MobileNav from '../../components/MobileNav/MobileNav';\n\nimport LoadingPage from '../../pages/LoadingPage/LoadingPage';\nconst ProfilePage = lazy(() => import('../../pages/ProfilePage/ProfilePage'));\nconst PostPage = lazy(() => import('../../pages/PostPage/PostPage'));\nconst ConfirmationPage = lazy(() =>\n  import('../../pages/ConfirmationPage/ConfirmationPage')\n);\nconst SettingsPage = lazy(() =>\n  import('../../pages/SettingsPage/SettingsPage')\n);\nconst ActivityPage = lazy(() =>\n  import('../../pages/ActivityPage/ActivityPage')\n);\nconst LoginPage = lazy(() => import('../../pages/LoginPage/LoginPage'));\nconst SignUpPage = lazy(() => import('../../pages/SignUpPage/SignUpPage'));\nconst HomePage = lazy(() => import('../../pages/HomePage/HomePage'));\nconst NewPostPage = lazy(() => import('../../pages/NewPostPage/NewPostPage'));\nconst ExplorePage = lazy(() => import('../../pages/ExplorePage/ExplorePage'));\nconst NotFoundPage = lazy(() =>\n  import('../../pages/NotFoundPage/NotFoundPage')\n);\n\nexport function UnconnectedApp({\n  signInStart,\n  modal,\n  alert,\n  currentUser,\n  connectSocket,\n  fetchNotificationsStart,\n}) {\n  const token = localStorage.getItem('token');\n  const {\n    location: { pathname },\n  } = useHistory();\n\n  useEffect(() => {\n    if (token) {\n      signInStart(null, null, token);\n      connectSocket();\n      fetchNotificationsStart(token);\n    }\n  }, [signInStart, connectSocket, fetchNotificationsStart, token]);\n\n  const renderModals = () => {\n    if (modal.modals.length > 0) {\n      // Disable scrolling on the body while a modal is active\n      document.querySelector('body').setAttribute('style', 'overflow: hidden;');\n      return modal.modals.map((modal, idx) => (\n        <Modal key={idx} component={modal.component} {...modal.props} />\n      ));\n    } else {\n      document.querySelector('body').setAttribute('style', '');\n    }\n  };\n\n  const transitions = useTransition(alert.showAlert, null, {\n    from: {\n      transform: 'translateY(4rem)',\n    },\n    enter: {\n      transform: 'translateY(0rem)',\n    },\n    leave: {\n      transform: 'translateY(4rem)',\n    },\n    config: {\n      tension: 500,\n      friction: 50,\n    },\n  });\n\n  const renderApp = () => {\n    // Wait for authentication\n    if (!currentUser && token) {\n      return <LoadingPage />;\n    }\n    return (\n      <Fragment>\n        {pathname !== '/login' && pathname !== '/signup' && <Header />}\n        {renderModals()}\n        {transitions.map(\n          ({ item, props, key }) =>\n            item && (\n              <Alert key={key} style={props} onClick={alert.onClick}>\n                {alert.text}\n              </Alert>\n            )\n        )}\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/signup\" component={SignUpPage} />\n          <ProtectedRoute exact path=\"/\" component={HomePage} />\n          <ProtectedRoute path=\"/settings\" component={SettingsPage} />\n          <ProtectedRoute path=\"/activity\" component={ActivityPage} />\n          <ProtectedRoute path=\"/new\" component={NewPostPage} />\n          <ProtectedRoute path=\"/explore\" component={ExplorePage} />\n          <Route exact path=\"/:username\" component={ProfilePage} />\n          <Route path=\"/post/:postId\" component={PostPage} />\n          <ProtectedRoute path=\"/confirm/:token\" component={ConfirmationPage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n        {pathname !== '/' && <Footer />}\n        {pathname !== '/login' &&\n          pathname !== '/signup' &&\n          pathname !== '/new' &&\n          currentUser && <MobileNav currentUser={currentUser} />}\n      </Fragment>\n    );\n  };\n\n  return (\n    <div className=\"app\" data-test=\"component-app\">\n      <Suspense fallback={<LoadingPage />}>{renderApp()}</Suspense>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  modal: state.modal,\n  alert: state.alert,\n  currentUser: selectCurrentUser(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  signInStart: (usernameOrEmail, password, token) =>\n    dispatch(signInStart(usernameOrEmail, password, token)),\n  connectSocket: () => dispatch(connectSocket()),\n  fetchNotificationsStart: (authToken) =>\n    dispatch(fetchNotificationsStart(authToken)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(UnconnectedApp);\n","export const linkifyOptions = {\n  formatHref: function (href, type) {\n    if (type === 'hashtag') {\n      href = '/explore/tags/' + href.substring(1);\n    }\n    if (type === 'mention') {\n      href = '/' + href.substring(1);\n    }\n    return href;\n  },\n  className: 'styled-link',\n  attributes: {\n    target: {\n      url: '_blank',\n    },\n  },\n};\n","const socketTypes = {\n  CONNECT: 'CONNECT',\n  DISCONNECT: 'DISCONNECT',\n};\n\nexport default socketTypes;\n","import axios from 'axios';\n\n/**\n * Logs a user in with the provided credentials\n * @function login\n * @param {string} usernameOrEmail The username or email to login with\n * @param {string} password A password to log in with\n * @param {string} authToken A token to be used instead of a username/email or password\n * @returns {object} The user object\n */\nexport const login = async (usernameOrEmail, password, authToken) => {\n  try {\n    const request =\n      usernameOrEmail && password\n        ? { data: { usernameOrEmail, password } }\n        : { headers: { authorization: authToken } };\n    const response = await axios('/api/auth/login', {\n      method: 'POST',\n      ...request,\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Logs the user in or signs them up with their github account\n * @function githubLogin\n * @param {number} code Code provided by github to exchange for an access code\n * @returns {object} User object\n */\nexport const githubAuthentication = async (code) => {\n  try {\n    const response = await axios.post('/api/auth/login/github', {\n      code,\n      state: sessionStorage.getItem('authState'),\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Registers a user with the provided credentials\n * @param {string} email A user's email address\n * @param {string} fullName A user's full name\n * @param {string} username A user's username\n * @param {string} password A user's password\n * @returns {object} The user object\n */\nexport const registerUser = async (email, fullName, username, password) => {\n  try {\n    const response = await axios.post('/api/auth/register', {\n      email,\n      fullName,\n      username,\n      password,\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Changes a users password\n * @function changePassword\n * @param {string} oldPassword The user's current password\n * @param {string} newPassword The new password\n * @param {string} authToken A user's auth token\n */\nexport const changePassword = async (oldPassword, newPassword, authToken) => {\n  try {\n    await axios.put(\n      '/api/auth/password',\n      {\n        oldPassword,\n        newPassword,\n      },\n      {\n        headers: {\n          authorization: authToken,\n        },\n      }\n    );\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n","import { createSelector } from 'reselect';\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n);\n\nexport const selectError = createSelector([selectUser], (user) => user.error);\n\nexport const selectToken = createSelector([selectUser], (user) => user.token);\n\nexport const selectFetching = createSelector(\n  [selectUser],\n  (user) => user.fetching\n);\n\nexport const selectFetchingAvatar = createSelector(\n  [selectUser],\n  (user) => user.fetchingAvatar\n);\n\nexport const selectUpdatingProfile = createSelector(\n  [selectUser],\n  (user) => user.updatingProfile\n);\n","const modalTypes = {\n  SHOW_MODAL: 'SHOW_MODAL',\n  HIDE_MODAL: 'HIDE_MODAL'\n};\n\nexport default modalTypes;\n","import { createSelector } from 'reselect';\n\nconst selectNotificationsObject = (state) => state.notifications;\n\nexport const selectNotifications = createSelector(\n  [selectNotificationsObject],\n  (notifications) => notifications.notifications\n);\n\nexport const selectNotificationState = createSelector(\n  [selectNotificationsObject],\n  (notifications) => notifications\n);\n","import React, { Fragment, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  changeAvatarStart,\n  removeAvatarStart,\n} from '../../redux/user/userActions';\nimport {\n  selectCurrentUser,\n  selectToken,\n  selectFetchingAvatar,\n  selectError,\n} from '../../redux/user/userSelectors';\nimport { showModal } from '../../redux/modal/modalActions';\nimport { showAlert } from '../../redux/alert/alertActions';\n\nconst ChangeAvatarButton = ({\n  children,\n  changeAvatarStart,\n  removeAvatarStart,\n  currentUser: { avatar },\n  showModal,\n  showAlert,\n  token,\n  error,\n}) => {\n  const inputRef = useRef();\n\n  useEffect(() => {\n    if (error) {\n      showAlert(error);\n    }\n  }, [error, showAlert]);\n\n  const handleClick = (event) => {\n    if (avatar) {\n      event.preventDefault();\n      return showModal(\n        {\n          options: [\n            {\n              text: 'Upload Photo',\n              className: 'color-blue font-bold',\n              onClick: () => {\n                inputRef.current.click();\n              },\n            },\n            {\n              warning: true,\n              text: 'Remove Current Photo',\n              onClick: () => {\n                changeAvatar(null, true);\n              },\n            },\n          ],\n        },\n        'OptionsDialog/OptionsDialog'\n      );\n    }\n    inputRef.current.click();\n  };\n\n  const changeAvatar = async (event, remove) => {\n    remove\n      ? await removeAvatarStart(token)\n      : await changeAvatarStart(event.target.files[0], token);\n    if (!error) showAlert('Profile picture updated.');\n  };\n\n  return (\n    <Fragment>\n      <label\n        className=\"color-blue font-bold heading-4\"\n        style={{ cursor: 'pointer', position: 'relative' }}\n        onClick={(event) => handleClick(event)}\n      >\n        <Fragment>{children ? children : 'Change Profile Photo'}</Fragment>\n      </label>\n      <input\n        id=\"avatar-upload\"\n        type=\"file\"\n        accept=\"image/*\"\n        style={{ display: 'none' }}\n        ref={inputRef}\n        onChange={(event) => changeAvatar(event)}\n      />\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeAvatarStart: (image, authToken) =>\n    dispatch(changeAvatarStart(image, authToken)),\n  removeAvatarStart: (authToken) => dispatch(removeAvatarStart(authToken)),\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken,\n  fetchingAvatar: selectFetchingAvatar,\n  error: selectError,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeAvatarButton);\n","const userTypes = {\n  SIGN_IN_START: 'SIGN_IN_START',\n  SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n  SIGN_OUT: 'SIGN_OUT',\n  SIGN_UP_START: 'SIGN_UP_START',\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE',\n  GITHUB_SIGN_IN_START: 'GITHUB_SIGN_IN_START',\n  GITHUB_SIGN_IN_FAILURE: 'GITHUB_SIGN_IN_FAILURE',\n  GITHUB_SIGN_IN_SUCCESS: 'GITHUB_SIGN_IN_SUCCESS',\n  BOOKMARK_POST: 'BOOKMARK_POST',\n  CHANGE_AVATAR_START: 'CHANGE_AVATAR_START',\n  CHANGE_AVATAR_SUCCESS: 'CHANGE_AVATAR_SUCCESS',\n  CHANGE_AVATAR_FAILURE: 'CHANGE_AVATAR_FAILURE',\n  REMOVE_AVATAR_START: 'REMOVE_AVATAR_START',\n  REMOVE_AVATAR_SUCCESS: 'REMOVE_AVATAR_SUCCESS',\n  REMOVE_AVATAR_FAILURE: 'REMOVE_AVATAR_FAILURE',\n  UPDATE_PROFILE_START: 'UPDATE_PROFILE_START',\n  UPDATE_PROFILE_FAILURE: 'UPDATE_PROFILE_FAILURE',\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\n};\n\nexport default userTypes;\n","import React, { Fragment, useRef, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { formatDateDistance } from '../../utils/timeUtils';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Linkify from 'linkifyjs/react';\nimport * as linkify from 'linkifyjs';\nimport mention from 'linkifyjs/plugins/mention';\nimport hashtag from 'linkifyjs/plugins/hashtag';\n\nimport { linkifyOptions } from '../../utils/linkifyUtils';\n\nimport Icon from '../Icon/Icon';\n\nimport { showModal, hideModal } from '../../redux/modal/modalActions';\nimport { showAlert } from '../../redux/alert/alertActions';\n\nimport {\n  voteComment,\n  getCommentReplies,\n  deleteComment,\n} from '../../services/commentService';\n\nimport Avatar from '../Avatar/Avatar';\nimport PulsatingIcon from '../Icon/PulsatingIcon/PulsatingIcon';\nimport CommentReply from './CommentReply/CommentReply';\n\nmention(linkify);\nhashtag(linkify);\n\nconst Comment = ({\n  comment,\n  caption,\n  simple,\n  post,\n  token,\n  currentUser,\n  dialogDispatch,\n  profileDispatch,\n  showModal,\n  hideModal,\n  showAlert,\n}) => {\n  const commentRef = useRef();\n  const [commentPostTime, setCommentPostTime] = useState(() =>\n    formatDateDistance(caption ? post.date : comment.date)\n  );\n  const [toggleCommentReplies, setToggleCommentReplies] = useState(false);\n  const author = caption ? comment : comment.author;\n\n  const commentReplies =\n    post.commentReplies\n      .filter((commentReply) => commentReply.parentComment === comment._id)\n      .sort((a, b) => {\n        return new Date(a) - new Date(b);\n      }) || [];\n\n  useEffect(() => {\n    const commentPostTimeInterval = setInterval(() => {\n      setCommentPostTime(\n        formatDateDistance(caption ? post.date : comment.date)\n      );\n    }, 60000);\n    return () => clearInterval(commentPostTimeInterval);\n  }, [setCommentPostTime, caption, comment, post]);\n\n  const handleVote = async () => {\n    try {\n      dialogDispatch &&\n        dialogDispatch({\n          type: 'VOTE_COMMENT',\n          payload: { commentId: comment._id, currentUser },\n        });\n      await voteComment(comment._id, token);\n    } catch (err) {\n      showAlert('Could not vote on the comment.', () => handleVote());\n    }\n  };\n\n  const handleGetCommentReplies = async () => {\n    if (commentReplies.length === comment.commentReplies) {\n      setToggleCommentReplies((previous) => !previous);\n    } else {\n      try {\n        const replies = await getCommentReplies(\n          comment._id,\n          commentReplies.length > 0 ? commentReplies.length : 0\n        );\n        dialogDispatch({\n          type: 'ADD_COMMENT_REPLY',\n          payload: { comment: replies, parentCommentId: comment._id },\n        });\n        !toggleCommentReplies && setToggleCommentReplies(true);\n      } catch (err) {\n        showAlert(\"Could not get the comment's replies.\", () =>\n          handleGetCommentReplies()\n        );\n      }\n    }\n  };\n\n  const handleDeleteComment = async () => {\n    try {\n      dialogDispatch({ type: 'REMOVE_COMMENT', payload: comment._id });\n      profileDispatch &&\n        profileDispatch({\n          type: 'DECREMENT_POST_COMMENTS_COUNT',\n          payload: {\n            decrementCount: comment.commentReplies\n              ? 1 + comment.commentReplies\n              : 1,\n            postId: post._id,\n          },\n        });\n      await deleteComment(comment._id, token);\n    } catch (err) {\n      showAlert('Could not delete comment.', () => handleDeleteComment());\n    }\n  };\n\n  const renderToggleRepliesButtonText = () => {\n    if (commentReplies.length === comment.commentReplies) {\n      if (toggleCommentReplies) {\n        return 'Hide replies';\n      }\n      return `View replies (${comment.commentReplies})`;\n    } else if (commentReplies.length < comment.commentReplies) {\n      return `View replies (${comment.commentReplies - commentReplies.length})`;\n    }\n  };\n\n  const commentClassNames = classNames({\n    comment: true,\n    'comment--simple': simple,\n  });\n\n  return (\n    <Fragment>\n      <div className={commentClassNames} ref={commentRef}>\n        <Link\n          onClick={() => hideModal('PostDialog')}\n          to={`/${author.username}`}\n        >\n          <Avatar\n            size=\"4rem\"\n            imageSrc={author.avatar}\n            className=\"avatar--small\"\n          />\n        </Link>\n        <div className=\"comment__content\">\n          <p className=\"heading-4\">\n            <Link\n              onClick={() => hideModal('PostDialog')}\n              style={{\n                textDecoration: 'none',\n                color: 'currentColor',\n                marginRight: '5px',\n              }}\n              to={`/${author.username}`}\n            >\n              <b>{author.username}</b>\n            </Link>\n            <Linkify options={linkifyOptions}>{comment.message}</Linkify>\n          </p>\n          {!caption &&\n          currentUser &&\n          author.username === currentUser.username ? (\n            <div\n              onClick={() =>\n                showModal(\n                  {\n                    options: [\n                      {\n                        warning: true,\n                        text: 'Delete',\n                        onClick: () => handleDeleteComment(),\n                      },\n                    ],\n                  },\n                  'OptionsDialog/OptionsDialog'\n                )\n              }\n              className=\"comment__menu-dots\"\n              style={{ marginRight: '0' }}\n            >\n              <Icon\n                className=\"icon--small icon--button color-grey\"\n                icon=\"ellipsis-horizontal\"\n                style={{ height: '3rem' }}\n              />\n            </div>\n          ) : null}\n          <div className=\"comment__stats\">\n            <p className=\"heading-5 color-light\">{commentPostTime}</p>\n            {!caption && (\n              <Fragment>\n                {comment.commentVotes.length > 0 && (\n                  <p className=\"heading-5 color-light\">\n                    {comment.commentVotes.length}{' '}\n                    {comment.commentVotes.length === 1 ? 'like' : 'likes'}\n                  </p>\n                )}\n                <button\n                  onClick={() =>\n                    // Telling the PostDialogCommentForm that we want to reply to this comment\n                    dialogDispatch({\n                      type: 'SET_REPLYING',\n                      payload: {\n                        username: comment.author.username,\n                        commentId: comment._id,\n                      },\n                    })\n                  }\n                  className=\"heading-5 heading--button color-light\"\n                >\n                  reply\n                </button>\n              </Fragment>\n            )}\n          </div>\n          {caption && post.commentData ? (\n            <Link\n              className=\"heading-4 color-grey font-medium\"\n              style={{ textDecoration: 'none' }}\n              to={`/post/${post._id}`}\n            >\n              View all {post.commentData.commentCount} comments\n            </Link>\n          ) : null}\n          {dialogDispatch && !caption && comment.commentReplies > 0 ? (\n            <p\n              onClick={() => handleGetCommentReplies()}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                marginTop: '1rem',\n              }}\n              className=\"heading-5 heading--button color-light\"\n            >\n              <span className=\"dash mr-lg\" />\n              {/* Check if all the comments available are fetched */}\n              {renderToggleRepliesButtonText()}\n            </p>\n          ) : null}\n        </div>\n        {!caption && (\n          <div className=\"comment__like\">\n            {currentUser ? (\n              <PulsatingIcon\n                toggle={\n                  !!comment.commentVotes.find(\n                    (vote) => vote.author === currentUser._id\n                  )\n                }\n                constantProps={{\n                  onClick: () => handleVote(),\n                }}\n                toggledProps={[\n                  { icon: 'heart', className: 'icon--tiny color-red' },\n                  { icon: 'heart-outline', className: 'icon--tiny' },\n                ]}\n                elementRef={commentRef}\n              />\n            ) : (\n              <Icon icon=\"heart-outline\" className=\"icon--tiny\" />\n            )}\n          </div>\n        )}\n      </div>\n      {/* Render any comment replies */}\n      {toggleCommentReplies\n        ? commentReplies.map((commentReply, idx) => (\n            <CommentReply\n              comment={commentReply}\n              parentComment={comment}\n              post={post}\n              token={token}\n              currentUser={currentUser}\n              dialogDispatch={dialogDispatch}\n              profileDispatch={profileDispatch}\n              showModal={showModal}\n              hideModal={hideModal}\n              showAlert={showAlert}\n              key={idx}\n            />\n          ))\n        : null}\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  hideModal: (component) => dispatch(hideModal(component)),\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n});\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    username: PropTypes.isRequired,\n    commentVotes: PropTypes.array,\n    _id: PropTypes.string,\n    date: PropTypes.string,\n  }).isRequired,\n  caption: PropTypes.bool,\n  post: PropTypes.object.isRequired,\n  token: PropTypes.string,\n  currentUser: PropTypes.object,\n  showModal: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Comment);\n","export const INITIAL_STATE = {\n  fetching: true,\n  fetchingAdditional: false,\n  error: false,\n  data: null,\n};\n\nexport const usersListReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_START': {\n      return { ...state, fetching: true, error: false };\n    }\n    case 'FETCH_ADDITIONAL_START': {\n      return {\n        ...state,\n        fetching: false,\n        error: false,\n        fetchingAdditional: true,\n      };\n    }\n    case 'FETCH_FAILURE': {\n      return {\n        ...state,\n        fetching: false,\n        fetchingAdditional: false,\n        error: action.payload,\n      };\n    }\n    case 'FETCH_SUCCESS': {\n      return {\n        ...state,\n        fetching: false,\n        fetchingAdditional: false,\n        error: false,\n        data: action.payload,\n      };\n    }\n    case 'ADD_USERS': {\n      return {\n        ...state,\n        fetchingAdditional: false,\n        data: [...state.data, ...action.payload],\n      };\n    }\n    default: {\n      throw new Error(\n        `Invalid action type '${action.type}' passed to followingOverviewReducer`\n      );\n    }\n  }\n};\n","import axios from 'axios';\n\n/**\n * Retrieves posts from user's feed\n * @function retrieveFeedPosts\n * @param {string} authToken A user's auth token\n * @param {number} offset The offset of posts to retrieve\n * @returns {array} Array of posts\n */\nexport const retrieveFeedPosts = async (authToken, offset = 0) => {\n  try {\n    const response = await axios.get(`/api/post/feed/${offset}`, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data);\n  }\n};\n","import feedTypes from './feedTypes';\n\nimport { retrieveFeedPosts } from '../../services/feedServices';\n\nexport const fetchFeedPostsStart = (authToken, offset) => async (dispatch) => {\n  try {\n    dispatch({ type: feedTypes.FETCH_POSTS_START });\n    const response = await retrieveFeedPosts(authToken, offset);\n    dispatch({ type: feedTypes.FETCH_POSTS_SUCCESS, payload: response });\n  } catch (err) {\n    dispatch({ type: feedTypes.FETCH_POSTS_FAILURE, payload: err.message });\n  }\n};\n\nexport const addPost = (post) => ({\n  type: feedTypes.ADD_POST,\n  payload: post,\n});\n\nexport const removePost = (postId) => ({\n  type: feedTypes.REMOVE_POST,\n  payload: postId,\n});\n\nexport const clearPosts = () => ({\n  type: feedTypes.CLEAR_POSTS,\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\n\nimport { signInStart } from '../../redux/user/userActions';\n\nimport {\n  selectError,\n  selectFetching,\n  selectCurrentUser,\n} from '../../redux/user/userSelectors';\n\nimport Button from '../Button/Button';\nimport FormInput from '../FormInput/FormInput';\nimport Divider from '../Divider/Divider';\nimport TextButton from '../Button/TextButton/TextButton';\nimport ViewOnGithubButton from '../ViewOnGithubButton/ViewOnGithubButton';\nimport GithubLoginButton from '../GithubLoginButton/GithubLoginButton';\nimport Card from '../Card/Card';\n\nconst LoginCard = ({\n  signInStart,\n  error,\n  fetching,\n  currentUser,\n  onClick,\n  modal,\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    signInStart(email, password);\n  };\n\n  currentUser && onClick();\n\n  return (\n    <div\n      className=\"login-card-container\"\n      style={\n        modal\n          ? {\n              padding: '2rem',\n            }\n          : {}\n      }\n    >\n      <Card className=\"form-card\">\n        <h1 className=\"heading-logo text-center\">Timcha</h1>\n        <form\n          onSubmit={(event) => handleSubmit(event)}\n          className=\"form-card__form\"\n        >\n          <FormInput\n            placeholder=\"Username or email address\"\n            type=\"text\"\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <FormInput\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <Button disabled={fetching} loading={fetching}>\n            Log In\n          </Button>\n        </form>\n        <Divider>OR</Divider>\n        <GithubLoginButton />\n        {error && (\n          <p style={{ padding: '1rem 0' }} className=\"error\">\n            {error}\n          </p>\n        )}\n        <TextButton style={{ marginTop: '1.5rem' }} darkBlue small>\n          Forgot password?\n        </TextButton>\n      </Card>\n      <Card>\n        <section\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '2rem',\n          }}\n        >\n          <h4 style={{ marginRight: '5px' }} className=\"heading-4 font-thin\">\n            Don't have an account?\n          </h4>\n          <Link to=\"/signup\" onClick={() => onClick && onClick()}>\n            <TextButton medium blue bold>\n              Sign up\n            </TextButton>\n          </Link>\n        </section>\n      </Card>\n      <ViewOnGithubButton />\n    </div>\n  );\n};\n\nLoginCard.propTypes = {\n  signInStart: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signInStart: (email, password) => dispatch(signInStart(email, password)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  fetching: selectFetching,\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginCard);\n","import React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\n\nimport {\n  selectNotifications,\n  selectNotificationState,\n} from '../../../redux/notification/notificationSelectors';\nimport { selectToken } from '../../../redux/user/userSelectors';\n\nimport {\n  fetchNotificationsStart,\n  readNotificationsStart,\n  clearNotifications,\n} from '../../../redux/notification/notificationActions';\n\nimport UserCard from '../../UserCard/UserCard';\nimport UsersListSkeleton from '../../UsersList/UsersListSkeleton/UsersListSkeleton';\nimport Icon from '../../Icon/Icon';\nimport FollowButton from '../../Button/FollowButton/FollowButton';\nimport Divider from '../../Divider/Divider';\nimport Linkify from 'linkifyjs/react';\nimport * as linkify from 'linkifyjs';\nimport mention from 'linkifyjs/plugins/mention';\n\nimport { linkifyOptions } from '../../../utils/linkifyUtils';\n\nmention(linkify);\n\nconst NotificationFeed = ({\n  notifications,\n  fetchNotificationsStart,\n  readNotificationsStart,\n  notificationState,\n  clearNotifications,\n  setShowNotifications,\n  token,\n}) => {\n  useEffect(() => {\n    (async function () {\n      await fetchNotificationsStart(token);\n      await readNotificationsStart(token);\n    })();\n\n    return () => {\n      clearNotifications();\n    };\n  }, [\n    fetchNotificationsStart,\n    readNotificationsStart,\n    clearNotifications,\n    token,\n  ]);\n\n  return (\n    <Fragment>\n      {notificationState.fetching ? (\n        <UsersListSkeleton style={{ height: '7rem' }} />\n      ) : notifications.length > 0 ? (\n        notifications.map((notification, idx) => {\n          const userCardProps = {\n            username: notification.sender.username,\n            avatar: notification.sender.avatar,\n            subTextDark: true,\n            token: token,\n            date: notification.date,\n            style: { minHeight: '7rem', padding: '1rem 1.5rem' },\n          };\n          let userCardChild = null;\n\n          switch (notification.notificationType) {\n            case 'follow': {\n              userCardProps.subText = 'started following you.';\n              userCardChild = (\n                <FollowButton\n                  username={notification.sender.username}\n                  avatar={notification.sender.avatar}\n                  following={notification.isFollowing}\n                  userId={notification.sender._id}\n                />\n              );\n              break;\n            }\n            case 'like': {\n              userCardProps.subText = 'liked your photo.';\n              userCardChild = (\n                <Link to={`/post/${notification.notificationData.postId}`}>\n                  <img\n                    src={notification.notificationData.image}\n                    style={{\n                      display: 'flex',\n                      filter: notification.notificationData.filter,\n                    }}\n                    onClick={() =>\n                      setShowNotifications && setShowNotifications(false)\n                    }\n                    alt=\"liked post\"\n                  />\n                </Link>\n              );\n              break;\n            }\n            default: {\n              userCardProps.subText = (\n                <Linkify options={linkifyOptions}>{`${\n                  notification.notificationType === 'comment'\n                    ? 'commented:'\n                    : 'mentioned you in a comment:'\n                } ${notification.notificationData.message}`}</Linkify>\n              );\n              userCardChild = (\n                <Link to={`/post/${notification.notificationData.postId}`}>\n                  <img\n                    src={notification.notificationData.image}\n                    style={{\n                      display: 'flex',\n                      filter: notification.notificationData.filter,\n                    }}\n                    onClick={() =>\n                      setShowNotifications && setShowNotifications(false)\n                    }\n                    alt=\"post commented on\"\n                  />\n                </Link>\n              );\n            }\n          }\n\n          return (\n            <li key={idx}>\n              <UserCard {...userCardProps}>\n                {userCardChild && userCardChild}\n              </UserCard>\n              {notifications.length - 1 > idx && <Divider />}\n            </li>\n          );\n        })\n      ) : (\n        <div className=\"popup-card__empty\">\n          <Icon className=\"icon--larger\" icon=\"heart-circle-outline\" />\n          <h2 className=\"heading-2 font-medium\">Activity On Your Posts</h2>\n          <h4 className=\"heading-4 font-medium\">\n            When someone likes or comments on your posts, you'll see them here.\n          </h4>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  notifications: selectNotifications,\n  notificationState: selectNotificationState,\n  token: selectToken,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchNotificationsStart: (authToken) =>\n    dispatch(fetchNotificationsStart(authToken)),\n  readNotificationsStart: (authToken) =>\n    dispatch(readNotificationsStart(authToken)),\n  clearNotifications: () => dispatch(clearNotifications()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationFeed);\n","import React from 'react';\n\nimport Avatar from '../Avatar/Avatar';\n\nconst UnfollowPrompt = ({ avatar, username }) => (\n  <div className=\"unfollow-prompt\">\n    <Avatar style={{ width: '10rem', height: '10rem' }} imageSrc={avatar} />\n    <p\n      style={{ marginTop: '3rem' }}\n      className=\"heading-4\"\n    >{`Unfollow @${username}?`}</p>\n  </div>\n);\n\nexport default UnfollowPrompt;\n","import React, { useState, memo, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\n\nimport { selectCurrentUser } from '../../redux/user/userSelectors';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\n\nimport { ReactComponent as LogoCamera } from '../../assets/svg/logo-camera.svg';\nimport SearchBox from '../SearchBox/SearchBox';\nimport NewPostButton from '../NewPost/NewPostButton/NewPostButton';\nimport NotificationButton from '../Notification/NotificationButton/NotificationButton';\nimport Button from '../Button/Button';\nimport Icon from '../Icon/Icon';\n\nconst Header = memo(({ currentUser }) => {\n  const [shouldMinimizeHeader, setShouldMinimizeHeader] = useState(false);\n  const {\n    location: { pathname },\n  } = useHistory();\n\n  // Shrink header height and remove logo on scroll\n  useScrollPositionThrottled(({ currentScrollPosition }) => {\n    if (window.outerWidth > 600) {\n      setShouldMinimizeHeader(currentScrollPosition > 100);\n    }\n  });\n\n  const headerClassNames = classNames({\n    header: true,\n    'header--small': shouldMinimizeHeader,\n  });\n\n  return (\n    <header className={headerClassNames}>\n      <div className=\"header__content\">\n        <Link to=\"/\" className=\"header__logo\">\n          <div className=\"header__logo-image\">\n            <LogoCamera />\n          </div>\n          <div className=\"header__logo-header\">\n            <h3 className=\"heading-logo\">Timcha</h3>\n          </div>\n        </Link>\n        <SearchBox />\n        <div className=\"header__icons\">\n          {currentUser ? (\n            <Fragment>\n              <Link to=\"/explore\">\n                <Icon\n                  icon={pathname === '/explore' ? 'compass' : 'compass-outline'}\n                />\n              </Link>\n              <NotificationButton />\n              <Link to={'/' + currentUser.username}>\n                <Icon\n                  icon={\n                    pathname === '/' + currentUser.username\n                      ? 'person-circle'\n                      : 'person-circle-outline'\n                  }\n                />\n              </Link>\n              <NewPostButton />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Link style={{ marginRight: '1rem' }} to=\"/login\">\n                <Button>Log In</Button>\n              </Link>\n              <Link to=\"/signup\">\n                <h3 className=\"heading-3 heading--button color-blue\">\n                  Sign Up\n                </h3>\n              </Link>\n            </Fragment>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n});\n\nHeader.whyDidYouRender = true;\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { animated } from 'react-spring';\n\nimport Icon from '../../../Icon/Icon';\n\nconst NotificationPopup = ({ style, notifications }) => {\n  let newFollowers = 0;\n  let newLikes = 0;\n  let newComments = 0;\n\n  notifications.forEach((notification) => {\n    if (!notification.read) {\n      switch (notification.notificationType) {\n        case 'follow': {\n          newFollowers += 1;\n          break;\n        }\n        case 'comment':\n        case 'mention': {\n          newComments += 1;\n          break;\n        }\n        default: {\n          newLikes += 1;\n        }\n      }\n    }\n  });\n\n  const renderIcons = (icon, number) => (\n    <div>\n      <Icon className=\"icon--small\" icon={icon} />\n      <span>{number}</span>\n    </div>\n  );\n\n  return (\n    <animated.div className=\"notification-button__popup\" style={style}>\n      {newFollowers > 0 && renderIcons('person', newFollowers)}\n      {newLikes > 0 && renderIcons('heart', newLikes)}\n      {newComments > 0 && renderIcons('chatbubble', newComments)}\n    </animated.div>\n  );\n};\n\nexport default NotificationPopup;\n","import React, { useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { hideModal } from '../../redux/modal/modalActions';\n\nconst Modal = memo(({ component, hideModal, ...additionalProps }) => {\n  const modalRoot = document.querySelector('#modal-root');\n  const el = document.createElement('div');\n  const Child = require(`../../components/${component}`).default;\n  el.className = 'modal grid';\n\n  useEffect(() => {\n    const hide = ({ target }) => {\n      if (target === el || !el.contains(target)) {\n        hideModal(component);\n      }\n    };\n    el.addEventListener('mousedown', hide, false);\n    modalRoot.appendChild(el);\n\n    return () => {\n      el.removeEventListener('mousedown', hide, false);\n      modalRoot.removeChild(el);\n    };\n  }, [el, modalRoot, hideModal, component]);\n\n  return ReactDOM.createPortal(\n    <Child hide={() => hideModal(component)} {...additionalProps} />,\n    el\n  );\n});\n\nModal.whyDidYouRender = true;\n\nModal.propTypes = {\n  component: PropTypes.string.isRequired,\n  props: PropTypes.object,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(null, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport { animated } from 'react-spring';\n\nimport TextButton from '../Button/TextButton/TextButton';\n\nconst Alert = ({ children, onClick, style }) => (\n  <animated.div style={style} className=\"alert\">\n    <h3 style={{ color: 'white' }} className=\"heading-3 font-medium\">\n      {children}\n    </h3>\n    {onClick && (\n      <TextButton onClick={onClick} blue bold>\n        Retry\n      </TextButton>\n    )}\n  </animated.div>\n);\n\nexport default Alert;\n","import React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { formatDateDistance } from '../../../utils/timeUtils';\nimport { Link } from 'react-router-dom';\nimport Linkify from 'linkifyjs/react';\nimport * as linkify from 'linkifyjs';\nimport mention from 'linkifyjs/plugins/mention';\n\nimport { linkifyOptions } from '../../../utils/linkifyUtils';\n\nimport Icon from '../../Icon/Icon';\n\nimport {\n  voteCommentReply,\n  deleteCommentReply,\n} from '../../../services/commentService';\n\nimport Avatar from '../../Avatar/Avatar';\nimport PulsatingIcon from '../../Icon/PulsatingIcon/PulsatingIcon';\n\nmention(linkify);\n\nconst CommentReply = ({\n  comment,\n  parentComment,\n  post,\n  token,\n  currentUser,\n  dialogDispatch,\n  profileDispatch,\n  showModal,\n  hideModal,\n  showAlert,\n}) => {\n  const commentReplyRef = useRef();\n  const [commentPostTime, setCommentPostTime] = useState(() =>\n    formatDateDistance(comment.date)\n  );\n\n  useEffect(() => {\n    const commentPostTimeInterval = setInterval(() => {\n      setCommentPostTime(formatDateDistance(comment.date));\n    }, 60000);\n    return () => clearInterval(commentPostTimeInterval);\n  }, [setCommentPostTime, comment]);\n\n  const handleCommentReplyVote = async () => {\n    try {\n      dialogDispatch({\n        type: 'VOTE_COMMENT_REPLY',\n        payload: { commentReplyId: comment._id, currentUser },\n      });\n      await voteCommentReply(comment._id, token);\n    } catch (err) {\n      showAlert('Could not vote on the comment.', () =>\n        handleCommentReplyVote()\n      );\n    }\n  };\n\n  const handleCommentReplyDelete = async () => {\n    try {\n      dialogDispatch({\n        type: 'REMOVE_COMMENT_REPLY',\n        payload: {\n          commentReplyId: comment._id,\n          parentCommentId: parentComment._id,\n        },\n      });\n      profileDispatch &&\n        profileDispatch({\n          type: 'DECREMENT_POST_COMMENTS_COUNT',\n          payload: { decrementCount: 1, postId: post._id },\n        });\n      await deleteCommentReply(comment._id, token);\n    } catch (err) {\n      showAlert(\"Could not get the comment's replies.\", () =>\n        handleCommentReplyDelete()\n      );\n    }\n  };\n\n  return (\n    <div\n      style={{ marginLeft: '5rem' }}\n      className=\"comment\"\n      ref={commentReplyRef}\n    >\n      <Link\n        onClick={() => hideModal('PostDialog')}\n        to={`/${comment.author.username}`}\n      >\n        <Avatar\n          size=\"4rem\"\n          imageSrc={comment.author.avatar}\n          className=\"avatar--small\"\n        />\n      </Link>\n      <div className=\"comment__content\">\n        <p className=\"heading-4\">\n          <Link\n            onClick={() => hideModal('PostDialog')}\n            style={{\n              textDecoration: 'none',\n              color: 'currentColor',\n              marginRight: '5px',\n            }}\n            to={`/${comment.author.username}`}\n          >\n            <b>{comment.author.username}</b>\n          </Link>\n          <Linkify options={linkifyOptions}>{comment.message}</Linkify>\n        </p>\n        {currentUser && comment.author.username === currentUser.username ? (\n          <div\n            onClick={() =>\n              showModal(\n                {\n                  options: [\n                    {\n                      warning: true,\n                      text: 'Delete',\n                      onClick: () => handleCommentReplyDelete(),\n                    },\n                  ],\n                },\n                'OptionsDialog/OptionsDialog'\n              )\n            }\n            className=\"comment__menu-dots\"\n            style={{ marginRight: '0' }}\n          >\n            <Icon\n              className=\"icon--small icon--button color-grey\"\n              icon=\"ellipsis-horizontal\"\n              style={{ height: '3rem' }}\n            />\n          </div>\n        ) : null}\n        <div className=\"comment__stats\">\n          <p className=\"heading-5 color-light\">{commentPostTime}</p>\n          <Fragment>\n            {comment.commentReplyVotes.length > 0 && (\n              <p className=\"heading-5 color-light\">\n                {comment.commentReplyVotes.length}{' '}\n                {comment.commentReplyVotes.length === 1 ? 'like' : 'likes'}\n              </p>\n            )}\n            <button\n              onClick={() =>\n                // Telling the PostDialogCommentForm that we want to reply to the parent comment\n                dialogDispatch({\n                  type: 'SET_REPLYING',\n                  payload: {\n                    username: comment.author.username,\n                    commentId: parentComment._id,\n                  },\n                })\n              }\n              className=\"heading-5 heading--button color-light\"\n            >\n              reply\n            </button>\n          </Fragment>\n        </div>\n      </div>\n      <div className=\"comment__like\">\n        {currentUser ? (\n          <PulsatingIcon\n            toggle={\n              !!comment.commentReplyVotes.find(\n                (vote) => vote.author === currentUser._id\n              )\n            }\n            constantProps={{\n              onClick: () => handleCommentReplyVote(),\n            }}\n            toggledProps={[\n              { icon: 'heart', className: 'icon--tiny color-red' },\n              { icon: 'heart-outline', className: 'icon--tiny' },\n            ]}\n            elementRef={commentReplyRef}\n          />\n        ) : (\n          <Icon icon=\"heart-outline\" className=\"icon--tiny\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentReply;\n","import React from 'react';\n\nconst FormTextarea = ({ children, fieldProps, ...additionalProps }) => (\n  <textarea\n    className=\"form-group__textarea\"\n    {...fieldProps}\n    {...additionalProps}\n  >\n    {children}\n  </textarea>\n);\n\nexport default FormTextarea;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\n\nimport { searchUsers } from '../../services/userService';\n\nimport UsersListSkeleton from '../UsersList/UsersListSkeleton/UsersListSkeleton';\nimport UserCard from '../UserCard/UserCard';\n\nconst SearchSuggestion = ({ fetching, result, onClick, username }) => {\n  const [additionalUsers, setAdditionalUsers] = useState([]);\n  const [shouldFetch, setShouldFetch] = useState(false);\n  const [fetchingAdditionalUsers, setFetchingAdditionalUsers] = useState(false);\n  const componentRef = useRef();\n  const offset = 10;\n\n  useEffect(() => {\n    if (result.length === offset && !shouldFetch) setShouldFetch(true);\n  }, [result, shouldFetch]);\n\n  useScrollPositionThrottled(\n    async ({ atBottom }) => {\n      if (atBottom && shouldFetch && !fetching && !fetchingAdditionalUsers) {\n        try {\n          setFetchingAdditionalUsers(true);\n          const users = await searchUsers(\n            username,\n            result.length + additionalUsers.length\n          );\n          // Returned less than the max users meaning there are no more users to fetch\n          if (users.length !== offset) setShouldFetch(false);\n          setAdditionalUsers((previous) => [...previous, ...users]);\n          setFetchingAdditionalUsers(false);\n        } catch (err) {\n          setFetchingAdditionalUsers(false);\n          setShouldFetch(false);\n        }\n      }\n    },\n    componentRef.current,\n    [shouldFetch, fetching, fetchingAdditionalUsers]\n  );\n\n  const renderUserCard = (user, idx) => (\n    <li key={idx}>\n      <UserCard\n        username={user.username}\n        avatar={user.avatar}\n        subText={user.fullName}\n        onClick={() => onClick(user)}\n      />\n    </li>\n  );\n\n  return (\n    <ul ref={componentRef} className=\"search-suggestion\">\n      {fetching ? (\n        <UsersListSkeleton />\n      ) : (\n        result.map((user, idx) => renderUserCard(user, idx))\n      )}\n      {fetchingAdditionalUsers ? (\n        <UsersListSkeleton />\n      ) : (\n        additionalUsers.map((user, idx) => renderUserCard(user, idx))\n      )}\n    </ul>\n  );\n};\n\nexport default SearchSuggestion;\n","import React from 'react';\n\nimport Divider from '../../Divider/Divider';\nimport Icon from '../../Icon/Icon';\n\nconst FeedBottom = () => (\n  <div className=\"feed__bottom\">\n    <Divider>\n      <Icon\n        icon=\"checkmark-circle-outline\"\n        className=\"feed__bottom-icon icon--larger\"\n      />\n    </Divider>\n    <h2 className=\"heading-2\">You're All Caught Up</h2>\n    <h3 className=\"heading-3 color-grey\">\n      Follow more people to see more posts.\n    </h3>\n  </div>\n);\n\nexport default FeedBottom;\n","import React, { useRef, useState, Fragment } from 'react';\nimport classNames from 'classnames';\n\nimport Loader from '../Loader/Loader';\nimport SkeletonLoader from '../SkeletonLoader/SkeletonLoader';\n\nconst FilterSelector = ({ setFilter, filters, previewImage }) => {\n  const filterSelectorRef = useRef();\n  const [selectedFilter, setSelectedFilter] = useState('Normal');\n\n  const handleClick = (name, filter) => {\n    setSelectedFilter(name);\n    setFilter(filter, name);\n  };\n\n  const renderSkeleton = (amount) => {\n    const skeleton = [];\n    for (let i = 0; i < amount; i++) {\n      skeleton.push(\n        <li\n          className=\"filter-selector__item\"\n          style={{ width: '12rem', height: '8rem' }}\n          key={i}\n        >\n          <SkeletonLoader animated />\n        </li>\n      );\n    }\n    return skeleton;\n  };\n\n  return (\n    <ul ref={filterSelectorRef} className=\"filter-selector\">\n      {filters.length === 0 ? (\n        <Loader />\n      ) : previewImage ? (\n        <Fragment>\n          <li\n            className={classNames({\n              'filter-selector__item': true,\n              'filter-selector__item--active font-bold':\n                selectedFilter === 'Normal',\n            })}\n            onClick={() => handleClick('Normal', '')}\n          >\n            <span className=\"filter-selector__filter-name heading-5\">\n              Normal\n            </span>\n            <img src={previewImage} alt=\"Filter preview\" />\n          </li>\n          {filters.map(({ name, filter }, idx) => (\n            <li\n              className={classNames({\n                'filter-selector__item': true,\n                'filter-selector__item--active font-bold':\n                  selectedFilter === name,\n              })}\n              onClick={() => handleClick(name, filter)}\n              key={idx}\n            >\n              <span className=\"filter-selector__filter-name heading-5\">\n                {name}\n              </span>\n              <img src={previewImage} style={{ filter }} alt=\"Filter preview\" />\n            </li>\n          ))}\n        </Fragment>\n      ) : (\n        renderSkeleton(10)\n      )}\n    </ul>\n  );\n};\n\nexport default FilterSelector;\n","import React from 'react';\n\nimport TextButton from '../Button/TextButton/TextButton';\nimport Icon from '../Icon/Icon';\nimport Button from '../Button/Button';\n\nconst ViewOnBeianButton = () => (\n  <a\n    style={{ textDecoration: 'none' }}\n    href=\"https://beian.miit.gov.cn/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    <Button\n      style={{\n        color: '#999',\n        padding: '0px',\n        border: '0px',\n        marginLeft: '15px',\n      }}\n      inverted\n    >\n      粵ICP備20012196號\n    </Button>\n  </a>\n);\n\nconst ViewOnartstation = () => (\n  <a\n    style={{ textDecoration: 'none' }}\n    href=\"https://art.timcha.net/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    <Button\n      style={{\n        color: '#999',\n        padding: '0px',\n        border: '0px',\n        marginLeft: '15px',\n      }}\n      inverted\n    >\n      彩蛋\n    </Button>\n  </a>\n);\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"footer__left\">\n      <TextButton bold small darkBlue>\n        ABOUT\n      </TextButton>\n      <TextButton bold small darkBlue>\n        HELP\n      </TextButton>\n      <TextButton bold small darkBlue>\n        PRESS\n      </TextButton>\n      <TextButton bold small darkBlue>\n        API\n      </TextButton>\n      <TextButton bold small darkBlue>\n        JOBS\n      </TextButton>\n      <TextButton bold small darkBlue>\n        PRIVACY\n      </TextButton>\n      <TextButton bold small darkBlue>\n        TERMS\n      </TextButton>\n    </div>\n    <div className=\"footer__right\">\n      <h4\n        className=\"heading-4 color-grey font-bold\"\n        style={{ display: 'flex', alignItems: 'center' }}\n      >\n        @2021{' '}\n        <Icon\n          className=\"icon--small color-grey\"\n          icon=\"heart\"\n          style={{ display: 'inline-block', margin: '0 5px' }}\n        />{' '}甜茶\n        <ViewOnartstation />\n        <ViewOnBeianButton />\n      </h4>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Icon from '../Icon/Icon';\nimport NotificationButton from '../Notification/NotificationButton/NotificationButton';\nimport NewPostButton from '../NewPost/NewPostButton/NewPostButton';\n\nconst MobileNav = ({ currentUser }) => {\n  const {\n    location: { pathname },\n  } = useHistory();\n\n  return (\n    <nav className=\"mobile-nav\">\n      <ul className=\"mobile-nav__list\">\n        <li>\n          <Link to=\"/\">\n            <Icon icon={pathname === '/' ? 'home' : 'home-outline'} />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/explore\">\n            <Icon\n              icon={pathname === '/explore' ? 'search' : 'search-outline'}\n            />\n          </Link>\n        </li>\n        <li>\n          <NewPostButton plusIcon />\n        </li>\n        <li>\n          <Link to=\"/activity\">\n            <NotificationButton\n              mobile\n              icon={pathname === '/activity' ? 'heart' : 'heart-outline'}\n            />\n          </Link>\n        </li>\n        <li>\n          <Link to={`/${currentUser.username}`}>\n            <Icon\n              icon={\n                pathname === `/${currentUser.username}`\n                  ? 'person-circle'\n                  : 'person-circle-outline'\n              }\n            />\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default MobileNav;\n","import React, { useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  selectToken,\n  selectCurrentUser,\n} from '../../../redux/user/userSelectors';\nimport { showAlert } from '../../../redux/alert/alertActions';\nimport { addPost } from '../../../redux/feed/feedActions';\n\nimport { createPost } from '../../../services/postService';\n\nimport Avatar from '../../Avatar/Avatar';\nimport MobileHeader from '../../Header/MobileHeader/MobileHeader';\nimport Icon from '../../Icon/Icon';\nimport TextButton from '../../Button/TextButton/TextButton';\nimport Loader from '../../Loader/Loader';\n\nconst NewPostForm = ({\n  token,\n  file,\n  previewImage,\n  currentUser,\n  hide,\n  back,\n  showAlert,\n  addPost,\n}) => {\n  const [caption, setCaption] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const handleClick = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.set('caption', caption);\n    formData.set('crop', JSON.stringify(previewImage.crop));\n    previewImage.filterName && formData.set('filter', previewImage.filterName);\n    try {\n      setLoading(true);\n      const post = await createPost(formData, token);\n      setLoading(false);\n      hide();\n      if (history.location.pathname === '/') {\n        addPost(post);\n      } else {\n        history.push('/');\n      }\n    } catch (err) {\n      setLoading(false);\n      showAlert(err.message || 'Could not share post.', () =>\n        handleClick(event)\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      {loading && <Loader />}\n      <MobileHeader show>\n        <Icon\n          icon=\"chevron-back\"\n          onClick={() => back()}\n          style={{ cursor: 'pointer' }}\n        />\n        <h3 className=\"heading-3\">New Post</h3>\n        <TextButton\n          bold\n          blue\n          style={{ fontSize: '1.5rem' }}\n          onClick={(event) => handleClick(event)}\n        >\n          Share\n        </TextButton>\n      </MobileHeader>\n      <form\n        style={file && { display: 'block' }}\n        className=\"new-post__form post-form\"\n      >\n        <Fragment>\n          <div className=\"post-form__input\">\n            <div className=\"post-form__avatar\">\n              <Avatar\n                size=\"3rem\"\n                className=\"avatar--small\"\n                imageSrc={\n                  currentUser.avatar\n                    ? currentUser.avatar\n                    : require('../../../assets/img/default-avatar.png').default\n                }\n              />\n            </div>\n            <textarea\n              className=\"post-form__textarea\"\n              placeholder=\"Write a caption...\"\n              onChange={(event) => setCaption(event.target.value)}\n            />\n            <div className=\"post-form__preview\">\n              <img\n                src={previewImage.src}\n                alt=\"Preview\"\n                style={{ filter: previewImage.filter }}\n              />\n            </div>\n          </div>\n        </Fragment>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  token: selectToken,\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n  addPost: (post) => dispatch(addPost(post)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm);\n","import React, { Fragment } from 'react';\n\nimport FilterSelector from '../../FilterSelector/FilterSelector';\nimport SkeletonLoader from '../../SkeletonLoader/SkeletonLoader';\n\nconst NewPostFilter = ({ previewImage, setPreviewImage, filters }) => {\n  return (\n    <Fragment>\n      <div className=\"new-post__preview\">\n        <div className=\"new-post__preview-image-container\">\n          {previewImage.src ? (\n            <img\n              src={previewImage.src}\n              alt=\"Customize\"\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'contain',\n                filter: previewImage.filter,\n              }}\n            />\n          ) : (\n            <SkeletonLoader />\n          )}\n        </div>\n      </div>\n      <FilterSelector\n        setFilter={(filter, filterName) =>\n          setPreviewImage((previous) => ({ ...previous, filter, filterName }))\n        }\n        previewImage={previewImage.src}\n        filters={filters}\n      />\n    </Fragment>\n  );\n};\n\nexport default NewPostFilter;\n","import React, { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Avatar from '../../Avatar/Avatar';\n\nconst SuggestionCard = ({ avatar, username, fullName, posts, children }) => {\n  const history = useHistory();\n\n  return (\n    <div className=\"suggestion-card\">\n      <Avatar\n        onClick={() => history.push('/' + username)}\n        className=\"avatar--large mb-sm\"\n        imageSrc={avatar}\n      />\n      <h4 className=\"heading-4 font-bold\">{username}</h4>\n      <h4 className=\"heading-4 color-grey font-medium\">{fullName}</h4>\n      <div className=\"suggestion-card__content\">\n        {posts.length > 0 ? (\n          posts.map((post, idx) => (\n            <figure className=\"suggestion-card__image-container\" key={idx}>\n              <img\n                src={post.thumbnail}\n                alt=\"User post\"\n                style={{ filter: post.filter }}\n              />\n            </figure>\n          ))\n        ) : (\n          <Fragment>\n            <div style={{ padding: '2rem' }}>\n              <h3 className=\"heading-4 font-bold\">No Posts</h3>\n              <h4 className=\"heading-5 font-medium color-grey\">\n                This user has no posts yet, follow them to see their future\n                posts.\n              </h4>\n            </div>\n          </Fragment>\n        )}\n      </div>\n\n      <div className=\"suggestion-card__footer\">\n        <h5 className=\"heading-5 color-grey font-medium\">Random</h5>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default SuggestionCard;\n","var _style, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogoCamera(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"\\\\u56FE\\\\u5C42_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 48 48\",\n    style: {\n      enableBackground: \"new 0 0 48 48\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#0095F6;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Icons\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Icons_8_\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M24,1C11.3,1,1,11.3,1,24s10.3,23,23,23c12.7,0,23-10.3,23-23S36.7,1,24,1z M22.3,30.4h8.3 c1.6,0,2.8,1.3,2.8,2.8S32.1,36,30.6,36h-8.3c-4.2,0-7.6-3.4-7.6-7.6V14.8c0-1.5,1.3-2.8,2.8-2.8c1.6,0,2.8,1.2,2.8,2.8v3.3h10.3 c1.6,0,2.8,1.3,2.8,2.8c0,1.5-1.2,2.8-2.8,2.8H20.2v4.7C20.2,29.5,21.1,30.4,22.3,30.4z\"\n  }))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoCamera);\nexport default __webpack_public_path__ + \"static/media/logo-camera.881567e4.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useRef } from 'react';\nimport debounce from 'lodash/debounce';\n\nimport { searchUsers } from '../services/userService';\n\n/**\n * A memoized debounced hook to search for users with a given offset\n * @function useSearchUsersDebounced\n * @returns {object} Search function and search result\n */\nconst useSearchUsersDebounced = () => {\n  const [result, setResult] = useState([]);\n  const [fetching, setFetching] = useState(false);\n\n  const handleSearch = async (string, offset) => {\n    if (!string) {\n      setFetching(false);\n      return setResult([]);\n    }\n\n    try {\n      const response = await searchUsers(string, offset);\n      setResult(response ? response : []);\n      setFetching(false);\n    } catch (err) {\n      setFetching(false);\n      throw new Error(err);\n    }\n  };\n  const handleSearchDebounced = debounce(handleSearch, 500);\n  const handleSearchDebouncedRef = useRef((string, offset) =>\n    handleSearchDebounced(string, offset)\n  ).current;\n  return {\n    handleSearchDebouncedRef,\n    result,\n    setResult,\n    fetching,\n    setFetching,\n  };\n};\n\nexport default useSearchUsersDebounced;\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nexport const middlewares = [thunk];\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ClassNames from 'classnames';\n\nconst TextButton = ({\n  children,\n  blue,\n  darkBlue,\n  bold,\n  large,\n  medium,\n  small,\n  ...additionalProps\n}) => {\n  const textButtonClassNames = ClassNames({\n    'text-button': true,\n    'heading-3': large,\n    'heading-4': medium,\n    'heading-5': small,\n    'color-blue': blue,\n    'color-blue-2': darkBlue,\n    'font-bold': bold,\n  });\n  return (\n    <button {...additionalProps} className={textButtonClassNames}>\n      {children}\n    </button>\n  );\n};\n\nexport default TextButton;\n","import userTypes from './userTypes';\n\nexport const INITIAL_STATE = {\n  currentUser: null,\n  error: false,\n  fetching: false,\n  fetchingAvatar: false,\n  updatingProfile: false,\n  token: localStorage.getItem('token'),\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userTypes.GITHUB_SIGN_IN_START:\n    case userTypes.SIGN_UP_START:\n    case userTypes.SIGN_IN_START: {\n      return { ...state, error: false, fetching: true };\n    }\n    case userTypes.GITHUB_SIGN_IN_SUCCESS:\n    case userTypes.SIGN_IN_SUCCESS: {\n      return {\n        ...state,\n        currentUser: action.payload.user,\n        error: false,\n        fetching: false,\n        token: action.payload.token,\n      };\n    }\n    case userTypes.GITHUB_SIGN_IN_FAILURE:\n    case userTypes.SIGN_UP_FAILURE:\n    case userTypes.SIGN_IN_FAILURE: {\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    }\n    case userTypes.SIGN_OUT: {\n      return {\n        ...state,\n        currentUser: null,\n        token: null,\n      };\n    }\n    case userTypes.BOOKMARK_POST: {\n      const { operation, postId } = action.payload;\n      let bookmarks = JSON.parse(JSON.stringify(state.currentUser.bookmarks));\n      if (operation === 'add') {\n        bookmarks.push({ post: postId });\n      } else {\n        bookmarks = bookmarks.filter((bookmark) => bookmark.post !== postId);\n      }\n      return {\n        ...state,\n        currentUser: {\n          ...state.currentUser,\n          bookmarks,\n        },\n      };\n    }\n    case userTypes.REMOVE_AVATAR_START:\n    case userTypes.CHANGE_AVATAR_START: {\n      return { ...state, fetchingAvatar: true };\n    }\n    case userTypes.CHANGE_AVATAR_SUCCESS: {\n      return {\n        ...state,\n        currentUser: { ...state.currentUser, avatar: action.payload },\n        fetchingAvatar: false,\n      };\n    }\n    case userTypes.REMOVE_AVATAR_FAILURE:\n    case userTypes.CHANGE_AVATAR_FAILURE: {\n      return {\n        ...state,\n        fetchingAvatar: false,\n        error: action.payload,\n      };\n    }\n    case userTypes.REMOVE_AVATAR_SUCCESS: {\n      // Removing the avatar key from the currentUser object\n      const { avatar, ...additionalKeys } = state.currentUser;\n      return {\n        ...state,\n        currentUser: { ...additionalKeys },\n        fetchingAvatar: false,\n        error: false,\n      };\n    }\n    case userTypes.UPDATE_PROFILE_START: {\n      return {\n        ...state,\n        updatingProfile: true,\n      };\n    }\n    case userTypes.UPDATE_PROFILE_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        updatingProfile: false,\n        currentUser: { ...state.currentUser, ...action.payload },\n      };\n    }\n    case userTypes.UPDATE_PROFILE_FAILURE: {\n      return {\n        ...state,\n        updatingProfile: false,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import modalTypes from './modalTypes';\n\nconst INITIAL_STATE = {\n  modals: []\n  // show: false,\n  // props: undefined,\n  // component: undefined\n};\n\nconst modalReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case modalTypes.HIDE_MODAL: {\n      const modals = state.modals;\n      const modifiedModals = modals.filter(\n        modal => modal.component !== action.payload\n      );\n      return { modals: modifiedModals };\n    }\n    case modalTypes.SHOW_MODAL: {\n      const { props, component } = action.payload;\n      return { modals: [...state.modals, { props, component }] };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default modalReducer;\n","import alertTypes from './alertTypes';\n\nconst INITIAL_STATE = {\n  text: '',\n  onClick: null,\n  showAlert: false,\n  timeoutId: null,\n};\n\nconst alertReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case alertTypes.SHOW_ALERT: {\n      const { text, onClick } = action.payload;\n      return {\n        ...state,\n        text,\n        onClick,\n        showAlert: true,\n      };\n    }\n    case alertTypes.HIDE_ALERT: {\n      return { ...state, text: '', onClick: null, showAlert: false };\n    }\n    case alertTypes.SET_ALERT_TIMEOUT_ID: {\n      return {\n        ...state,\n        timeoutId: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default alertReducer;\n","import socketTypes from './socketTypes';\n\nconst INTIAL_STATE = {\n  socket: null,\n};\n\nconst socketReducer = (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case socketTypes.CONNECT: {\n      return {\n        ...state,\n        socket: action.payload,\n      };\n    }\n    case socketTypes.DISCONNECT: {\n      state.socket && state.socket.disconnect();\n      return INTIAL_STATE;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default socketReducer;\n","import notificationTypes from './notificationTypes';\n\nconst INITIAL_STATE = {\n  notifications: [],\n  unreadCount: 0,\n  fetching: false,\n  error: false,\n};\n\nconst notificationReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case notificationTypes.ADD_NOTIFICATION: {\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications],\n        unreadCount: state.unreadCount + 1,\n      };\n    }\n    case notificationTypes.FETCH_NOTIFICATIONS_START: {\n      return {\n        ...state,\n        fetching: true,\n        error: false,\n      };\n    }\n    case notificationTypes.FETCH_NOTIFICATIONS_FAILURE: {\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    }\n    case notificationTypes.FETCH_NOTIFICATIONS_SUCCESS: {\n      const unreadCount = action.payload.filter(\n        (notification) => notification.read === false\n      ).length;\n      return {\n        ...state,\n        fetching: false,\n        error: false,\n        notifications: action.payload,\n        unreadCount,\n      };\n    }\n    case notificationTypes.READ_NOTIFICATIONS: {\n      const notifications = JSON.parse(JSON.stringify(state.notifications));\n      notifications.forEach((notification) => (notification.read = true));\n      return {\n        ...state,\n        unreadCount: 0,\n        notifications,\n      };\n    }\n    case notificationTypes.CLEAR_NOTIFICATIONS: {\n      return {\n        ...state,\n        unreadCount: 0,\n        notifications: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default notificationReducer;\n","import feedTypes from './feedTypes';\n\nconst INITIAL_STATE = {\n  posts: [],\n  fetching: true,\n  error: false,\n  hasMore: false,\n};\n\nconst feedReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case feedTypes.FETCH_POSTS_START: {\n      return {\n        ...state,\n        fetching: true,\n        error: false,\n      };\n    }\n    case feedTypes.FETCH_POSTS_SUCCESS: {\n      return {\n        ...state,\n        fetching: false,\n        error: false,\n        posts: [...state.posts, ...action.payload],\n        hasMore: action.payload.length === 5,\n      };\n    }\n    case feedTypes.FETCH_POSTS_FAILURE: {\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    }\n    case feedTypes.ADD_POST: {\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts],\n      };\n    }\n    case feedTypes.REMOVE_POST: {\n      const posts = JSON.parse(JSON.stringify(state.posts));\n      const postIndex = posts.findIndex((post) => post._id === action.payload);\n      if (postIndex) {\n        posts.splice(postIndex, 1);\n      }\n      return {\n        ...state,\n        posts,\n      };\n    }\n    case feedTypes.CLEAR_POSTS: {\n      return {\n        ...state,\n        posts: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default feedReducer;\n","import { combineReducers } from 'redux';\n\nimport userReducer from './user/userReducer.js';\nimport modalReducer from './modal/modalReducer';\nimport alertReducer from './alert/alertReducer';\nimport socketReducer from './socket/socketReducer';\nimport notificationReducer from './notification/notificationReducer';\nimport feedReducer from './feed/feedReducer';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  modal: modalReducer,\n  alert: alertReducer,\n  socket: socketReducer,\n  notifications: notificationReducer,\n  feed: feedReducer,\n});\n\nexport default rootReducer;\n","import socketTypes from './socketTypes';\nimport { connect } from '../../services/socketService';\nimport { addNotification } from '../notification/notificationActions';\nimport { addPost, removePost } from '../feed/feedActions';\n\nexport const connectSocket = () => (dispatch) => {\n  const socket = connect();\n  dispatch({ type: socketTypes.CONNECT, payload: socket });\n\n  socket.on('newNotification', (data) => {\n    dispatch(addNotification(data));\n  });\n\n  socket.on('newPost', (data) => {\n    dispatch(addPost(data));\n  });\n\n  socket.on('deletePost', (data) => {\n    dispatch(removePost(data));\n  });\n};\n\nexport const disconnectSocket = () => ({\n  type: socketTypes.DISCONNECT,\n});\n","import io from 'socket.io-client';\n\nexport const connect = () => {\n  const socket = io({\n    query: { token: localStorage.getItem('token') },\n  });\n  return socket;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Loader from '../Loader/Loader';\n\nconst Button = ({ children, onClick, inverted, style, disabled, loading }) => {\n  const buttonClasses = classNames({\n    button: true,\n    'button--inverted': inverted,\n    'button--disabled': disabled,\n  });\n  return (\n    <button\n      style={style}\n      className={buttonClasses}\n      onClick={loading ? () => {} : onClick}\n      type={disabled ? 'button' : 'submit'}\n    >\n      {loading && <Loader />}\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  onClick: PropTypes.func,\n  inverted: PropTypes.bool,\n};\n\nexport default Button;\n","import { createSelector } from 'reselect';\n\nconst selectFeed = (state) => state.feed;\n\nexport const selectFeedPosts = createSelector(\n  [selectFeed],\n  (feed) => feed.posts\n);\n\nexport const selectFeedError = createSelector(\n  [selectFeed],\n  (feed) => feed.error\n);\n\nexport const selectFeedFetching = createSelector(\n  [selectFeed],\n  (feed) => feed.fetching\n);\n\nexport const selectHasMore = createSelector(\n  [selectFeed],\n  (feed) => feed.hasMore\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { showModal } from '../../redux/modal/modalActions';\nimport { signOut } from '../../redux/user/userActions';\n\nimport Icon from '../Icon/Icon';\n\nconst SettingsButton = ({ showModal, signOut }) => {\n  const history = useHistory();\n  return (\n    <Icon\n      icon=\"aperture-outline\"\n      style={{ cursor: 'pointer' }}\n      onClick={() => {\n        showModal(\n          {\n            options: [\n              {\n                text: 'Change Password',\n                onClick: () => history.push('/settings/password'),\n              },\n              {\n                text: 'Log Out',\n                onClick: () => {\n                  signOut();\n                  history.push('/');\n                },\n              },\n            ],\n          },\n          'OptionsDialog/OptionsDialog'\n        );\n      }}\n    />\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  signOut: () => dispatch(signOut()),\n});\n\nexport default connect(null, mapDispatchToProps)(SettingsButton);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectCurrentUser, selectToken } from '../../redux/user/userSelectors';\nimport { showAlert } from '../../redux/alert/alertActions';\n\nimport { validatePassword } from '../../utils/validation';\n\nimport { changePassword } from '../../services/authenticationServices';\n\nimport Avatar from '../Avatar/Avatar';\nimport FormInput from '../FormInput/FormInput';\nimport Button from '../Button/Button';\nimport TextButton from '../Button/TextButton/TextButton';\nimport SettingsForm from '../SettingsForm/SettingsForm';\nimport SettingsFormGroup from '../SettingsForm/SettingsFormGroup/SettingsFormGroup';\n\nconst ChangePasswordForm = ({ currentUser, token, showAlert }) => {\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [fetching, setFetching] = useState(false);\n  useEffect(() => {\n    document.title = 'Change Password • Timcha';\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      return showAlert('Please make sure both passwords match.');\n    }\n    const newPasswordError = validatePassword(newPassword);\n    if (newPasswordError) return showAlert(newPasswordError);\n\n    try {\n      setFetching(true);\n      await changePassword(oldPassword, newPassword, token);\n      showAlert(\n        \"Your password has been changed, you'll have to log in with the new one next time.\"\n      );\n      setFetching(false);\n    } catch (err) {\n      setFetching(false);\n      showAlert(err.message);\n    }\n  };\n\n  return (\n    <SettingsForm onSubmit={(event) => handleSubmit(event)}>\n      <SettingsFormGroup>\n        <Avatar className=\"avatar--small\" imageSrc={currentUser.avatar} />\n        <h1 className=\"font-medium\" style={{ fontSize: '2.5rem' }}>\n          {currentUser.username}\n        </h1>\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">Old Password</label>\n        <FormInput\n          onChange={(event) => setOldPassword(event.target.value)}\n          type=\"password\"\n        />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">New Password</label>\n        <FormInput\n          onChange={(event) => setNewPassword(event.target.value)}\n          type=\"password\"\n        />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">Confirm New Password</label>\n        <FormInput\n          onChange={(event) => setConfirmNewPassword(event.target.value)}\n          type=\"password\"\n        />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label></label>\n        <Button\n          style={{ width: '15rem' }}\n          loading={fetching}\n          disabled={\n            oldPassword.length < 6 ||\n            newPassword.length < 6 ||\n            confirmNewPassword.length < 6\n          }\n        >\n          Change Password\n        </Button>\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label></label>\n        <TextButton style={{ width: '15rem', textAlign: 'left' }} blue bold>\n          Forgot Password?\n        </TextButton>\n      </SettingsFormGroup>\n    </SettingsForm>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordForm);\n","import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  selectCurrentUser,\n  selectToken,\n  selectUpdatingProfile,\n} from '../../redux/user/userSelectors';\nimport { updateProfileStart } from '../../redux/user/userActions';\nimport { showAlert } from '../../redux/alert/alertActions';\n\nimport {\n  validateEmail,\n  validateFullName,\n  validateUsername,\n  validateBio,\n  validateWebsite,\n} from '../../utils/validation';\n\nimport Avatar from '../Avatar/Avatar';\nimport FormInput from '../FormInput/FormInput';\nimport FormTextarea from '../FormTextarea/FormTextarea';\nimport Button from '../Button/Button';\nimport SettingsForm from '../SettingsForm/SettingsForm';\nimport SettingsFormGroup from '../SettingsForm/SettingsFormGroup/SettingsFormGroup';\nimport ChangeAvatarButton from '../ChangeAvatarButton/ChangeAvatarButton';\n\nconst EditProfileForm = ({\n  currentUser,\n  showAlert,\n  token,\n  updateProfileStart,\n  updatingProfile,\n}) => {\n  const validate = (values) => {\n    const errors = {};\n    const emailError = validateEmail(values.email);\n    if (emailError) errors.email = emailError;\n\n    const fullNameError = validateFullName(values.fullName);\n    if (fullNameError) errors.fullName = fullNameError;\n\n    const usernameError = validateUsername(values.username);\n    if (usernameError) errors.username = usernameError;\n\n    const bioError = validateBio(values.bio);\n    if (bioError) errors.bio = bioError;\n\n    const websiteError = validateWebsite(values.website);\n    if (websiteError) errors.website = websiteError;\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: currentUser.email,\n      fullName: currentUser.fullName,\n      username: currentUser.username,\n      bio: currentUser.bio || '',\n      website: currentUser.website || '',\n    },\n    validate,\n    onSubmit: async (values) => {\n      await updateProfileStart(token, values);\n      showAlert('Profile saved.');\n    },\n  });\n\n  useEffect(() => {\n    document.title = 'Edit Profile • Timcha';\n  }, []);\n\n  return (\n    <SettingsForm onSubmit={formik.handleSubmit}>\n      <SettingsFormGroup>\n        <ChangeAvatarButton>\n          <Avatar\n            className=\"avatar--small\"\n            imageSrc={currentUser.avatar}\n            style={{ alignSelf: 'start' }}\n          />\n        </ChangeAvatarButton>\n        <div style={{ lineHeight: '2.2rem' }}>\n          <h3 className=\"heading-2 font-medium\">{formik.values.username}</h3>\n          <ChangeAvatarButton />\n        </div>\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">Name</label>\n        <FormInput\n          name=\"fullName\"\n          fieldProps={formik.getFieldProps('fullName')}\n        />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">Username</label>\n        <FormInput\n          name=\"username\"\n          fieldProps={formik.getFieldProps('username')}\n        />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">Website</label>\n        <FormInput\n          name=\"website\"\n          fieldProps={formik.getFieldProps('website')}\n        />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">Bio</label>\n        <FormTextarea name=\"bio\" fieldProps={formik.getFieldProps('bio')} />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label></label>\n        <div>\n          <h3 className=\"heading-3 color-grey font-bold\">\n            Personal Information\n          </h3>\n          <p\n            style={{ fontSize: '1.3rem', lineHeight: '1.6rem' }}\n            className=\"color-grey\"\n          >\n            Provide your personal information, even if the account is used for a\n            business, a pet or something else. This won't be a part of your\n            public profile.\n          </p>\n        </div>\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label className=\"heading-3 font-bold\">Email</label>\n        <FormInput name=\"email\" fieldProps={formik.getFieldProps('email')} />\n      </SettingsFormGroup>\n      <SettingsFormGroup>\n        <label></label>\n        <Button\n          style={{ width: '10rem' }}\n          disabled={Object.keys(formik.touched).length === 0}\n          loading={updatingProfile}\n          onClick={() => {\n            if (!formik.isValid) {\n              showAlert(Object.values(formik.errors)[0]);\n            }\n          }}\n        >\n          Submit\n        </Button>\n      </SettingsFormGroup>\n    </SettingsForm>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateProfileStart: (authToken, updates) =>\n    dispatch(updateProfileStart(authToken, updates)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken,\n  updatingProfile: selectUpdatingProfile,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileForm);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  selectFeedPosts,\n  selectFeedFetching,\n} from '../../redux/feed/feedSelectors';\n\nimport PostDialog from '../PostDialog/PostDialog';\nimport FeedBottom from './FeedBottom/FeedBottom';\n\nconst Feed = ({ feedPosts, feedFetching }) => {\n  return (\n    <section className=\"feed\">\n      {feedPosts &&\n        feedPosts.map((post, idx) => (\n          <PostDialog simple postData={post} postId={post._id} key={idx} />\n        ))}\n      {feedFetching && (\n        <Fragment>\n          <PostDialog simple loading />\n          <PostDialog simple loading />\n          <PostDialog simple loading />\n        </Fragment>\n      )}\n      {!feedFetching && feedPosts.length > 0 && <FeedBottom />}\n    </section>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  feedPosts: selectFeedPosts,\n  feedFetching: selectFeedFetching,\n});\n\nexport default connect(mapStateToProps)(Feed);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Icon from '../../Icon/Icon';\nimport Button from '../../Button/Button';\n\nconst SmallFooter = () => {\n  const links = [\n    'About',\n    'Help',\n    'Press',\n    'API',\n    'Jobs',\n    'Privacy',\n    'Terms',\n    'Locations',\n    'Top Accounts',\n    'Hashtags',\n    'Language',\n  ];\n\n  const ViewOnBeianButton = () => (\n    <a\n      style={{ textDecoration: 'none' }}\n      href=\"https://beian.miit.gov.cn/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Button\n        style={{\n          color: '#dbdbdb',\n          padding: '0px',\n          border: '0px',\n          marginLeft: '10px',\n        }}\n        inverted\n      >\n        粵ICP備20012196號\n      </Button>\n    </a>\n  );\n\n  const ViewOnartstation = () => (\n    <a\n      style={{ textDecoration: 'none' }}\n      href=\"https://art.timcha.net/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Button\n        style={{\n          color: '#dbdbdb',\n          padding: '0px',\n          border: '0px',\n          marginLeft: '10px',\n        }}\n        inverted\n      >\n        彩蛋\n      </Button>\n    </a>\n  );\n\n\n  return (\n    <footer className=\"footer--small color-grey-2 font-bold\">\n      <div className=\"footer--small__links\">\n        {links.map((link, idx) => (\n          <Link key={idx} to=\"/\">\n            {link}\n          </Link>\n        ))}\n      </div>\n      <h5\n        className=\"heading-5 color-grey-2 footer--small__copyright mt-lg font-bold\"\n        style={{ textTransform: 'uppercase ' }}\n      >\n        @2021{' '}\n        <Icon\n          icon=\"heart\"\n          className=\"color-grey-2 icon--small\"\n          style={{ margin: '0 5px' }}\n        />{' '}甜茶\n      <ViewOnartstation />\n      <ViewOnBeianButton />\n      </h5>\n    </footer>\n  );\n};\n\nexport default SmallFooter;\n","import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\nimport { getHashtagPosts } from '../../services/postService';\n\nimport MobileHeader from '../../components/Header/MobileHeader/MobileHeader';\nimport TextButton from '../../components/Button/TextButton/TextButton';\nimport PreviewImage from '../../components/PreviewImage/PreviewImage';\nimport SkeletonLoader from '../../components/SkeletonLoader/SkeletonLoader';\nimport ImageGrid from '../../components/ImageGrid/ImageGrid';\n\nconst HashtagPosts = ({ token, showModal, showAlert }) => {\n  const [posts, setPosts] = useState({\n    posts: [],\n    postCount: 0,\n    fetching: false,\n    hasMore: false,\n  });\n\n  const { hashtag } = useParams();\n  const history = useHistory();\n\n  const handleClick = (postId, avatar) => {\n    if (window.outerWidth <= 600) {\n      history.push(`/post/${postId}`);\n    } else {\n      showModal(\n        {\n          postId,\n          avatar,\n        },\n        'PostDialog/PostDialog'\n      );\n    }\n  };\n\n  const retrievePosts = async (offset) => {\n    try {\n      setPosts((previous) => ({ ...previous, fetching: true }));\n      const response = await getHashtagPosts(token, hashtag, offset);\n      response.posts\n        ? setPosts((previous) => ({\n            posts: previous.posts\n              ? [...previous.posts, ...response.posts]\n              : response.posts,\n            postCount: response.postCount,\n            fetching: false,\n            hasMore: response.length === 20,\n          }))\n        : setPosts((previous) => ({ ...previous, fetching: false }));\n    } catch (err) {\n      showAlert(err.message);\n    }\n  };\n\n  const renderSkeleton = (amount) => {\n    const skeleton = [];\n    for (let i = 0; i < amount; i++) {\n      skeleton.push(\n        <SkeletonLoader key={i} style={{ minHeight: '30rem' }} animated />\n      );\n    }\n    return skeleton;\n  };\n\n  useScrollPositionThrottled(\n    ({ atBottom }) => {\n      if (atBottom && posts.hasMore && !posts.fetching) {\n        retrievePosts(posts.posts.length);\n      }\n    },\n    null,\n    [posts]\n  );\n\n  const retrievePostsRef = useRef(retrievePosts);\n\n  useEffect(() => {\n    retrievePostsRef.current();\n  }, [retrievePostsRef]);\n\n  return !posts.fetching && posts.posts.length === 0 ? (\n    <div className=\"hashtag-posts__empty\">\n      <h2 className=\"heading-2\">\n        Could not find any post associated with #{hashtag}.\n      </h2>\n    </div>\n  ) : (\n    <Fragment>\n      <MobileHeader backArrow>\n        <TextButton style={{ justifySelf: 'center' }} bold large>\n          #{hashtag}\n        </TextButton>\n      </MobileHeader>\n      <div className=\"hashtag-posts__title\">\n        <h2 className=\"heading-2\">#{hashtag}</h2>\n        <h3 className=\"heading-3 font-medium\">\n          <span className=\"font-bold\">{posts.postCount}</span>{' '}\n          {posts.postCount === 1 ? 'post' : 'posts'}\n        </h3>\n      </div>\n      <ImageGrid>\n        {posts.posts &&\n          posts.posts.map((post, idx) => (\n            <PreviewImage\n              key={idx}\n              image={post.thumbnail}\n              likes={post.postVotes}\n              comments={post.comments}\n              filter={post.filter}\n              onClick={() => handleClick(post._id, post.avatar)}\n            />\n          ))}\n        {posts.fetching && renderSkeleton(10)}\n      </ImageGrid>\n    </Fragment>\n  );\n};\n\nexport default HashtagPosts;\n","import React, { useState, useEffect } from 'react';\n\nimport { getPostFilters } from '../../services/postService';\n\nimport NewPostForm from './NewPostForm/NewPostForm';\nimport NewPostFilter from './NewPostFilter/NewPostFilter';\nimport MobileHeader from '../Header/MobileHeader/MobileHeader';\nimport TextButton from '../Button/TextButton/TextButton';\nimport Icon from '../Icon/Icon';\n\nconst NewPost = ({ file, hide }) => {\n  const [previewImage, setPreviewImage] = useState({\n    src: null,\n    crop: {},\n    filter: null,\n    filterName: '',\n  });\n  const [activeSection, setActiveSection] = useState('filter');\n  const [filters, setFilters] = useState([]);\n\n  // Load a preview image of the image to post\n  useEffect(() => {\n    if (file.type === 'image/png' || file.type === 'image/jpeg') {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = (event) => {\n        setPreviewImage((previous) => ({\n          ...previous,\n          src: event.target.result,\n        }));\n      };\n    } else {\n      // Display error\n    }\n\n    return () => {\n      window.URL.revokeObjectURL(previewImage);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await getPostFilters();\n        setFilters(response.filters);\n      } catch (err) {\n        console.warn(err);\n      }\n    })();\n  }, []);\n\n  const renderSections = () => {\n    switch (activeSection) {\n      case 'details': {\n        return (\n          <NewPostForm\n            file={file}\n            previewImage={previewImage}\n            back={() => setActiveSection('filter')}\n            hide={() => hide()}\n          />\n        );\n      }\n      default: {\n        // return (\n        //   <NewPostEdit\n        //     previewImage={previewImage}\n        //     setPreviewImage={setPreviewImage}\n        //     file={file}\n        //   />\n        // );\n        return (\n          <NewPostFilter\n            previewImage={previewImage}\n            setPreviewImage={setPreviewImage}\n            filters={filters}\n          />\n        );\n      }\n    }\n  };\n\n  return (\n    <section className=\"new-post\">\n      {activeSection !== 'details' && (\n        <MobileHeader show>\n          <Icon\n            icon=\"close-outline\"\n            onClick={() => hide()}\n            style={{ cursor: 'pointer' }}\n          />\n          <h3 className=\"heading-3\">New Post</h3>\n          <TextButton\n            bold\n            blue\n            style={{ fontSize: '1.5rem' }}\n            onClick={() => setActiveSection('details')}\n          >\n            Next\n          </TextButton>\n        </MobileHeader>\n      )}\n      {renderSections()}\n      {activeSection !== 'details' && (\n        <nav className=\"new-post__nav\">\n          <ul>\n            <li\n              className={`new-post__nav-item ${\n                activeSection === 'filter' && 'new-post__nav-item--active'\n              }`}\n              onClick={() => setActiveSection('filter')}\n              style={{ width: '100%' }}\n            >\n              <h4 className=\"heading-4\">Filter</h4>\n            </li>\n            {/* <li\n              className={`new-post__nav-item ${\n                activeSection === 'edit' && 'new-post__nav-item--active'\n              }`}\n              onClick={() => setActiveSection('edit')}\n            >\n              <h4 className=\"heading-4\">Edit</h4>\n            </li> */}\n          </ul>\n        </nav>\n      )}\n    </section>\n  );\n};\n\nexport default NewPost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../Icon/Icon';\n\nconst ProfileCategory = ({ category, icon }) => (\n  <div className=\"profile-categories\">\n    <div className=\"profile-categories__category\">\n      <Icon icon={icon} />\n      <h3 className=\"font-medium\">{category}</h3>\n    </div>\n  </div>\n);\n\nProfileCategory.propTypes = {\n  category: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default ProfileCategory;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\n\nimport { signUpStart } from '../../redux/user/userActions';\nimport { selectError, selectFetching } from '../../redux/user/userSelectors';\n\nimport {\n  validateEmail,\n  validateFullName,\n  validateUsername,\n  validatePassword,\n} from '../../utils/validation';\n\nimport Button from '../Button/Button';\nimport TextButton from '../Button/TextButton/TextButton';\nimport Divider from '../Divider/Divider';\nimport Card from '../Card/Card';\nimport FormInput from '../FormInput/FormInput';\nimport ViewOnGithubButton from '../ViewOnGithubButton/ViewOnGithubButton';\nimport GithubLoginButton from '../GithubLoginButton/GithubLoginButton';\n\nconst SignUpCard = ({ signUpStart, error, fetching }) => {\n  const validate = (values) => {\n    const errors = {};\n    const emailError = validateEmail(values.email);\n    if (emailError) errors.email = emailError;\n\n    const fullNameError = validateFullName(values.fullName);\n    if (fullNameError) errors.fullName = fullNameError;\n\n    const usernameError = validateUsername(values.username);\n    if (usernameError) errors.username = usernameError;\n\n    const passwordError = validatePassword(values.password);\n    if (passwordError) errors.password = passwordError;\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      fullName: '',\n      username: '',\n      password: '',\n    },\n    validate,\n    onSubmit: (values) =>\n      signUpStart(\n        values.email,\n        values.fullName,\n        values.username,\n        values.password\n      ),\n  });\n\n  return (\n    <Fragment>\n      <Card className=\"form-card\">\n        <h1 className=\"heading-logo text-center\">Timcha</h1>\n        <h2\n          style={{ fontSize: '1.7rem' }}\n          className=\"heading-2 color-grey text-center\"\n        >\n          Sign up to see photos and videos from your friends.\n        </h2>\n        <GithubLoginButton\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            color: 'white',\n          }}\n          button\n        />\n        <Divider>OR</Divider>\n        {Object.keys(formik.errors).map((field) => {\n          if (formik.touched[field]) {\n            return (\n              <p\n                className=\"error\"\n                key={formik.errors[field]}\n                style={{ marginTop: '0' }}\n              >\n                {formik.errors[field]}\n              </p>\n            );\n          }\n        })}\n        <form className=\"form-card__form\" onSubmit={formik.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            fieldProps={formik.getFieldProps('email')}\n            valid={formik.touched.email && !formik.errors.email}\n            placeholder=\"Email address\"\n          />\n          <FormInput\n            name=\"fullName\"\n            fieldProps={formik.getFieldProps('fullName')}\n            valid={formik.touched.fullName && !formik.errors.fullName}\n            placeholder=\"Full Name\"\n          />\n          <FormInput\n            name=\"username\"\n            fieldProps={formik.getFieldProps('username')}\n            valid={formik.touched.username && !formik.errors.username}\n            placeholder=\"Username\"\n          />\n          <FormInput\n            name=\"password\"\n            fieldProps={formik.getFieldProps('password')}\n            placeholder=\"Password\"\n            valid={formik.touched.password && !formik.errors.password}\n            type=\"password\"\n          />\n          <Button\n            loading={fetching}\n            disabled={\n              Object.keys(formik.touched).length === 0 ? true : !formik.isValid\n            }\n          >\n            Sign Up\n          </Button>\n          <p></p>\n        </form>\n        <p className=\"error\">\n          {error\n            ? error\n            : formik.submitCount > 0 && Object.values(formik.errors)[0]}\n        </p>\n        <p className=\"heading-5 color-grey\">\n         提示：密碼要求大小寫字母、數字和特殊符號組合。\n         點擊註冊，即表示你同意我們的條款。 \n        </p>\n      </Card>\n      <Card>\n        <section\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '2rem',\n          }}\n        >\n          <h4 style={{ marginRight: '5px' }} className=\"heading-4 font-thin\">\n            Have an account?\n          </h4>\n          <Link to=\"/login\">\n            <TextButton medium blue bold>\n              Log in\n            </TextButton>\n          </Link>\n        </section>\n      </Card>\n      <ViewOnGithubButton />\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (email, fullName, username, password) =>\n    dispatch(signUpStart(email, fullName, username, password)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  error: selectError,\n  fetching: selectFetching,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpCard);\n","import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\nimport { getSuggestedPosts } from '../../services/postService';\n\nimport MobileHeader from '../../components/Header/MobileHeader/MobileHeader';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport TextButton from '../../components/Button/TextButton/TextButton';\nimport UserCard from '../../components/UserCard/UserCard';\nimport PreviewImage from '../../components/PreviewImage/PreviewImage';\nimport ImageGrid from '../../components/ImageGrid/ImageGrid';\n\nconst SuggestedPosts = ({ token, showModal, showAlert }) => {\n  const history = useHistory();\n  const [result, setResult] = useState([]);\n  const [search, setSearch] = useState(false);\n  const [posts, setPosts] = useState({\n    posts: null,\n    fetching: false,\n    hasMore: false,\n  });\n\n  const handleClick = (postId, avatar) => {\n    if (window.outerWidth <= 600) {\n      history.push(`/post/${postId}`);\n    } else {\n      showModal(\n        {\n          postId,\n          avatar,\n        },\n        'PostDialog/PostDialog'\n      );\n    }\n  };\n\n  const retrievePosts = async (offset) => {\n    try {\n      setPosts((previous) => ({ ...previous, fetching: true }));\n      const response = await getSuggestedPosts(token, offset);\n      setPosts((previous) => ({\n        posts: previous.posts ? [...previous.posts, ...response] : response,\n        fetching: false,\n        hasMore: response.length === 20,\n      }));\n    } catch (err) {\n      showAlert(err.message);\n    }\n  };\n\n  const retrievePostsRef = useRef(retrievePosts);\n\n  useEffect(() => {\n    retrievePostsRef.current();\n  }, [retrievePostsRef]);\n\n  useScrollPositionThrottled(\n    ({ atBottom }) => {\n      if (atBottom && posts.hasMore && !posts.fetching) {\n        retrievePosts(posts.posts.length);\n      }\n    },\n    null,\n    [posts]\n  );\n\n\n\n  return (\n    <Fragment>\n      <MobileHeader\n        style={\n          search && {\n            gridTemplateColumns: 'repeat(2, 1fr) min-content',\n            gridColumnGap: '2rem',\n          }\n        }\n      >\n        <SearchBox\n          style={{ gridColumn: `${search ? '1 / span 2' : '1 / -1'}` }}\n          setResult={setResult}\n          onClick={() => setSearch(true)}\n        />\n        {search && (\n          <TextButton onClick={() => setSearch(false)} bold large>\n            取消\n          </TextButton>\n        )}\n      </MobileHeader>\n      {search ? (\n        <div className=\"explore-users\">\n          {result.map((user) => (\n            <UserCard\n              avatar={user.avatar}\n              username={user.username}\n              subText={user.fullName}\n            />\n          ))}\n        </div>\n      ) : (\n        <ImageGrid>\n          {posts.posts &&\n            posts.posts.map((post, idx) => (\n              <PreviewImage\n                key={idx}\n                image={post.thumbnail}\n                placeholder={post.placeholder}\n                likes={post.postVotes}\n                comments={post.comments}\n                filter={post.filter}\n                onClick={() => handleClick(post._id, post.avatar)}\n              />\n            ))}\n        </ImageGrid>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SuggestedPosts;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { showAlert } from '../../../redux/alert/alertActions';\nimport { selectToken } from '../../../redux/user/userSelectors';\n\nimport { getSuggestedUsers } from '../../../services/userService';\n\nimport UserCard from '../../UserCard/UserCard';\nimport UserListSkeleton from '../../UsersList/UsersListSkeleton/UsersListSkeleton';\nimport Card from '../../Card/Card';\nimport FollowButton from '../../Button/FollowButton/FollowButton';\nimport SuggestionCard from '../SuggestionCard/SuggestionCard';\n\nconst SuggestedUsers = ({ token, showAlert, card, style, max }) => {\n  const [users, setUsers] = useState(null);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await getSuggestedUsers(token, max);\n        setUsers(response);\n      } catch (err) {\n        showAlert(err.message);\n      }\n    })();\n  }, [token, showAlert]);\n\n  const renderUsers = () => {\n    if (users) {\n      return users.length > 0 ? (\n        users.map((user, idx) => (\n          <UserCard\n            avatar={user.avatar}\n            username={user.username}\n            subText={user.fullName}\n            style={card ? { padding: '1.5rem' } : { padding: '1rem 0' }}\n            key={idx}\n          >\n            <FollowButton\n              userId={user._id}\n              username={user.username}\n              following={false}\n              avatar={user.avatar}\n            />\n          </UserCard>\n        ))\n      ) : (\n        <h4 className=\"heading-4 color-grey font-medium\">\n          We currently can't find any users to suggest.\n        </h4>\n      );\n    }\n\n    return <UserListSkeleton amount={5} style={{ padding: '1.5rem' }} />;\n  };\n\n  return (\n    <div className=\"suggested-users\" style={style}>\n      <Fragment>\n        <div className=\"suggested-users__large\">\n          <h3 className=\"heading-3 mb-md\">Suggestions for you</h3>\n          {card ? <Card>{renderUsers()}</Card> : <div>{renderUsers()}</div>}\n        </div>\n        <div className=\"suggested-users__small\">\n          <div className=\"suggested-users__title\">\n            <h2 className=\"heading-2 font-thin\">Welcome to Timcha</h2>\n            <h3 className=\"heading-3 font-medium color-grey\">\n              When you follow somebody you can see their photos here.\n            </h3>\n          </div>\n          <div className=\"suggested-users__card-container\">\n            {users &&\n              users.map((user, idx) => (\n                <SuggestionCard\n                  avatar={user.avatar}\n                  username={user.username}\n                  fullName={user.fullName}\n                  posts={user.posts}\n                  key={idx}\n                >\n                  <FollowButton\n                    userId={user._id}\n                    username={user.username}\n                    following={false}\n                    avatar={user.avatar}\n                    style={{ width: '90%' }}\n                  />\n                </SuggestionCard>\n              ))}\n          </div>\n        </div>\n      </Fragment>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  token: selectToken,\n});\n\nconst mapDispatchToProps = (disptach) => ({\n  showAlert: (text, onClick) => disptach(showAlert(text, onClick)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SuggestedUsers);\n","import React, { useEffect, useReducer, useRef } from 'react';\n\nimport {\n  retrieveUserFollowing,\n  retrieveUserFollowers,\n} from '../../services/profileService';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\n\nimport { usersListReducer, INITIAL_STATE } from './usersListReducer';\n\nimport UserCard from '../UserCard/UserCard';\nimport UsersListSkeleton from './UsersListSkeleton/UsersListSkeleton';\nimport Icon from '../Icon/Icon';\nimport FollowButton from '../Button/FollowButton/FollowButton';\n\nconst UsersList = ({\n  userId,\n  token,\n  followingCount,\n  followersCount,\n  following,\n}) => {\n  const [state, dispatch] = useReducer(usersListReducer, INITIAL_STATE);\n  const componentRef = useRef();\n\n  useScrollPositionThrottled(async ({ atBottom }) => {\n    const count = followingCount ? followingCount : followersCount;\n    if (\n      atBottom &&\n      state.data.length < count &&\n      !state.fetching &&\n      !state.fetchingAdditional\n    ) {\n      try {\n        dispatch({ type: 'FETCH_ADDITIONAL_START' });\n        const response = following\n          ? await retrieveUserFollowing(userId, state.data.length, token)\n          : await retrieveUserFollowers(userId, state.data.length, token);\n        dispatch({ type: 'ADD_USERS', payload: response });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAILURE', payload: err });\n      }\n    }\n  }, componentRef.current);\n\n  const stateRef = useRef(state.data).current;\n  const followingRef = useRef(following).current;\n\n  useEffect(() => {\n    (async function () {\n      try {\n        dispatch({ type: 'FETCH_START' });\n        const response = followingRef\n          ? await retrieveUserFollowing(\n              userId,\n              stateRef ? stateRef.length : 0,\n              token\n            )\n          : await retrieveUserFollowers(\n              userId,\n              stateRef ? stateRef.length : 0,\n              token\n            );\n        dispatch({ type: 'FETCH_SUCCESS', payload: response });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAILURE', payload: err });\n      }\n    })();\n  }, [userId, token, stateRef, followingRef]);\n\n  return (\n    <section\n      className=\"following-overview\"\n      ref={componentRef}\n      style={{ overflowY: 'auto' }}\n    >\n      {!followersCount && !followingCount ? (\n        <div style={{ padding: '2rem', textAlign: 'center' }}>\n          <Icon\n            style={{ margin: '0 auto' }}\n            className=\"icon--larger\"\n            icon=\"person-add-outline\"\n          />\n          <h2 className=\"heading-2 font-thin\">\n            {following\n              ? 'People the user follows'\n              : 'People who follow the user'}\n          </h2>\n          <h4 className=\"heading-4 font-medium\">\n            {following\n              ? \"Once the user follows somebody, you'll see them here.\"\n              : \"Once somebody follows the user, you'll see them here\"}\n          </h4>\n        </div>\n      ) : state.fetching ? (\n        <UsersListSkeleton />\n      ) : (\n        state.data.map((user, idx) => (\n          <UserCard\n            key={idx}\n            avatar={user.avatar}\n            username={user.username}\n            subText={user.fullName}\n            userId={user._id}\n            following={user.isFollowing}\n          >\n            <FollowButton\n              userId={user._id}\n              following={user.isFollowing}\n              username={user.username}\n              avatar={user.avatar}\n            />\n          </UserCard>\n        ))\n      )}\n      {state.fetchingAdditional && <UsersListSkeleton />}\n    </section>\n  );\n};\n\nexport default UsersList;\n","export const INITIAL_STATE = {\n  posting: false,\n  error: false,\n  comment: '',\n};\n\nexport const postDialogCommentFormReducer = (state, action) => {\n  switch (action.type) {\n    case 'POST_COMMENT_START': {\n      return { ...state, posting: true };\n    }\n    case 'POST_COMMENT_FAILURE': {\n      return { ...state, posting: false, error: action.payload };\n    }\n    case 'POST_COMMENT_SUCCESS': {\n      const { comment, dispatch } = action.payload;\n      dispatch && dispatch({ type: 'ADD_COMMENT', payload: comment });\n      return INITIAL_STATE;\n    }\n    case 'POST_COMMENT_REPLY_SUCCESS': {\n      const { comment, dispatch, parentCommentId } = action.payload;\n      dispatch &&\n        dispatch({\n          type: 'ADD_COMMENT_REPLY',\n          payload: { comment, parentCommentId },\n        });\n      return INITIAL_STATE;\n    }\n    case 'SET_COMMENT': {\n      return { ...state, comment: action.payload };\n    }\n    default: {\n      throw new Error(\n        `Invalid action type '${action.type}' passed to postDialogCommentFormReducer.`\n      );\n    }\n  }\n};\n","import modalTypes from './modalTypes';\n\n/**\n * Hides a shown Modal\n * @function hideModal\n */\nexport const hideModal = componentName => ({\n  type: modalTypes.HIDE_MODAL,\n  payload: componentName\n});\n\n/**\n * Shows the Modal component with a specified child and props\n * @function showModal\n * @param {object } props Props to pass to the modal child.\n * @param {string} component The directory of a component in the Components directory\n */\nexport const showModal = (props, component) => ({\n  type: modalTypes.SHOW_MODAL,\n  payload: { props, component }\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../Icon/Icon';\n\nconst FormInput = ({\n  type,\n  style,\n  valid,\n  placeholder,\n  fieldProps,\n  ...additionalProps\n}) => {\n  const [inputType, setInputType] = useState('password');\n  const handleClick = () => {\n    inputType === 'password' ? setInputType('text') : setInputType('password');\n  };\n\n  return (\n    <div\n      style={{ ...style, marginBottom: !placeholder ? '0' : '0.5rem' }}\n      data-test=\"component-input\"\n      className=\"form-group\"\n    >\n      <input\n        className=\"form-group__input\"\n        type={type === 'password' ? inputType : type}\n        placeholder={placeholder}\n        style={!placeholder ? { padding: '1rem' } : {}}\n        {...fieldProps}\n        {...additionalProps}\n      />\n      <span className=\"form-group__placeholder\">{placeholder}</span>\n      <div className=\"input-icons\">\n        {typeof valid === 'boolean' ? (\n          valid ? (\n            <Icon className=\"color-grey\" icon=\"checkmark-circle-outline\" />\n          ) : (\n            <Icon className=\"color-red\" icon=\"close-circle-outline\" />\n          )\n        ) : null}\n        {type === 'password' && (\n          <span onClick={() => handleClick()} className=\"form-group__toggle\">\n            {inputType === 'password' ? 'Show' : 'Hide'}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nFormInput.propTypes = {\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FormInput;\n","export default __webpack_public_path__ + \"static/media/default-avatar.522560c8.png\";","import React from 'react';\nimport { shallow } from 'enzyme';\nimport { UnconnectedApp } from './App';\n\nimport { findByTestAttribute } from '../../utils/test/testUtils';\n\n/**\n * Factory function that returns a wrapped component\n * @function setup\n * @returns {ShallowWrapper}\n */\nexport const setup = () => {\n  const wrapper = shallow(<UnconnectedApp modal={{ modals: [] }} />);\n  return wrapper;\n};\n\ndescribe('render', () => {\n  test('renders without error', () => {\n    const wrapper = setup();\n    const component = findByTestAttribute(wrapper, 'component-app');\n    expect(component.exists()).toBeTruthy();\n  });\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Avatar = ({\n  imageSrc = require('../../assets/img/default-avatar.png').default,\n  className,\n  onClick,\n  style,\n}) => {\n  const avatarClasses = classNames({\n    avatar: true,\n    [className]: className,\n  });\n\n  return (\n    <img\n      className={avatarClasses}\n      onClick={onClick}\n      style={style}\n      src={imageSrc}\n      alt=\"Avatar\"\n    />\n  );\n};\n\nAvatar.propTypes = {\n  imageSrc: PropTypes.string,\n  size: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkeletonLoader = ({ style, animated }) => {\n  return animated ? (\n    <div style={style} className=\"skeleton-loader--animated\"></div>\n  ) : (\n    <div style={style} className=\"skeleton-loader\"></div>\n  );\n};\n\nSkeletonLoader.propTypes = {\n  style: PropTypes.object,\n};\n\nexport default SkeletonLoader;\n","import checkPropTypes from 'check-prop-types';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport rootReducer from '../../redux/rootReducer';\nimport { middlewares } from '../../redux/store';\n\n/**\n * Create a testing store with imported reducers, middleware,and initial state\n *  globals: rootReducer, middlewares.\n * @function storeFactory\n * @param {object} initialState Initial state for the store.\n * @returns {store} Redux store\n */\nexport const storeFactory = initialState => {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middlewares)\n  );\n};\n\n/**\n * Function to find a component by it's data-test attribute\n * @function findByTestAttribute\n * @param {ShallowWarapper} wrapper Wrapper to serach\n * @param {string} attributeName Attribute to find\n * @returns {JSX.Element}\n */\nexport const findByTestAttribute = (wrapper, attributeName) => {\n  const component = wrapper.find(`[data-test='${attributeName}']`);\n  return component;\n};\n\n/**\n * Function to check props on a react component\n * @function checkProps\n * @param {React.Component} Component Component to assert on.\n * @param {object} expectedProps Expected props.\n * @returns {undefined | Error}\n */\n/* eslint react/forbid-foreign-prop-types: 0 */\nexport const checkProps = (Component, expectedProps) => {\n  const result = checkPropTypes(\n    Component.propTypes,\n    expectedProps,\n    'prop',\n    Component.name\n  );\n\n  return result;\n};\n","export const INITIAL_STATE = {\n  fetching: true,\n  error: false,\n  replying: false,\n  localStateComments: new Set(),\n  data: {\n    _id: null,\n    image: '',\n    caption: '',\n    author: null,\n    date: null,\n    postVotes: [],\n    comments: [],\n    commentReplies: [],\n  },\n};\n\nexport const postDialogReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_POST_FAILURE': {\n      return { ...state, fetching: false, error: action.payload };\n    }\n    case 'FETCH_POST_SUCCESS': {\n      const { comments = [], commentCount = 0 } =\n        action.payload.commentData || {};\n      return {\n        ...state,\n        fetching: false,\n        error: false,\n        data: {\n          ...action.payload,\n          commentReplies: [],\n          comments,\n          commentCount,\n        },\n      };\n    }\n    case 'VOTE_POST': {\n      const { currentUser, postId, dispatch } = action.payload;\n      let postVotes = JSON.parse(JSON.stringify(state.data.postVotes));\n      const liked = !!postVotes.find((vote) => vote.author === currentUser._id);\n      if (!liked) {\n        postVotes.push({ author: currentUser._id });\n      } else {\n        postVotes = postVotes.filter((vote) => vote.author !== currentUser._id);\n      }\n      dispatch &&\n        dispatch({\n          type: 'SET_POST_VOTES_COUNT',\n          payload: { postId, votes: postVotes.length },\n        });\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          postVotes,\n        },\n      };\n    }\n    case 'VOTE_COMMENT': {\n      const { commentId, currentUser } = action.payload;\n      const comments = JSON.parse(JSON.stringify(state.data.comments));\n      const commentIndex = comments.findIndex(\n        (comment) => comment._id === commentId\n      );\n      const liked = !!comments[commentIndex].commentVotes.find(\n        (vote) => vote.author === currentUser._id\n      );\n\n      if (!liked) {\n        comments[commentIndex].commentVotes.push({ author: currentUser._id });\n      } else {\n        comments[commentIndex].commentVotes = comments[\n          commentIndex\n        ].commentVotes.filter((vote) => vote.author !== currentUser._id);\n      }\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          comments,\n        },\n      };\n    }\n    case 'ADD_COMMENT': {\n      let comment = action.payload;\n      let localStateComments = new Set(state.localStateComments);\n      if (!Array.isArray(comment)) {\n        localStateComments.add(comment._id);\n        comment = [comment];\n      }\n      return {\n        ...state,\n        localStateComments,\n        data: {\n          ...state.data,\n          comments: [...state.data.comments, ...comment],\n        },\n      };\n    }\n    case 'REMOVE_COMMENT': {\n      const commentId = action.payload;\n      const localStateComments = new Set(state.localStateComments);\n      localStateComments.has(commentId) && localStateComments.delete(commentId);\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          localStateComments,\n          comments: state.data.comments.filter(\n            (comment) => comment._id !== commentId\n          ),\n          commentCount: state.data.commentCount - 1,\n        },\n      };\n    }\n    case 'ADD_COMMENT_REPLY': {\n      let { comment: newComment, parentCommentId } = action.payload;\n      const comments = JSON.parse(JSON.stringify(state.data.comments));\n      const parentCommentIndex = comments.findIndex(\n        (comment) => comment._id === parentCommentId\n      );\n      if (!Array.isArray(newComment)) {\n        const parentComment = comments[parentCommentIndex];\n        // Add a single comment object into an array\n        // so we can spread it into the commentReplies array\n        newComment = [newComment];\n        parentComment.commentReplies = parentComment.commentReplies\n          ? parentComment.commentReplies + 1\n          : 1;\n      }\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          comments,\n          commentReplies: [...state.data.commentReplies, ...newComment],\n        },\n      };\n    }\n    case 'REMOVE_COMMENT_REPLY': {\n      const { commentReplyId, parentCommentId } = action.payload;\n      const comments = JSON.parse(JSON.stringify(state.data.comments));\n      const commentIndex = comments.findIndex(\n        (comment) => comment._id === parentCommentId\n      );\n      comments[commentIndex].commentReplies -= 1;\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          comments,\n          commentReplies: state.data.commentReplies.filter(\n            (commentReply) => commentReply._id !== commentReplyId\n          ),\n        },\n      };\n    }\n    case 'VOTE_COMMENT_REPLY': {\n      const { commentReplyId, currentUser } = action.payload;\n      const commentReplies = JSON.parse(\n        JSON.stringify(state.data.commentReplies)\n      );\n      const commentReplyIndex = state.data.commentReplies.findIndex(\n        (commentReply) => commentReply._id === commentReplyId\n      );\n      const liked = !!commentReplies[commentReplyIndex].commentReplyVotes.find(\n        (vote) => vote.author === currentUser._id\n      );\n      if (!liked) {\n        commentReplies[commentReplyIndex].commentReplyVotes.push({\n          author: currentUser._id,\n        });\n      } else {\n        commentReplies[commentReplyIndex].commentReplyVotes = commentReplies[\n          commentReplyIndex\n        ].commentReplyVotes.filter((vote) => vote.author !== currentUser._id);\n      }\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          commentReplies,\n        },\n      };\n    }\n    case 'SET_REPLYING': {\n      const { username, commentId } = action.payload || {};\n      if (username && commentId) {\n        // Avoid re-rendering if commentId and commentUser are the same as previous state\n        if (\n          state.replying.commentId === commentId &&\n          state.replying.commentUser === username\n        ) {\n          return state;\n        }\n        return { ...state, replying: { commentUser: username, commentId } };\n      } else {\n        return { ...state, replying: false };\n      }\n    }\n    default: {\n      throw new Error(\n        `Invalid action type '${action.type}' passed to postDialogReducer.`\n      );\n    }\n  }\n};\n","import alertTypes from './alertTypes';\n\nexport const hideAlert = () => ({\n  type: alertTypes.HIDE_ALERT,\n});\n\nexport const showAlert = (text, onClick = null) => (dispatch, getState) => {\n  const state = getState();\n  clearTimeout(state.alert.timeoutId);\n  const timeout = setTimeout(() => {\n    dispatch(hideAlert());\n    dispatch({ type: alertTypes.SET_ALERT_TIMEOUT_ID, payload: null });\n  }, 5000);\n  dispatch({ type: alertTypes.SET_ALERT_TIMEOUT_ID, payload: timeout });\n  // If there is an alert already present,\n  // disable it and allow the animation to finish\n  // before toggling the new one\n  if (state.alert.showAlert) {\n    dispatch(hideAlert());\n    setTimeout(() => {\n      dispatch({\n        type: alertTypes.SHOW_ALERT,\n        payload: { text, onClick },\n      });\n    }, 500);\n  } else {\n    dispatch({\n      type: alertTypes.SHOW_ALERT,\n      payload: { text, onClick },\n    });\n  }\n};\n","import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport FormInput from './FormInput';\n\nimport { checkProps, findByTestAttribute } from '../../utils/test/testUtils';\n\nconst defaultProps = {\n  placeholder: 'sfds',\n  type: 'text',\n  onChange: jest.fn(),\n  required: true\n};\n\n/**\n * Factory function that returns a wrapped component\n * @function setup\n * @returns {ShallowWrapper}\n */\nexport const setup = (initialProps = {}) => {\n  const setupProps = { ...defaultProps, ...initialProps };\n  const wrapper = shallow(<FormInput {...setupProps} />);\n  return wrapper;\n};\n\ndescribe('render', () => {\n  test('renders without error', () => {\n    const wrapper = setup();\n    const component = findByTestAttribute(wrapper, 'component-input');\n    expect(component.exists()).toBeTruthy();\n  });\n});\n\ntest('does not throw error with expected props', () => {\n  const result = checkProps(FormInput, defaultProps);\n  expect(result).toBeUndefined();\n});\n","import React, { useState, Fragment, useRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nimport Icon from '../../Icon/Icon';\n\nconst NewPostEdit = ({ previewImage, setPreviewImage, file }) => {\n  const [imageState, setImageState] = useState({\n    crop: { unit: '%', aspect: 16 / 9 },\n    isCropping: false,\n  });\n  const imageRef = useRef();\n\n  const getCroppedImg = (image, crop) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob((blob) => {\n        if (!blob) {\n          //reject(new Error('Canvas is empty'));\n          console.error('Canvas is empty');\n          return;\n        }\n        blob.name = 'cropped.jpeg';\n        const fileUrl = window.URL.createObjectURL(blob);\n        resolve(fileUrl);\n      }, 'image/jpeg');\n    });\n  };\n\n  const makeClientCrop = async (crop) => {\n    window.URL.revokeObjectURL(previewImage.src);\n    if (imageState.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await getCroppedImg(\n        imageState.imageRef,\n        crop,\n        'newFile.jpeg'\n      );\n      setPreviewImage({ src: croppedImageUrl, crop });\n      setImageState((previous) => ({ ...previous, isCropping: false }));\n    }\n  };\n\n  const onCropChange = (crop, percentCrop) => {\n    setImageState((previous) => ({\n      ...previous,\n      crop,\n    }));\n  };\n\n  const onImageLoaded = (image) => {\n    setImageState((previous) => ({ ...previous, imageRef: image }));\n  };\n\n  const onDragStart = () => {\n    setImageState((previous) => ({ ...previous, isCropping: true }));\n  };\n\n  return (\n    <Fragment>\n      <div className=\"new-post__preview\">\n        <div className=\"new-post__preview-image-container\">\n          <ReactCrop\n            src={previewImage.src}\n            crop={imageState.crop}\n            onChange={onCropChange}\n            onImageLoaded={onImageLoaded}\n            onDragStart={onDragStart}\n            style={{ width: '100%', height: '100%' }}\n            ref={imageRef}\n            imageStyle={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'contain',\n              filter: previewImage.filter,\n            }}\n            ruleOfThirds\n          />\n          <Icon\n            icon=\"checkmark-outline\"\n            className=\"new-post__crop-button\"\n            style={imageState.isCropping ? { display: 'inline-block' } : {}}\n            onClick={() => makeClientCrop(imageState.crop)}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default NewPostEdit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTransition, animated } from 'react-spring';\nimport classNames from 'classnames';\n\nimport TextButton from '../Button/TextButton/TextButton';\n\nconst OptionsDialog = ({\n  hide,\n  options,\n  children,\n  title,\n  cancelButton = true,\n}) => {\n  const transitions = useTransition(true, null, {\n    from: { transform: 'scale(1.2)', opacity: 0.5 },\n    enter: { transform: 'scale(1)', opacity: 1 },\n    leave: { opacity: 0 },\n    config: {\n      mass: 1,\n      tension: 500,\n      friction: 30,\n    },\n  });\n\n  return transitions.map(({ item, key, props }) => (\n    <animated.div style={props} key={key} className=\"options-dialog\">\n      {title && (\n        <header className=\"options-dialog__title\">\n          <h1 className=\"heading-3\">{title}</h1>\n          {!cancelButton && (\n            <TextButton style={{ fontSize: '3rem' }} onClick={() => hide()}>\n              &#10005;\n            </TextButton>\n          )}\n        </header>\n      )}\n      {children}\n      {options.map((option, idx) => {\n        const buttonClassNames = classNames({\n          'options-dialog__button': true,\n          'options-dialog__button--warning': option.warning,\n          [option.className]: option.className,\n        });\n        return (\n          <button\n            onClick={(event) => {\n              if (option.hasOwnProperty('onClick')) {\n                event.stopPropagation();\n                option.onClick();\n                hide();\n              }\n            }}\n            className={buttonClassNames}\n            key={idx}\n          >\n            {option.text}\n          </button>\n        );\n      })}\n      {cancelButton && (\n        <button\n          className=\"options-dialog__button\"\n          onClick={(event) => {\n            event.nativeEvent.stopImmediatePropagation();\n            hide();\n          }}\n        >\n          Cancel\n        </button>\n      )}\n    </animated.div>\n  ));\n};\n\nOptionsDialog.propTypes = {\n  hide: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default OptionsDialog;\n","import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport PostDialog from './PostDialog';\n\nimport {\n  storeFactory,\n  checkProps,\n  findByTestAttribute\n} from '../../utils/test/testUtils';\n\nconst INITIAL_PROPS = {\n  postId: '456',\n  username: 'test',\n  profileDispatch: jest.fn()\n};\n\n/**\n * Function to set up a wrapped component\n * @function setup\n * @param {object} initialState The initial state to be used for this setup\n * @returns {ShallowWrapper} The wrapped component\n */\nconst setup = (\n  initialState = { user: { token: '123', currentUser: { username: 'test' } } }\n) => {\n  const store = storeFactory(initialState);\n  const wrapper = shallow(\n    <PostDialog store={store} {...INITIAL_PROPS} />\n  ).dive();\n  return wrapper;\n};\n\ntest('renders without error', () => {\n  const wrapper = setup().dive();\n  const component = findByTestAttribute(wrapper, 'component-post-dialog');\n  expect(component.exists()).toBeTruthy();\n});\n\ndescribe('redux props', () => {\n  test('has token piece of state as prop', () => {\n    const wrapper = setup();\n    expect(wrapper.props().token).toBe('123');\n  });\n\n  test('has currentUser piece of state as prop', () => {\n    const wrapper = setup();\n    expect(wrapper.props().currentUser).toEqual({ username: 'test' });\n  });\n});\n\ntest('does not throw error with expected props', () => {\n  const result = checkProps(PostDialog, INITIAL_PROPS);\n  expect(result).toBeUndefined();\n});\n","import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport PostDialogCommentForm from './PostDialogCommentForm';\n\nimport { checkProps, findByTestAttribute } from '../../../utils/test/testUtils';\n\nimport { createComment } from '../../../services/commentService';\njest.mock('../../../services/commentService');\n\nconst INITIAL_PROPS = {\n  token: '123',\n  postId: '456',\n  commentsRef: {},\n  dialogDispatch: jest.fn(),\n  profileDispatch: jest.fn(),\n  replying: false\n};\n\n/**\n * Function to set up a wrapped component\n * @function setup\n * @param {object} additionalProps Additional props passed to the component\n * @returns {ShallowWrapper} The wrapped component\n */\nconst setup = (additionalProps = {}) => {\n  const wrapper = shallow(\n    <PostDialogCommentForm {...INITIAL_PROPS} {...additionalProps} />\n  );\n  return wrapper;\n};\n\ntest('renders without error', () => {\n  const wrapper = setup();\n  const component = findByTestAttribute(\n    wrapper,\n    'component-post-dialog-add-comment'\n  );\n\n  expect(component.exists()).toBeTruthy();\n});\n\ntest('does not throw error with expected props', () => {\n  const result = checkProps(PostDialogCommentForm, INITIAL_PROPS);\n\n  expect(result).toBeUndefined();\n});\n\ndescribe('form input', () => {\n  beforeEach(() => {\n    createComment.mockClear();\n  });\n\n  test('does not attempt to create a comment when the input is empty', () => {\n    createComment.mockResolvedValue({});\n    const wrapper = setup();\n    const form = findByTestAttribute(\n      wrapper,\n      'component-post-dialog-add-comment'\n    );\n\n    // Submitting the form\n    form.simulate('submit', { preventDefault: jest.fn() });\n\n    expect(createComment).toHaveBeenCalledTimes(0);\n  });\n\n  test('clears the input after a comment has been posted', async () => {\n    expect.assertions(1);\n    createComment.mockResolvedValue({\n      _id: '123',\n      message: 'test comment',\n      author: { _id: '321', username: 'test' },\n      date: Date.now(),\n      postVotes: [],\n      comments: []\n    });\n    const wrapper = setup();\n    const form = findByTestAttribute(\n      wrapper,\n      'component-post-dialog-add-comment'\n    );\n\n    // Finding and setting the input value before submitting the form\n    const input = findByTestAttribute(wrapper, 'component-add-comment-input');\n    input.simulate('change', { target: { value: 'test' } });\n\n    // Submitting the form\n    form.simulate('submit', { preventDefault: jest.fn() });\n\n    await expect(createComment).toHaveBeenCalledTimes(1);\n  });\n});\n","import {\n  postDialogCommentFormReducer,\n  INITIAL_STATE\n} from './postDialogCommentFormReducer';\n\ntest('returns expected state when `POST_COMMENT_START` is passed', () => {\n  const newState = postDialogCommentFormReducer(INITIAL_STATE, {\n    type: 'POST_COMMENT_START'\n  });\n\n  expect(newState).toEqual({ ...INITIAL_STATE, posting: true });\n});\n\ntest('returns expected state when `POST_COMMENT_FAILURE` is passed', () => {\n  const newState = postDialogCommentFormReducer(\n    {\n      ...INITIAL_STATE,\n      posting: true\n    },\n    { type: 'POST_COMMENT_FAILURE', payload: 'error' }\n  );\n\n  expect(newState).toEqual({\n    ...INITIAL_STATE,\n    posting: false,\n    error: 'error'\n  });\n});\n\ntest('returns expected state and calls dispatch when `POST_COMMENT_SUCCESS` is called', () => {\n  const mockDispatch = jest.fn();\n  const newState = postDialogCommentFormReducer(INITIAL_STATE, {\n    type: 'POST_COMMENT_SUCCESS',\n    payload: { comment: 'test', dispatch: mockDispatch }\n  });\n\n  expect(newState).toEqual(INITIAL_STATE);\n  expect(mockDispatch).toHaveBeenCalledTimes(1);\n});\n\ntest('returns expected state and calls dispatch when `POST_COMMENT_REPLY_SUCCESS` is called', () => {\n  const mockDispatch = jest.fn();\n  const newState = postDialogCommentFormReducer(INITIAL_STATE, {\n    type: 'POST_COMMENT_REPLY_SUCCESS',\n    payload: { comment: 'test', dispatch: mockDispatch, parentCommentId: '123' }\n  });\n\n  expect(newState).toEqual(INITIAL_STATE);\n  expect(mockDispatch).toHaveBeenCalledTimes(1);\n});\n\ntest('returns expected state when `SET_COMMENT` is passed', () => {\n  const newState = postDialogCommentFormReducer(INITIAL_STATE, {\n    type: 'SET_COMMENT',\n    payload: 'test comment'\n  });\n\n  expect(newState).toEqual({ ...INITIAL_STATE, comment: 'test comment' });\n});\n\ntest('throws error when an invalid action is passed', () => {\n  expect(() =>\n    postDialogCommentFormReducer(INITIAL_STATE, { type: 'test' })\n  ).toThrow();\n});\n","import axios from 'axios';\n\n/**\n * Creates a comment on a specific post\n * @function createComment\n * @param {string} message The message to be posted as a comment\n * @param {string} postId The id of the post to comment on\n * @param {string} authToken A user's auth token\n * @returns {object} The created comment\n */\nexport const createComment = async (message, postId, authToken) => {\n  try {\n    const response = await axios.post(\n      `/api/comment/${postId}`,\n      { message },\n      {\n        headers: {\n          authorization: authToken,\n        },\n      }\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Deletes a comment with a specified comment id provided it was created by the user\n * @function deleteComment\n * @param {string} commentId Id of the comment to delete\n * @param {string} authToken A user's auth token\n */\nexport const deleteComment = async (commentId, authToken) => {\n  try {\n    await axios.delete(`/api/comment/${commentId}`, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Votes on a comment\n * @function voteComment\n * @param {string} commentId Id of the comment to vote on\n * @param {string} authToken A user's auth token\n */\nexport const voteComment = async (commentId, authToken) => {\n  try {\n    await axios.post(`/api/comment/${commentId}/vote`, null, {\n      headers: { authorization: authToken },\n    });\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Creates a reply to a specific comment\n * @function createCommentReply\n * @param {string} message The message to be replied with to a comment\n * @param {string} parentCommentId The id of the comment to be replied to\n * @param {string} authToken A user's auth token\n * @returns {object} The created comment reply\n */\nexport const createCommentReply = async (\n  message,\n  parentCommentId,\n  authToken\n) => {\n  try {\n    const response = await axios.post(\n      `/api/comment/${parentCommentId}/reply`,\n      { message },\n      {\n        headers: {\n          authorization: authToken,\n        },\n      }\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Deletes a comment reply with a specified comment reply id provided it was created by the user\n * @function deleteCommentReply\n * @param {string} commentReplyId Id of the comment reply to vote on\n * @param {string} authToken A user's auth token\n */\nexport const deleteCommentReply = async (commentReplyId, authToken) => {\n  try {\n    await axios.delete(`/api/comment/${commentReplyId}/reply`, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Votes on a comment reply\n * @function voteCommentReply\n * @param {string} commentReplyId Id of the comment reply to vote on\n * @param {string} authToken A user's auth token\n */\nexport const voteCommentReply = async (commentReplyId, authToken) => {\n  try {\n    await axios.post(`/api/comment/${commentReplyId}/replyVote`, null, {\n      headers: { authorization: authToken },\n    });\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Gets 3 new replies from a parent comment\n * @function getCommentReplies\n * @param {string} parentCommentId The id of a parent comment to get replies from\n * @param {number} offset A number to offset the results\n * @returns {array} Array of replies\n */\nexport const getCommentReplies = async (parentCommentId, offset = 0) => {\n  try {\n    const response = await axios.get(\n      `/api/comment/${parentCommentId}/${offset}/replies`\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Retrieves comments from a post with the given offset\n * @function getComments\n * @param {string} postId The id of a post to retrieve comments from\n * @param {number} offset The amount of comments to skip\n * @param {number} exclude The amount of comments to exlude (newest to oldest)\n * @returns {object} Object of comment details\n */\nexport const getComments = async (postId, offset, exclude = 0) => {\n  try {\n    const response = await axios.get(\n      `/api/comment/${postId}/${offset}/${exclude}`\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n","import { postDialogReducer, INITIAL_STATE } from './postDialogReducer';\n\nconst comment = {\n  _id: '456',\n  message: 'test',\n  author: { _id: '123', username: 'test' },\n  post: '12345',\n  date: 32432432324,\n  commentReplies: 0,\n  commentVotes: []\n};\n\nconst post = {\n  _id: '12345',\n  image: 'www.image.com',\n  caption: 'test post',\n  author: { username: 'test' },\n  date: 32432432324,\n  postVotes: [{ votes: [] }],\n  comments: [comment],\n  commentReplies: []\n};\n\nconst user = { _id: '123', username: 'test' };\n\nconst seededState = {\n  fetching: false,\n  error: false,\n  replying: false,\n  data: post\n};\n\ntest('throws error when an invalid action is passed', () => {\n  expect(() => postDialogReducer(null, { type: 'test' }).toThrow());\n});\n\ntest('returns expected state when `FETCH_POST_FAILURE` is passed', () => {\n  const error = 'failed';\n  const newState = postDialogReducer(INITIAL_STATE, {\n    type: 'FETCH_POST_FAILURE',\n    payload: error\n  });\n\n  expect(newState).toEqual({\n    ...INITIAL_STATE,\n    fetching: false,\n    error\n  });\n});\n\ntest('returns expected state when `FETCH_POST_SUCCESS` is passed', () => {\n  const newState = postDialogReducer(INITIAL_STATE, {\n    type: 'FETCH_POST_SUCCESS',\n    payload: post\n  });\n\n  expect(newState).toEqual({\n    fetching: false,\n    error: false,\n    replying: false,\n    data: post\n  });\n});\n\ntest('returns expected state and calls dispatch when `VOTE_POST` is passed', () => {\n  const dispatchMock = jest.fn();\n  const newState = postDialogReducer(seededState, {\n    type: 'VOTE_POST',\n    payload: {\n      currentUser: user,\n      postId: '321',\n      dispatch: dispatchMock\n    }\n  });\n\n  expect(newState).toEqual({\n    fetching: false,\n    error: false,\n    replying: false,\n    data: {\n      ...post,\n      postVotes: [{ votes: [{ author: user._id }] }]\n    }\n  });\n\n  expect(dispatchMock).toHaveBeenCalledTimes(1);\n});\n\ntest('returns expected state when `VOTE_COMMENT` is passed and comment has NOT been voted on', () => {\n  const newState = postDialogReducer(seededState, {\n    type: 'VOTE_COMMENT',\n    payload: { commentId: '456', currentUser: user }\n  });\n\n  expect(newState).toEqual({\n    ...seededState,\n    data: {\n      ...seededState.data,\n      comments: [{ ...comment, commentVotes: [{ author: user._id }] }]\n    }\n  });\n});\n\ntest('returns expected state when `ADD_COMMENT` is passed', () => {\n  const newComment = {\n    _id: '678',\n    message: 'test2',\n    author: user,\n    post: '12345',\n    date: 32432432324,\n    commentReplies: 0,\n    commentVotes: []\n  };\n  const newState = postDialogReducer(seededState, {\n    type: 'ADD_COMMENT',\n    payload: newComment\n  });\n\n  expect(newState).toEqual({\n    ...seededState,\n    data: {\n      ...seededState.data,\n      comments: [...seededState.data.comments, newComment]\n    }\n  });\n});\n\ntest('returns expected state when `REMOVE_COMMENT` is passed', () => {\n  const newState = postDialogReducer(seededState, {\n    type: 'REMOVE_COMMENT',\n    payload: comment._id\n  });\n\n  expect(newState).toEqual({\n    ...seededState,\n    data: { ...seededState.data, comments: [] }\n  });\n});\n\ndescribe('COMMENT_REPLY', () => {\n  let commentReply = undefined;\n  beforeEach(() => {\n    commentReply = {\n      _id: '678',\n      parentComment: comment._id,\n      message: 'comment reply',\n      author: user,\n      commentReplyVotes: []\n    };\n  });\n\n  test('returns expected state when `ADD_COMMENT_REPLY` is passed', () => {\n    const newState = postDialogReducer(seededState, {\n      type: 'ADD_COMMENT_REPLY',\n      payload: {\n        comment: commentReply,\n        parentCommentId: comment._id\n      }\n    });\n\n    expect(newState).toEqual({\n      ...seededState,\n      data: {\n        ...seededState.data,\n        comments: [{ ...comment, commentReplies: 1 }],\n        commentReplies: [commentReply]\n      }\n    });\n  });\n\n  test('returns expected state when `REMOVE_COMMENT_REPLY` is passed', () => {\n    const newState = postDialogReducer(\n      {\n        ...seededState,\n        data: {\n          ...seededState.data,\n          commentReplies: [commentReply],\n          comments: [{ ...comment, commentReplies: 1 }]\n        }\n      },\n      {\n        type: 'REMOVE_COMMENT_REPLY',\n        payload: {\n          commentReplyId: commentReply._id,\n          parentCommentId: comment._id\n        }\n      }\n    );\n\n    expect(newState).toEqual({\n      ...seededState,\n      data: {\n        ...seededState.data,\n        comments: [{ ...comment, commentReplies: 0 }],\n        commentReplies: []\n      }\n    });\n  });\n\n  test('returns expected state when `VOTE_COMMENT_REPLY` is passed', () => {\n    const newState = postDialogReducer(\n      {\n        ...seededState,\n        data: {\n          ...seededState.data,\n          commentReplies: [commentReply],\n          comments: [{ ...comment, commentReplies: 1 }]\n        }\n      },\n      {\n        type: 'VOTE_COMMENT_REPLY',\n        payload: { commentReplyId: commentReply._id, currentUser: user }\n      }\n    );\n\n    expect(newState).toEqual({\n      ...seededState,\n      data: {\n        ...seededState.data,\n        comments: [{ ...comment, commentReplies: 1 }],\n        commentReplies: [\n          { ...commentReply, commentReplyVotes: [{ author: user._id }] }\n        ]\n      }\n    });\n  });\n});\n\ntest('returns expected state when `SET_REPLYING` is passed', () => {\n  const newState = postDialogReducer(seededState, {\n    type: 'SET_REPLYING',\n    payload: { username: user.username, commentId: comment._id }\n  });\n\n  expect(newState).toEqual({\n    ...seededState,\n    replying: { commentUser: user.username, commentId: comment._id }\n  });\n});\n","import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport PostDialogStats from './PostDialogStats';\n\nimport {\n  storeFactory,\n  checkProps,\n  findByTestAttribute\n} from '../../../utils/test/testUtils';\n\nconst mockCurrentUser = { _id: '123', username: 'test', bookmarks: [] };\n\nconst INITIAL_PROPS = {\n  post: {\n    _id: '123',\n    image: 'www.image.com',\n    caption: 'test',\n    author: { ...mockCurrentUser },\n    postVotes: [{ votes: [] }],\n    date: Date.now()\n  },\n  token: '12345',\n  currentUser: mockCurrentUser,\n  dispatch: jest.fn(),\n  profileDispatch: jest.fn(),\n  bookmarkPost: jest.fn()\n};\n\n/**\n * Function to set up a wrapped component\n * @function setup\n * @param {object} initialState The initial state to be used for this setup\n * @returns {ShallowWrapper} The wrapped component\n */\nconst setup = (initialState = {}, additionalProps = {}) => {\n  const store = storeFactory(initialState);\n  const wrapper = shallow(\n    <PostDialogStats store={store} {...INITIAL_PROPS} {...additionalProps} />\n  ).dive();\n  return wrapper;\n};\n\ntest('renders without error', () => {\n  const wrapper = setup();\n  const component = findByTestAttribute(wrapper, 'component-post-dialog-stats');\n\n  expect(component.exists()).toBeTruthy();\n});\n\ntest('does not throw error with expected props', () => {\n  const result = checkProps(PostDialogStats, INITIAL_PROPS);\n  expect(result).toBeUndefined();\n});\n\ntest('calls dispatch when like button is clicked', () => {\n  const mockDispatch = jest.fn();\n  const wrapper = setup({}, { dispatch: mockDispatch });\n  const likeButton = findByTestAttribute(wrapper, 'component-like-button');\n\n  likeButton.simulate('click', {\n    nativeEvent: { stopImmediatePropagation: jest.fn() }\n  });\n  expect(mockDispatch).toHaveBeenCalledTimes(1);\n});\n","import React from 'react';\n\nconst SettingsFormGroup = ({ children }) => (\n  <div className=\"settings-form__form-group\">{children}</div>\n);\n\nexport default SettingsFormGroup;\n","import userTypes from './userTypes';\n\nimport { disconnectSocket } from '../socket/socketActions';\nimport { bookmarkPost as bookmark } from '../../services/postService';\nimport {\n  registerUser,\n  login,\n  githubAuthentication,\n} from '../../services/authenticationServices';\nimport {\n  changeAvatar,\n  removeAvatar,\n  updateProfile,\n} from '../../services/userService';\n\nexport const signOut = () => (dispatch) => {\n  localStorage.removeItem('token');\n  dispatch(disconnectSocket());\n  dispatch({ type: userTypes.SIGN_OUT });\n};\n\nexport const signInSuccess = (user) => {\n  localStorage.setItem('token', user.token);\n  return {\n    type: userTypes.SIGN_IN_SUCCESS,\n    payload: user,\n  };\n};\n\nexport const signInFailure = (err) => ({\n  type: userTypes.SIGN_IN_FAILURE,\n  payload: err,\n});\n\nexport const signInStart = (usernameOrEmail, password, authToken) => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: userTypes.SIGN_IN_START });\n    const response = await login(usernameOrEmail, password, authToken);\n    dispatch(signInSuccess(response));\n  } catch (err) {\n    if (authToken) dispatch(signOut);\n    dispatch(signInFailure(err.message));\n  }\n};\n\nexport const githubSignInStart = (code) => async (dispatch) => {\n  try {\n    dispatch({ type: userTypes.GITHUB_SIGN_IN_START });\n    const response = await githubAuthentication(code);\n    localStorage.setItem('token', response.token);\n    dispatch({ type: userTypes.GITHUB_SIGN_IN_SUCCESS, payload: response });\n  } catch (err) {\n    dispatch({ type: userTypes.GITHUB_SIGN_IN_FAILURE, payload: err.message });\n  }\n};\n\nexport const signUpStart = (email, fullName, username, password) => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: userTypes.SIGN_IN_START });\n    const response = await registerUser(email, fullName, username, password);\n    dispatch(signInStart(null, null, response.token));\n  } catch (err) {\n    dispatch({ type: userTypes.SIGN_UP_FAILURE, payload: err.message });\n  }\n};\n\nexport const bookmarkPost = (postId, authToken) => async (dispatch) => {\n  try {\n    const response = await bookmark(postId, authToken);\n    dispatch({\n      type: userTypes.BOOKMARK_POST,\n      payload: { ...response, postId },\n    });\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const changeAvatarStart = (formData, authToken) => async (dispatch) => {\n  try {\n    dispatch({ type: userTypes.CHANGE_AVATAR_START });\n    const response = await changeAvatar(formData, authToken);\n    dispatch({\n      type: userTypes.CHANGE_AVATAR_SUCCESS,\n      payload: response.avatar,\n    });\n  } catch (err) {\n    dispatch({\n      type: userTypes.CHANGE_AVATAR_FAILURE,\n      payload: err.message,\n    });\n  }\n};\n\nexport const removeAvatarStart = (authToken) => async (dispatch) => {\n  try {\n    dispatch({ type: userTypes.REMOVE_AVATAR_START });\n    await removeAvatar(authToken);\n    dispatch({ type: userTypes.REMOVE_AVATAR_SUCCESS });\n  } catch (err) {\n    dispatch({ type: userTypes.REMOVE_AVATAR_FAILURE, payload: err.message });\n  }\n};\n\nexport const updateProfileStart = (authToken, updates) => async (dispatch) => {\n  try {\n    dispatch({ type: userTypes.UPDATE_PROFILE_START });\n    const response = await updateProfile(authToken, updates);\n    dispatch({ type: userTypes.UPDATE_PROFILE_SUCCESS, payload: response });\n  } catch (err) {\n    dispatch({ type: userTypes.UPDATE_PROFILE_FAILURE, payload: err.message });\n  }\n};\n","import axios from 'axios';\n\n/**\n * Fetches a complete post with comments and the fully\n * sized image instead of a thumbnail image\n * @function getPost\n * @param {string} postId Id of the post to fetch\n * @returns {object} The post requested\n */\nexport const getPost = async (postId) => {\n  try {\n    const response = await axios.get(`/api/post/${postId}`);\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n *\n * @param {string} username A users username\n * @param {number} offset The amount of posts to skip\n */\nexport const getPosts = async (username, offset = 0) => {\n  try {\n    const response = await axios.get(`/api/user/${username}/posts/${offset}`);\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Either likes or dislikes a post\n * @function votePost\n * @param {string} postId The id of the post to be voted on\n * @param {*} authToken The user's auth token\n */\nexport const votePost = async (postId, authToken) => {\n  try {\n    await axios.post(`/api/post/${postId}/vote`, null, {\n      headers: { authorization: authToken },\n    });\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Sends an image and a caption as multipart/form-data and creates a post\n * @function createPost\n * @param {object} formData Multipart form data about the image being uploaded\n * @param {string} authToken The user's auth token\n * @returns {object} The created post\n */\nexport const createPost = async (formData, authToken) => {\n  try {\n    const post = await axios.post('/api/post', formData, {\n      headers: {\n        authorization: authToken,\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return post.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Deletes a post\n * @function deletePost\n * @param {string} postId The id of the post to delete\n * @param {string} authToken A user's auth token\n */\nexport const deletePost = async (postId, authToken) => {\n  try {\n    await axios.delete(`/api/post/${postId}`, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Toggles bookmarking a post\n * @param {string} postId The id of the post to bookmark\n * @param {string} authToken A user's auth token\n * @return {object}\n */\nexport const bookmarkPost = async (postId, authToken) => {\n  try {\n    const response = await axios.post(`/api/user/${postId}/bookmark`, null, {\n      headers: { authorization: authToken },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Retrieves all filters\n * @function getPostFilters\n * @returns {array} Array of filters\n */\nexport const getPostFilters = async () => {\n  try {\n    const response = await axios.get('/api/post/filters');\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Gets suggested posts\n * @function getSuggestedPosts\n * @param {string} authToken A user's auth token\n * @param {number} offset The amounts of posts to skip\n * @returns {array} Array of posts\n */\nexport const getSuggestedPosts = async (authToken, offset = 0) => {\n  try {\n    const response = await axios.get('/api/post/suggested/' + offset, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Gets posts associated with a specific hashtag\n * @function getHashtagPosts\n * @param {string} authToken A user's auth token\n * @param {string} hashtag The hashtag to find posts by\n * @param {number} offset The amount of posts to skip\n * @returns {array} Array of posts\n */\nexport const getHashtagPosts = async (authToken, hashtag, offset = 0) => {\n  try {\n    const response = await axios.get(`/api/post/hashtag/${hashtag}/${offset}`, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n","var map = {\n\t\"./Alert/Alert\": 142,\n\t\"./Alert/Alert.js\": 142,\n\t\"./App/App\": 103,\n\t\"./App/App.js\": 103,\n\t\"./App/App.test\": 239,\n\t\"./App/App.test.js\": 239,\n\t\"./Avatar/Avatar\": 25,\n\t\"./Avatar/Avatar.js\": 25,\n\t\"./Button/Button\": 18,\n\t\"./Button/Button.js\": 18,\n\t\"./Button/FollowButton/FollowButton\": 69,\n\t\"./Button/FollowButton/FollowButton.js\": 69,\n\t\"./Button/TextButton/TextButton\": 16,\n\t\"./Button/TextButton/TextButton.js\": 16,\n\t\"./Card/Card\": 52,\n\t\"./Card/Card.js\": 52,\n\t\"./ChangeAvatarButton/ChangeAvatarButton\": 119,\n\t\"./ChangeAvatarButton/ChangeAvatarButton.js\": 119,\n\t\"./ChangePasswordForm/ChangePasswordForm\": 199,\n\t\"./ChangePasswordForm/ChangePasswordForm.js\": 199,\n\t\"./Comment/Comment\": 120,\n\t\"./Comment/Comment.js\": 120,\n\t\"./Comment/CommentReply/CommentReply\": 143,\n\t\"./Comment/CommentReply/CommentReply.js\": 143,\n\t\"./Divider/Divider\": 53,\n\t\"./Divider/Divider.js\": 53,\n\t\"./EditProfileForm/EditProfileForm\": 200,\n\t\"./EditProfileForm/EditProfileForm.js\": 200,\n\t\"./Feed/Feed\": 201,\n\t\"./Feed/Feed.js\": 201,\n\t\"./Feed/FeedBottom/FeedBottom\": 146,\n\t\"./Feed/FeedBottom/FeedBottom.js\": 146,\n\t\"./FilterSelector/FilterSelector\": 147,\n\t\"./FilterSelector/FilterSelector.js\": 147,\n\t\"./Footer/Footer\": 148,\n\t\"./Footer/Footer.js\": 148,\n\t\"./Footer/SmallFooter/SmallFooter\": 202,\n\t\"./Footer/SmallFooter/SmallFooter.js\": 202,\n\t\"./FormInput/FormInput\": 23,\n\t\"./FormInput/FormInput.js\": 23,\n\t\"./FormInput/FormInput.test\": 304,\n\t\"./FormInput/FormInput.test.js\": 304,\n\t\"./FormTextarea/FormTextarea\": 144,\n\t\"./FormTextarea/FormTextarea.js\": 144,\n\t\"./GithubLoginButton/GithubLoginButton\": 101,\n\t\"./GithubLoginButton/GithubLoginButton.js\": 101,\n\t\"./HashtagPosts/HashtagPosts\": 203,\n\t\"./HashtagPosts/HashtagPosts.js\": 203,\n\t\"./Header/Header\": 139,\n\t\"./Header/Header.js\": 139,\n\t\"./Header/MobileHeader/MobileHeader\": 57,\n\t\"./Header/MobileHeader/MobileHeader.js\": 57,\n\t\"./Icon/Icon\": 4,\n\t\"./Icon/Icon.js\": 4,\n\t\"./Icon/PulsatingIcon/PulsatingIcon\": 77,\n\t\"./Icon/PulsatingIcon/PulsatingIcon.js\": 77,\n\t\"./ImageGrid/ImageGrid\": 102,\n\t\"./ImageGrid/ImageGrid.js\": 102,\n\t\"./Loader/Loader\": 51,\n\t\"./Loader/Loader.js\": 51,\n\t\"./LoginCard/LoginCard\": 125,\n\t\"./LoginCard/LoginCard.js\": 125,\n\t\"./MobileNav/MobileNav\": 149,\n\t\"./MobileNav/MobileNav.js\": 149,\n\t\"./Modal/Modal\": 141,\n\t\"./Modal/Modal.js\": 141,\n\t\"./NewPost/NewPost\": 204,\n\t\"./NewPost/NewPost.js\": 204,\n\t\"./NewPost/NewPostButton/NewPostButton\": 91,\n\t\"./NewPost/NewPostButton/NewPostButton.js\": 91,\n\t\"./NewPost/NewPostEdit/NewPostEdit\": 305,\n\t\"./NewPost/NewPostEdit/NewPostEdit.js\": 305,\n\t\"./NewPost/NewPostFilter/NewPostFilter\": 151,\n\t\"./NewPost/NewPostFilter/NewPostFilter.js\": 151,\n\t\"./NewPost/NewPostForm/NewPostForm\": 150,\n\t\"./NewPost/NewPostForm/NewPostForm.js\": 150,\n\t\"./Notification/NotificationButton/NotificationButton\": 98,\n\t\"./Notification/NotificationButton/NotificationButton.js\": 98,\n\t\"./Notification/NotificationButton/NotificationPopup/NotificationPopup\": 140,\n\t\"./Notification/NotificationButton/NotificationPopup/NotificationPopup.js\": 140,\n\t\"./Notification/NotificationFeed/NotificationFeed\": 130,\n\t\"./Notification/NotificationFeed/NotificationFeed.js\": 130,\n\t\"./OptionsDialog/OptionsDialog\": 306,\n\t\"./OptionsDialog/OptionsDialog.js\": 306,\n\t\"./PopupCard/PopupCard\": 97,\n\t\"./PopupCard/PopupCard.js\": 97,\n\t\"./PostDialog/PostDialog\": 61,\n\t\"./PostDialog/PostDialog.js\": 61,\n\t\"./PostDialog/PostDialog.test\": 307,\n\t\"./PostDialog/PostDialog.test.js\": 307,\n\t\"./PostDialog/PostDialogCommentForm/PostDialogCommentForm\": 86,\n\t\"./PostDialog/PostDialogCommentForm/PostDialogCommentForm.js\": 86,\n\t\"./PostDialog/PostDialogCommentForm/PostDialogCommentForm.test\": 308,\n\t\"./PostDialog/PostDialogCommentForm/PostDialogCommentForm.test.js\": 308,\n\t\"./PostDialog/PostDialogCommentForm/postDialogCommentFormReducer\": 21,\n\t\"./PostDialog/PostDialogCommentForm/postDialogCommentFormReducer.js\": 21,\n\t\"./PostDialog/PostDialogCommentForm/postDialogCommentFormReducer.test\": 309,\n\t\"./PostDialog/PostDialogCommentForm/postDialogCommentFormReducer.test.js\": 309,\n\t\"./PostDialog/PostDialogReducer.test\": 310,\n\t\"./PostDialog/PostDialogReducer.test.js\": 310,\n\t\"./PostDialog/PostDialogStats/PostDialogStats\": 87,\n\t\"./PostDialog/PostDialogStats/PostDialogStats.js\": 87,\n\t\"./PostDialog/PostDialogStats/PostDialogStats.test\": 311,\n\t\"./PostDialog/PostDialogStats/PostDialogStats.test.js\": 311,\n\t\"./PostDialog/postDialogReducer\": 29,\n\t\"./PostDialog/postDialogReducer.js\": 29,\n\t\"./PreviewImage/PreviewImage\": 95,\n\t\"./PreviewImage/PreviewImage.js\": 95,\n\t\"./ProfileCategory/ProfileCategory\": 205,\n\t\"./ProfileCategory/ProfileCategory.js\": 205,\n\t\"./ProtectedRoute/ProtectedRoute\": 68,\n\t\"./ProtectedRoute/ProtectedRoute.js\": 68,\n\t\"./SearchBox/SearchBox\": 96,\n\t\"./SearchBox/SearchBox.js\": 96,\n\t\"./SearchSuggestion/SearchSuggestion\": 145,\n\t\"./SearchSuggestion/SearchSuggestion.js\": 145,\n\t\"./SettingsButton/SettingsButton\": 198,\n\t\"./SettingsButton/SettingsButton.js\": 198,\n\t\"./SettingsForm/SettingsForm\": 99,\n\t\"./SettingsForm/SettingsForm.js\": 99,\n\t\"./SettingsForm/SettingsFormGroup/SettingsFormGroup\": 32,\n\t\"./SettingsForm/SettingsFormGroup/SettingsFormGroup.js\": 32,\n\t\"./SignUpCard/SignUpCard\": 206,\n\t\"./SignUpCard/SignUpCard.js\": 206,\n\t\"./SkeletonLoader/SkeletonLoader\": 27,\n\t\"./SkeletonLoader/SkeletonLoader.js\": 27,\n\t\"./SuggestedPosts/SuggestedPosts\": 207,\n\t\"./SuggestedPosts/SuggestedPosts.js\": 207,\n\t\"./Suggestion/SuggestedUsers/SuggestedUsers\": 208,\n\t\"./Suggestion/SuggestedUsers/SuggestedUsers.js\": 208,\n\t\"./Suggestion/SuggestionCard/SuggestionCard\": 152,\n\t\"./Suggestion/SuggestionCard/SuggestionCard.js\": 152,\n\t\"./UnfollowPrompt/UnfollowPrompt\": 131,\n\t\"./UnfollowPrompt/UnfollowPrompt.js\": 131,\n\t\"./UserCard/UserCard\": 41,\n\t\"./UserCard/UserCard.js\": 41,\n\t\"./UsersList/UsersList\": 209,\n\t\"./UsersList/UsersList.js\": 209,\n\t\"./UsersList/UsersListSkeleton/UsersListSkeleton\": 54,\n\t\"./UsersList/UsersListSkeleton/UsersListSkeleton.js\": 54,\n\t\"./UsersList/usersListReducer\": 121,\n\t\"./UsersList/usersListReducer.js\": 121,\n\t\"./ViewOnGithubButton/ViewOnGithubButton\": 100,\n\t\"./ViewOnGithubButton/ViewOnGithubButton.js\": 100\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 396;","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { animated } from 'react-spring';\n\nconst Icon = ({ onClick, className, icon, style }) => {\n  const iconClassNames = classNames({\n    icon: true,\n    [className]: className,\n  });\n\n  return (\n    <animated.div style={style} onClick={onClick} className={iconClassNames}>\n      <ion-icon size=\"small\" name={icon}></ion-icon>\n    </animated.div>\n  );\n};\n\nIcon.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default Icon;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { hideModal } from '../../redux/modal/modalActions';\nimport { formatDateDistance } from '../../utils/timeUtils';\n\nimport Avatar from '../Avatar/Avatar';\n\nconst UserCard = ({\n  avatar,\n  username,\n  subText,\n  subTextDark,\n  date,\n  style,\n  hideModal,\n  onClick,\n  children,\n  avatarMedium,\n}) => {\n  const avatarClassNames = classNames({\n    'avatar--small': !avatarMedium,\n    'avatar--medium': avatarMedium,\n  });\n  return (\n    <div className=\"user-card\" style={style}>\n      {onClick ? (\n        <Avatar\n          onClick={() => onClick()}\n          className={avatarClassNames}\n          imageSrc={avatar}\n          style={{ cursor: 'pointer' }}\n        />\n      ) : (\n        <Link\n          style={{ display: 'flex' }}\n          onClick={() => hideModal('OptionsDialog')}\n          to={`/${username}`}\n        >\n          <Avatar className={avatarClassNames} imageSrc={avatar} />\n        </Link>\n      )}\n      <div className=\"user-card__details\">\n        {onClick ? (\n          <p\n            onClick={() => onClick()}\n            style={{ cursor: 'pointer' }}\n            className=\"heading-4 font-bold\"\n          >\n            {username}\n          </p>\n        ) : (\n          <Link\n            onClick={() => hideModal('OptionsDialog')}\n            style={{ textDecoration: 'none' }}\n            to={`/${username}`}\n          >\n            <p className=\"heading-4 font-bold\">{username}</p>\n          </Link>\n        )}\n        {subText && (\n          <p\n            className={`heading-4 ${\n              subTextDark ? 'color-black' : 'color-grey'\n            }`}\n          >\n            {subText}\n            {date && (\n              <span className=\"color-grey ml-sm\">\n                {formatDateDistance(date)}\n              </span>\n            )}\n          </p>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(null, mapDispatchToProps)(UserCard);\n","const notificationTypes = {\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  FETCH_NOTIFICATIONS_START: 'FETCH_NOTIFICATIONS_START',\n  FETCH_NOTIFICATIONS_SUCCESS: 'FETCH_NOTIFICATIONS_SUCCESS',\n  FETCH_NOTIFICATIONS_FAILURE: 'FETCH_NOTIFICATIONS_FAILURE',\n  READ_NOTIFICATIONS: 'READ_NOTIFICATIONS',\n  CLEAR_NOTIFICATIONS: 'CLEAR_NOTIFICATIONS',\n};\n\nexport default notificationTypes;\n","const feedTypes = {\n  FETCH_POSTS_START: 'FETCH_POSTS',\n  FETCH_POSTS_FAILURE: 'FETCH_POSTS_FAILURE',\n  FETCH_POSTS_SUCCESS: 'FETCH_POSTS_SUCCESS',\n  ADD_POST: 'ADD_POST',\n  REMOVE_POST: 'REMOVE_POST',\n  CLEAR_POSTS: 'CLEAR_POSTS',\n};\n\nexport default feedTypes;\n","export const validateEmail = (email) => {\n  if (\n    !email ||\n    !email.match(\n      //eslint-disable-next-line\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    )\n  ) {\n    return 'Enter a valid email address.';\n  }\n  return false;\n};\n\nexport const validateFullName = (fullName) => {\n  if (!fullName) {\n    return 'Enter a valid name.';\n  }\n  return false;\n};\n\nexport const validateUsername = (username) => {\n  if (!username) {\n    return 'Enter a valid username.';\n  } else if (username.length > 30 || username.length < 3) {\n    return 'Please choose a username between 3 and 30 characters.';\n    //eslint-disable-next-line\n  } else if (!username.match(/^[a-zA-Z0-9\\_.]+$/)) {\n    return 'A username can only contain the following: letters A-Z, numbers 0-9 and the symbols _ . ';\n  }\n  return false;\n};\n\nexport const validatePassword = (password) => {\n  if (!password) {\n    return 'Enter a valid password.';\n  } else if (password.length < 6) {\n    return 'For security purposes we require a password to be at least 6 characters.';\n  } else if (\n    !password.match(/^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{6,}$/)\n  ) {\n    return 'A password needs to have at least one uppercase letter, one lowercase letter, one special character and one number.';\n  }\n  return false;\n};\n\nexport const validateBio = (bio) => {\n  if (bio.length > 130) {\n    return 'Your bio has to be 120 characters or less.';\n  }\n  return false;\n};\n\nexport const validateWebsite = (website) => {\n  if (\n    website &&\n    !website.match(\n      //eslint-disable-next-line\n      /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/\n    )\n  ) {\n    return 'Please provide a valid website.';\n  }\n  return false;\n};\n","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"30px\",\n    height: \"30px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(76,50)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(0)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 1,\n    transform: \"scale(1.13887 1.13887)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"-0.875s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"-0.875s\"\n  }))))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(68.38477631085024,68.38477631085024)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(45)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 0.875,\n    transform: \"scale(1.20137 1.20137)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"-0.75s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"-0.75s\"\n  }))))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(50,76)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(90)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 0.75,\n    transform: \"scale(1.26387 1.26387)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"-0.625s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"-0.625s\"\n  }))))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(31.615223689149765,68.38477631085024)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(135)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 0.625,\n    transform: \"scale(1.32637 1.32637)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"-0.5s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"-0.5s\"\n  }))))), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(24,50)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(180)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 0.5,\n    transform: \"scale(1.38887 1.38887)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"-0.375s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"-0.375s\"\n  }))))), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(31.61522368914976,31.615223689149765)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(225)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 0.375,\n    transform: \"scale(1.45137 1.45137)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"-0.25s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"-0.25s\"\n  }))))), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(49.99999999999999,24)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(270)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 0.25,\n    transform: \"scale(1.01387 1.01387)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"-0.125s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"-0.125s\"\n  }))))), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(68.38477631085023,31.61522368914976)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"rotate(315)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 0,\n    cy: 0,\n    r: 6,\n    fill: \"#ffffff\",\n    fillOpacity: 0.125,\n    transform: \"scale(1.07637 1.07637)\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"scale\",\n    begin: \"0s\",\n    values: \"1.5 1.5;1 1\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"fill-opacity\",\n    keyTimes: \"0;1\",\n    dur: \"1s\",\n    repeatCount: \"indefinite\",\n    values: \"1;0\",\n    begin: \"0s\"\n  }))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoader);\nexport default __webpack_public_path__ + \"static/media/loader.24d21724.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as LoaderSvg } from '../../assets/svg/loader.svg';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <LoaderSvg className=\"loader__svg\" />\n  </div>\n);\n\nexport default Loader;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\n\nimport './sass/main.scss';\n\nif (process.env.NODE_ENV === 'development') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst Card = ({ className, style, children }) => {\n  const cardClassNames = classNames({\n    card: true,\n    [className]: className,\n  });\n\n  return (\n    <div className={cardClassNames} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nconst Divider = ({ children }) => (\n  <h4\n    className={`heading-4 color-grey ${\n      children ? 'divider--split' : 'divider'\n    }`}\n  >\n    {children}\n  </h4>\n);\n\nexport default Divider;\n","import React, { Fragment } from 'react';\n\nimport SkeletonLoader from '../../SkeletonLoader/SkeletonLoader';\n\nconst UsersListSkeleton = ({ amount = 3, style }) => {\n  const renderSkeleton = () => {\n    const skeleton = [];\n    for (let i = 0; i < amount; i++) {\n      skeleton.push(\n        <div\n          key={i}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            padding: '0.5rem 1.5rem',\n            ...style,\n          }}\n        >\n          <SkeletonLoader\n            style={{\n              width: '40px',\n              height: '40px',\n              borderRadius: '100px',\n            }}\n          />\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <SkeletonLoader\n              style={{\n                width: '10rem',\n                height: '1rem',\n                marginLeft: '1rem',\n                marginBottom: '5px',\n              }}\n            />\n            <SkeletonLoader\n              style={{ width: '15rem', height: '1rem', marginLeft: '1rem' }}\n            />\n          </div>\n        </div>\n      );\n    }\n    return skeleton;\n  };\n\n  return <Fragment>{renderSkeleton()}</Fragment>;\n};\n\nexport default UsersListSkeleton;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useHistory } from 'react-router-dom';\n\nimport { selectCurrentUser } from '../../../redux/user/userSelectors';\n\nimport Icon from '../../Icon/Icon';\nimport Button from '../../Button/Button';\nimport TextButton from '../../Button/TextButton/TextButton';\n\nconst MobileHeader = ({ children, backArrow, style, show, currentUser }) => {\n  const history = useHistory();\n  return (\n    <header\n      style={{ ...style, display: `${show && 'grid'}` }}\n      className=\"header--mobile\"\n    >\n      {currentUser ? (\n        <Fragment>\n          {backArrow && (\n            <Icon\n              onClick={() => history.goBack()}\n              style={{ cursor: 'pointer' }}\n              icon=\"chevron-back\"\n            />\n          )}\n          {children}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <h3 style={{ fontSize: '2.5rem' }} className=\"heading-logo\">\n            Timcha\n          </h3>\n          <div style={{ gridColumn: '-1' }}>\n            <Button\n              onClick={() => history.push('/')}\n              style={{ marginRight: '1rem' }}\n            >\n              Log In\n            </Button>\n            <TextButton onClick={() => history.push('/signup')} bold blue>\n              Sign Up\n            </TextButton>\n          </div>\n        </Fragment>\n      )}\n    </header>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(MobileHeader);\n","import { useEffect, useRef } from 'react';\nimport throttle from 'lodash/throttle';\n\n/**\n * Gets the current scroll position\n * @function getCurrentScrollPosition\n * @param {HTMLElement} element The element to retrieve a scroll position from\n */\nconst getCurrentScrollPosition = (element) => {\n  const { scrollTop } = element;\n  return scrollTop;\n};\n\n/**\n * A throttled hook to execute a function upon scroll\n * @function useScrollPositionThrottled\n * @param {function} callback Callback function to call when a user scrolls\n * @param {HTMLElement} element The element to calculate the scroll position, the default is document\n * @param {array} deps Dependency array\n */\nconst useScrollPositionThrottled = (callback, element, deps = []) => {\n  const currentElement = element ? element : document.documentElement;\n  const scrollPosition = useRef(getCurrentScrollPosition(currentElement));\n\n  /**\n   * Handles determining positional values when scrolling\n   * @function handleScroll\n   */\n  useEffect(() => {\n    const handleScroll = () => {\n      scrollPosition.current = getCurrentScrollPosition(currentElement);\n      callback({\n        currentScrollPosition: scrollPosition.current,\n        atBottom:\n          currentElement.scrollHeight -\n            currentElement.scrollTop -\n            currentElement.clientHeight <\n          1000,\n      });\n    };\n    // Throttle the function to improve performance\n    const handleScrollThrottled = throttle(handleScroll, 200);\n    element\n      ? element.addEventListener('scroll', handleScrollThrottled)\n      : window.addEventListener('scroll', handleScrollThrottled);\n\n    return () => {\n      element\n        ? element.removeEventListener('scroll', handleScrollThrottled)\n        : window.removeEventListener('scroll', handleScrollThrottled);\n    };\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...deps, element, currentElement, callback]);\n};\n\nexport default useScrollPositionThrottled;\n","import axios from 'axios';\n\n/**\n * Searches for a username that is similar to the one supplied\n * @function searchUsers\n * @param {string} username The username to search for\n * @param {number} offset The number of documents to skip\n * @returns {array} Array of users that match the criteria\n */\nexport const searchUsers = async (username, offset = 0) => {\n  try {\n    const response = await axios.get(`/api/user/${username}/${offset}/search`);\n    return response.data;\n  } catch (err) {\n    console.warn(err);\n  }\n};\n\n/**\n * Verifies a user's email\n * @function verifyUser\n * @param {string} authToken A user's auth token\n * @param {string} confirmationToken The token to verify an emailk\n */\nexport const confirmUser = async (authToken, confirmationToken) => {\n  try {\n    await axios.put(\n      '/api/user/confirm',\n      {\n        token: confirmationToken,\n      },\n      {\n        headers: {\n          authorization: authToken,\n        },\n      }\n    );\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Uploads and changes a user's avatar\n * @function changeAvatar\n * @param {object} image The image to upload\n * @param {string} authToken A user's auth token\n * @returns {string} The new avatar url\n */\nexport const changeAvatar = async (image, authToken) => {\n  const formData = new FormData();\n  formData.append('image', image);\n  try {\n    const response = await axios.put('/api/user/avatar', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        authorization: authToken,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Removes a user's current avatar\n * @function removeAvatar\n * @param {string} authToken A user's auth token\n */\nexport const removeAvatar = async (authToken) => {\n  try {\n    axios.delete('/api/user/avatar', {\n      headers: {\n        authorization: authToken,\n      },\n    });\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Updates the specified fields on the user\n * @function updateProfile\n * @param {string} authToken A user's auth token\n * @param  {object} updates An object of the fields to update on the user model\n * @returns {object} Updated user object\n */\nexport const updateProfile = async (authToken, updates) => {\n  try {\n    const response = await axios.put(\n      '/api/user',\n      {\n        ...updates,\n      },\n      {\n        headers: {\n          authorization: authToken,\n        },\n      }\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n\n/**\n * Gets random suggested users for the user to follow\n * @function getSuggestedUsers\n * @param {string} authToken A user's auth token\n * @returns {array} Array of users\n */\nexport const getSuggestedUsers = async (authToken, max) => {\n  try {\n    const response = await axios.get(`/api/user/suggested/${max || ''}`, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data.error);\n  }\n};\n","import React, { useEffect, useReducer, Fragment, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport classNames from 'classnames';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { selectToken, selectCurrentUser } from '../../redux/user/userSelectors';\n\nimport { showModal, hideModal } from '../../redux/modal/modalActions';\nimport { showAlert } from '../../redux/alert/alertActions';\n\nimport { getPost, deletePost } from '../../services/postService';\nimport { getComments } from '../../services/commentService';\n\nimport Avatar from '../Avatar/Avatar';\nimport Icon from '../Icon/Icon';\nimport SkeletonLoader from '../SkeletonLoader/SkeletonLoader';\nimport Comment from '../Comment/Comment';\nimport PostDialogCommentForm from './PostDialogCommentForm/PostDialogCommentForm';\nimport PostDialogStats from './PostDialogStats/PostDialogStats';\n\nimport { INITIAL_STATE, postDialogReducer } from './postDialogReducer';\n\n\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport Zmage from 'react-zmage';\n\n\n\n\nconst PostDialog = ({\n  postId,\n  token,\n  currentUser,\n  profileDispatch,\n  showModal,\n  hideModal,\n  showAlert,\n  style,\n  className,\n  postData,\n  loading,\n  simple,\n}) => {\n  const commentsRef = useRef();\n  const [state, dispatch] = useReducer(postDialogReducer, INITIAL_STATE);\n  const history = useHistory();\n\n  const fetching = loading !== undefined ? loading : state.fetching;\n\n  useEffect(() => {\n    if (!loading) {\n      // Check if the post data is already provided by another component\n      if (postData) {\n        dispatch({ type: 'FETCH_POST_SUCCESS', payload: postData });\n      } else {\n        window.history.pushState(\n          { prevUrl: window.location.href },\n          null,\n          `/post/${postId}`\n        );\n        (async function () {\n          try {\n            const response = await getPost(postId);\n            dispatch({ type: 'FETCH_POST_SUCCESS', payload: response });\n          } catch (err) {\n            history.push('/');\n            dispatch({ type: 'FETCH_POST_FAILURE', payload: err });\n          }\n        })();\n      }\n    }\n\n    return () => {\n      if (window.history.state && window.history.state.prevUrl) {\n        window.history.pushState(\n          'profile',\n          'Profile',\n          window.history.state.prevUrl\n        );\n      }\n    };\n  }, [postId, history, loading, postData]);\n\n  const fetchAdditionalComments = async () => {\n    try {\n      const commentData = await getComments(\n        postId,\n        state.data.comments.length,\n        state.localStateComments.size\n      );\n      dispatch({ type: 'ADD_COMMENT', payload: commentData.comments });\n    } catch (err) {\n      showAlert('Unable to fetch additional comments.', () =>\n        fetchAdditionalComments()\n      );\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      await deletePost(postId, token);\n      profileDispatch &&\n        profileDispatch({\n          type: 'DELETE_POST',\n          payload: postId,\n        });\n      hideModal('PostDialog/PostDialog');\n    } catch (err) {\n      showAlert('Unable to delete post.', () => handleDeletePost());\n    }\n  };\n\n  return (\n    <div\n      className={classNames({\n        'post-dialog': true,\n        'post-dialog--simple': simple,\n        [className]: className,\n      })}\n      data-test=\"component-post-dialog\"\n      style={style}\n    >\n      <Fragment>\n        <div\n          className={classNames({\n            'post-dialog__image': true,\n            'post-dialog__image--simple': simple,\n          })}\n        >\n          {fetching ? (\n            <SkeletonLoader animated />\n          ) : (\n            <Zmage\n              data-src={state.data.image}\n              src={'https://cdn.jsdelivr.net/gh/chawaa/timcha@master/img/placeholder.gif'}\n              alt=\"Post\"\n              set={[{ src: state.data.image }]}\n              style={{ filter: state.data.filter }}\n              zIndex={19260817}\n              class=\"lazyload\"\n            />\n          )}\n        </div>\n        <header\n          className={classNames({\n            'post-dialog__header': true,\n            'post-dialog__header--simple': simple,\n          })}\n        >\n          {fetching ? (\n            <SkeletonLoader\n              style={{ height: '4rem', width: '4rem', borderRadius: '100px' }}\n            />\n          ) : (\n            <Link\n              to={`/${state.data.author.username}`}\n              style={{ display: 'flex' }}\n            >\n              <Avatar\n                className=\"avatar--small\"\n                imageSrc={state.data.author.avatar}\n              />\n            </Link>\n          )}\n          {fetching ? (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <SkeletonLoader style={{ height: '1rem', width: '10rem' }} />\n              <SkeletonLoader\n                style={{ height: '1rem', width: '15rem', marginTop: '5px' }}\n              />\n            </div>\n          ) : (\n            <Link\n              style={{ textDecoration: 'none' }}\n              to={`/${state.data.author.username}`}\n            >\n              <p className=\"heading-4 heading-4--bold\">\n                <b>{state.data.author.username}</b>\n              </p>\n            </Link>\n          )}\n          {!fetching && (\n            <div\n              onClick={() => {\n                const options = [\n                  {\n                    text: '前往作品',\n                    onClick: () => {\n                      hideModal('PostDialog/PostDialog');\n                      history.push(`/post/${postId}`);\n                    },\n                  },\n                  {\n                    text: '复制链接',\n                    onClick: () => {\n                      navigator.clipboard\n                        .writeText(document.URL)\n                        .then(() => showAlert('Link copied to clipboard.'))\n                        .catch(() =>\n                          showAlert('Could not copy link to clipboard.')\n                        );\n                    },\n                  },\n                ];\n                showModal(\n                  {\n                    options:\n                      currentUser &&\n                      currentUser.username === state.data.author.username\n                        ? [\n                            ...options,\n                            {\n                              text: '删除作品',\n                              warning: true,\n                              onClick: () => {\n                                handleDeletePost();\n                                history.push('/' + currentUser.username);\n                              },\n                            },\n                          ]\n                        : options,\n                  },\n                  'OptionsDialog/OptionsDialog'\n                );\n              }}\n              style={{ cursor: 'pointer' }}\n              className=\"post-dialog__more\"\n            >\n              <Icon className=\"icon--small\" icon=\"ellipsis-horizontal\" />\n            </div>\n          )}\n        </header>\n        <div\n          data-test=\"component-post-dialog-content\"\n          className={classNames({\n            'post-dialog__content': true,\n            'post-dialog__content--simple': simple,\n          })}\n        >\n          <div\n            ref={commentsRef}\n            className={classNames({\n              comments: true,\n              'comments--simple': simple,\n            })}\n          >\n            {/* Render a caption if there is one as a Comment component with the caption prop */}\n            {state.data.caption && !fetching ? (\n              <Comment\n                comment={{\n                  message: state.data.caption,\n                  avatar: state.data.author.avatar,\n                  username: state.data.author.username,\n                }}\n                currentUser={currentUser}\n                token={token}\n                post={state.data}\n                caption\n                simple={simple}\n              />\n            ) : null}\n            {!fetching &&\n              state.data.comments.map((comment, idx) => (\n                <Comment\n                  comment={comment}\n                  currentUser={currentUser}\n                  token={token}\n                  post={state.data}\n                  key={idx}\n                  dialogDispatch={dispatch}\n                  profileDispatch={profileDispatch}\n                  simple={simple}\n                />\n              ))}\n            {!postData &&\n              state.data.comments.length - state.localStateComments.size <\n                state.data.commentCount - state.localStateComments.size && (\n                <div\n                  style={{ padding: '2rem', cursor: 'pointer' }}\n                  onClick={() => fetchAdditionalComments()}\n                >\n                  <Icon\n                    style={{\n                      margin: '0 auto',\n                    }}\n                    icon=\"add-circle-outline\"\n                  />\n                </div>\n              )}\n          </div>\n          {fetching ? (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                padding: '2rem 2rem 6rem 2rem',\n              }}\n            >\n              <SkeletonLoader style={{ height: '1.5rem', width: '15rem' }} />\n              <SkeletonLoader\n                style={{ height: '1.5rem', width: '20rem', marginTop: '1rem' }}\n              />\n              <SkeletonLoader\n                style={{ height: '1.5rem', width: '10rem', marginTop: '1rem' }}\n              />\n            </div>\n          ) : (\n            <PostDialogStats\n              currentUser={currentUser}\n              token={token}\n              post={state.data}\n              dispatch={dispatch}\n              profileDispatch={profileDispatch}\n              simple={simple}\n            />\n          )}\n          {!fetching && (\n            <PostDialogCommentForm\n              postId={postId}\n              token={token}\n              currentUser={currentUser}\n              commentsRef={commentsRef}\n              dialogDispatch={dispatch}\n              profileDispatch={profileDispatch}\n              replying={state.replying}\n            />\n          )}\n        </div>\n      </Fragment>\n    </div>\n  );\n};\n\nPostDialog.propTypes = {\n  postId: PropTypes.string,\n  token: PropTypes.string,\n  currentUser: PropTypes.object,\n  profileDispatch: PropTypes.func,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  token: selectToken,\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: (component) => dispatch(hideModal(component)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n});\n\nPostDialog.whyDidYouRender = true;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDialog);\n","import { formatDistanceStrict, format } from 'date-fns';\n\nexport const formatDateDistance = (endDate) => {\n  const format = formatDistanceStrict(new Date(), new Date(endDate));\n  const duration = format.split(' ');\n  duration[1] = duration[1].substring(0, 1);\n  if (duration[1] === 's') {\n    return 'Just now';\n  }\n  return duration.join(' ');\n};\n\nexport const formatDate = (date) => {\n  date = new Date(date);\n  const formattedDate = format(date, 'MMMM d');\n  return formattedDate;\n};\n","const alertTypes = {\n  SHOW_ALERT: 'SHOW_ALERT',\n  HIDE_ALERT: 'HIDE_ALERT',\n  SET_ALERT_TIMEOUT_ID: 'SET_ALERT_TIMEOUT_ID',\n};\n\nexport default alertTypes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { selectToken } from '../../redux/user/userSelectors';\n\nconst ProtectedRoute = ({ token, children, ...props }) => {\n  return (\n    <Route {...props}>{token ? children : <Redirect to=\"/login\" />}</Route>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  token: selectToken,\n});\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  selectCurrentUser,\n  selectToken,\n} from '../../../redux/user/userSelectors';\nimport { showModal } from '../../../redux/modal/modalActions';\nimport { showAlert } from '../../../redux/alert/alertActions';\n\nimport { followUser } from '../../../services/profileService';\n\nimport Button from '../Button';\nimport UnfollowPrompt from '../../UnfollowPrompt/UnfollowPrompt';\n\nconst FollowButton = ({\n  userId,\n  token,\n  currentUser,\n  showModal,\n  following,\n  username,\n  avatar,\n  showAlert,\n  style,\n}) => {\n  const [isFollowing, setIsFollowing] = useState(following);\n  const [loading, setLoading] = useState(false);\n\n  const follow = async () => {\n    try {\n      setLoading(true);\n      await followUser(userId, token);\n      if (!isFollowing) {\n        setIsFollowing(true);\n      } else {\n        setIsFollowing(false);\n      }\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      showAlert('Could not follow the user.', () => follow());\n    }\n  };\n\n  if (username === currentUser.username) {\n    return <Button disabled>Follow</Button>;\n  }\n\n  if (isFollowing) {\n    return (\n      <Button\n        style={style}\n        loading={loading}\n        onClick={() =>\n          showModal(\n            {\n              options: [\n                {\n                  warning: true,\n                  text: 'Unfollow',\n                  onClick: () => follow(),\n                },\n              ],\n              children: <UnfollowPrompt avatar={avatar} username={username} />,\n            },\n            'OptionsDialog/OptionsDialog'\n          )\n        }\n        inverted\n      >\n        Following\n      </Button>\n    );\n  }\n  return (\n    <Button style={style} loading={loading} onClick={() => follow()}>\n      Follow\n    </Button>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowButton);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTransition } from 'react-spring';\n\nimport Icon from '../Icon';\n\nconst PulsatingIcon = ({\n  toggle,\n  constantProps = {},\n  toggledProps,\n  elementRef\n}) => {\n  const transitions = useTransition(toggle, null, {\n    from: { transform: 'scale(1.3)' },\n    enter: { transform: 'scale(1)' },\n    leave: { display: 'none' },\n    config: {\n      mass: 1,\n      tension: 500,\n      friction: 20\n    },\n    // Prevent animating on initial render\n    immediate: !elementRef.current\n  });\n\n  return (\n    <Fragment>\n      {transitions.map(({ item, key, props }) =>\n        item ? (\n          <Icon\n            {...constantProps}\n            {...toggledProps[0]}\n            style={props}\n            key={key}\n          />\n        ) : (\n          <Icon\n            {...constantProps}\n            {...toggledProps[1]}\n            style={props}\n            key={key}\n          />\n        )\n      )}\n    </Fragment>\n  );\n};\n\nPulsatingIcon.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n  constantProps: PropTypes.object,\n  toggledProps: PropTypes.arrayOf(PropTypes.object).isRequired,\n  elementRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n    .isRequired\n};\n\nexport default PulsatingIcon;\n","import axios from 'axios';\n\n/**\n * Retrieves a users notifications\n * @function retrieveNotifications\n * @param {string} authToken A user's auth token\n * @returns {array} Array of notifications\n */\nexport const retrieveNotifications = async (authToken) => {\n  try {\n    const response = await axios.get('/api/notification', {\n      headers: {\n        authorization: authToken,\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err.response.data);\n  }\n};\n\n/**\n * Reads all the user's notifications\n * @function readNotifications\n * @param {string} authToken A user's auth token\n */\nexport const readNotifications = async (authToken) => {\n  try {\n    await axios.put('/api/notification', null, {\n      headers: {\n        authorization: authToken,\n      },\n    });\n  } catch (err) {\n    throw new Error(err.response.data);\n  }\n};\n","import notificationTypes from './notificationTypes';\n\nimport {\n  retrieveNotifications,\n  readNotifications,\n} from '../../services/notificationServices';\n\nexport const addNotification = (notification) => ({\n  type: notificationTypes.ADD_NOTIFICATION,\n  payload: notification,\n});\n\nexport const fetchNotificationsStart = (authToken) => async (dispatch) => {\n  try {\n    dispatch({ type: notificationTypes.FETCH_NOTIFICATIONS_START });\n    const response = await retrieveNotifications(authToken);\n    dispatch({\n      type: notificationTypes.FETCH_NOTIFICATIONS_SUCCESS,\n      payload: response,\n    });\n  } catch (err) {\n    dispatch({\n      type: notificationTypes.FETCH_NOTIFICATIONS_FAILURE,\n      payload: err.message,\n    });\n  }\n};\n\nexport const readNotificationsStart = (authToken) => async (dispatch) => {\n  try {\n    dispatch({ type: notificationTypes.READ_NOTIFICATIONS });\n    await readNotifications(authToken);\n  } catch (err) {\n    console.warn(err.message);\n  }\n};\n\nexport const clearNotifications = () => ({\n  type: notificationTypes.CLEAR_NOTIFICATIONS,\n});\n","import React, {\n  useReducer,\n  Fragment,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport {\n  createComment,\n  createCommentReply,\n} from '../../../services/commentService';\n\nimport {\n  INITIAL_STATE,\n  postDialogCommentFormReducer,\n} from './postDialogCommentFormReducer';\n\nimport useSearchUsersDebounced from '../../../hooks/useSearchUsersDebounced';\n\nimport Loader from '../../Loader/Loader';\nimport SearchSuggestion from '../../SearchSuggestion/SearchSuggestion';\n\nconst PostDialogCommentForm = ({\n  token,\n  postId,\n  commentsRef,\n  dialogDispatch,\n  profileDispatch,\n  replying,\n  currentUser,\n}) => {\n  const [state, dispatch] = useReducer(\n    postDialogCommentFormReducer,\n    INITIAL_STATE\n  );\n  const [mention, setMention] = useState(null);\n\n  let {\n    handleSearchDebouncedRef,\n    result,\n    setResult,\n    fetching,\n    setFetching,\n  } = useSearchUsersDebounced();\n\n  const commentInputRef = useRef();\n\n  useEffect(() => {\n    if (replying && commentInputRef.current) {\n      commentInputRef.current.value = `@${replying.commentUser} `;\n      commentInputRef.current.focus();\n    }\n  }, [replying]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (state.comment.length === 0) {\n      return dispatch({\n        type: 'POST_COMMENT_FAILURE',\n        payload: 'You cannot post an empty comment.',\n      });\n    }\n\n    try {\n      setResult(null);\n      dispatch({ type: 'POST_COMMENT_START' });\n      if (!replying) {\n        // The user is not replying to a comment\n        const comment = await createComment(state.comment, postId, token);\n        dispatch({\n          type: 'POST_COMMENT_SUCCESS',\n          payload: { comment, dispatch: dialogDispatch, postId },\n        });\n        // Scroll to bottom to see posted comment\n        commentsRef.current.scrollTop = commentsRef.current.scrollHeight;\n      } else {\n        // The user is replying to a comment\n        const comment = await createCommentReply(\n          state.comment,\n          replying.commentId,\n          token\n        );\n        dispatch({\n          type: 'POST_COMMENT_REPLY_SUCCESS',\n          payload: {\n            comment,\n            dispatch: dialogDispatch,\n            parentCommentId: replying.commentId,\n          },\n        });\n        dialogDispatch({ type: 'SET_REPLYING' });\n      }\n      // Increment the comment count on the overlay of the image on the profile page\n      profileDispatch &&\n        profileDispatch({\n          type: 'INCREMENT_POST_COMMENTS_COUNT',\n          payload: postId,\n        });\n    } catch (err) {\n      dispatch({ type: 'POST_COMMENT_FAILURE', payload: err });\n    }\n  };\n\n  return (\n    <form\n      onSubmit={(event) => handleSubmit(event)}\n      className=\"post-dialog__add-comment\"\n      data-test=\"component-post-dialog-add-comment\"\n    >\n      <Fragment>\n        {currentUser ? (\n          <Fragment>\n            {state.posting && <Loader />}\n            <input\n              className=\"add-comment__input\"\n              type=\"text\"\n              placeholder=\"Add a comment...\"\n              onChange={(event) => {\n                // Removed the `@username` from the input so the user is no longer looking to reply\n                if (replying && !event.target.value) {\n                  dialogDispatch({ type: 'SET_REPLYING' });\n                }\n                dispatch({ type: 'SET_COMMENT', payload: event.target.value });\n                // Checking for an @ mention\n                let string = event.target.value.match(\n                  new RegExp(/@[a-zA-Z0-9]+$/)\n                );\n                if (string) {\n                  setMention(() => {\n                    setFetching(true);\n                    const mention = string[0].substring(1);\n                    // Setting the result to an empty array to show skeleton\n                    setResult([]);\n                    handleSearchDebouncedRef(mention);\n                    return mention;\n                  });\n                } else {\n                  setResult(null);\n                }\n              }}\n              value={state.comment}\n              ref={commentInputRef}\n              data-test=\"component-add-comment-input\"\n            />\n            <button\n              type=\"submit\"\n              className=\"heading-3 heading--button font-bold color-blue\"\n            >\n              Post\n            </button>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <h4 className=\"heading-4 font-medium color-grey\">\n              <span>\n                <Link to=\"/login\" className=\"link\">\n                  Log in\n                </Link>{' '}\n              </span>\n              to like or comment.\n            </h4>\n          </Fragment>\n        )}\n      </Fragment>\n      {result && (\n        <SearchSuggestion\n          fetching={fetching}\n          result={result}\n          username={mention}\n          onClick={(user) => {\n            let comment = commentInputRef.current.value;\n            // Replace the last word with the @mention\n            dispatch({\n              type: 'SET_COMMENT',\n              payload: comment.replace(/@\\b(\\w+)$/, `@${user.username} `),\n            });\n            commentInputRef.current.focus();\n            setResult(null);\n          }}\n        />\n      )}\n    </form>\n  );\n};\n\nPostDialogCommentForm.propTypes = {\n  token: PropTypes.string,\n  postId: PropTypes.string.isRequired,\n  commentsRef: PropTypes.object.isRequired,\n  dialogDispatch: PropTypes.func.isRequired,\n  profileDispatch: PropTypes.func,\n  replying: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired,\n};\n\nexport default PostDialogCommentForm;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { bookmarkPost } from '../../../redux/user/userActions';\nimport { showAlert } from '../../../redux/alert/alertActions';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\n\nimport { formatDate } from '../../../utils/timeUtils';\nimport { votePost } from '../../../services/postService';\n\nimport Icon from '../../Icon/Icon';\nimport PulsatingIcon from '../../Icon/PulsatingIcon/PulsatingIcon';\nimport LoginCard from '../../LoginCard/LoginCard';\n\nconst PostDialogStats = ({\n  currentUser,\n  post,\n  token,\n  dispatch,\n  profileDispatch,\n  bookmarkPost,\n  showAlert,\n  showModal,\n  hideModal,\n  simple,\n}) => {\n  const ref = useRef();\n\n  const handleClick = async () => {\n    if (!currentUser) {\n      return showModal(\n        {\n          children: <LoginCard onClick={() => hideModal('Card/Card')} modal />,\n          style: {\n            gridColumn: 'center-start / center-end',\n            justifySelf: 'center',\n            width: '40rem',\n          },\n        },\n        'Card/Card'\n      );\n    }\n    // Dispatch the action immediately to avoid a delay between the user's click and something happening\n    dispatch({\n      type: 'VOTE_POST',\n      payload: { currentUser, postId: post._id, dispatch: profileDispatch },\n    });\n    try {\n      await votePost(post._id, token);\n    } catch (err) {\n      showAlert('Could not vote on the post.', () => handleClick());\n    }\n  };\n\n  const postDialogStatsClassNames = classNames({\n    'post-dialog__stats': true,\n    'post-dialog__stats--simple': simple,\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={postDialogStatsClassNames}\n      data-test=\"component-post-dialog-stats\"\n    >\n      <div className=\"post-dialog__actions\">\n        {currentUser ? (\n          <PulsatingIcon\n            toggle={\n              !!post.postVotes.find((vote) => vote.author === currentUser._id)\n            }\n            elementRef={ref}\n            constantProps={{\n              onClick: () => handleClick(),\n            }}\n            toggledProps={[\n              {\n                className: 'icon--button post-dialog__like color-red',\n                icon: 'heart',\n              },\n              {\n                className: 'icon--button post-dialog__like',\n                icon: 'heart-outline',\n              },\n            ]}\n          />\n        ) : (\n          <Icon\n            onClick={() => handleClick()}\n            icon=\"heart-outline\"\n            className=\"icon--button post-dialog__like\"\n          />\n        )}\n        <Icon\n          onClick={() =>\n            currentUser && document.querySelector('.add-comment__input').focus()\n          }\n          className=\"icon--button\"\n          icon=\"chatbubble-outline\"\n        />\n        <Icon className=\"icon--button\" icon=\"paper-plane-outline\" />\n        <Icon\n          className=\"icon--button\"\n          onClick={() => bookmarkPost(post._id, token)}\n          icon={\n            currentUser && currentUser.bookmarks\n              ? !!currentUser.bookmarks.find(\n                  (bookmark) => bookmark.post === post._id\n                )\n                ? 'bookmark'\n                : 'bookmark-outline'\n              : 'bookmark-outline'\n          }\n        />\n      </div>\n      <p className=\"heading-4\">\n        {post.postVotes.length === 0 ? (\n          <span>\n            Be the first to{' '}\n            <b\n              style={{ cursor: 'pointer' }}\n              onClick={(event) => {\n                event.nativeEvent.stopImmediatePropagation();\n                handleClick();\n              }}\n              data-test=\"component-like-button\"\n            >\n              like this\n            </b>\n          </span>\n        ) : (\n          <span>\n            <b>\n              {post.postVotes.length}{' '}\n              {post.postVotes.length === 1 ? 'like' : 'likes'}\n            </b>\n          </span>\n        )}\n      </p>\n      <p className=\"heading-5 color-light uppercase\">{formatDate(post.date)}</p>\n    </div>\n  );\n};\n\nPostDialogStats.propTypes = {\n  currentUser: PropTypes.object,\n  post: PropTypes.object.isRequired,\n  token: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  profileDispatch: PropTypes.func,\n  bookmarkPost: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  bookmarkPost: (postId, authToken) =>\n    dispatch(bookmarkPost(postId, authToken)),\n  showAlert: (text, onClick) => dispatch(showAlert(text, onClick)),\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(null, mapDispatchToProps)(PostDialogStats);\n","import axios from 'axios';\n\n/**\n * Fetches the profile information of a specific user\n * @function getUserProfile\n * @param {string} username Username of profile to fetch\n */\nexport const getUserProfile = async (username, authToken) => {\n  try {\n    const response = await axios.get(\n      `/api/user/${username}`,\n      authToken && { headers: { authorization: authToken } }\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Follows or unfollows a user with a given id depending on\n * whether they are already followed\n * @function followUser\n * @param {string} userId The id of the user to follow/unfollow\n * @param {string} authToken A user's auth token\n */\nexport const followUser = async (userId, authToken) => {\n  try {\n    const response = await axios.post(`/api/user/${userId}/follow`, null, {\n      headers: { authorization: authToken },\n    });\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Retrieves who the user is following\n * @function retrieveUserFollowing\n * @param {string} userId The id of the user to retrieve following users from\n * @param {number} offset The offset of how many users to skip for the next fetch\n * @param {string} authToken A user's auth token\n */\nexport const retrieveUserFollowing = async (userId, offset, authToken) => {\n  try {\n    const response = await axios.get(\n      `/api/user/${userId}/${offset}/following`,\n      {\n        headers: { authorization: authToken },\n      }\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n/**\n * Retrieves who is following the user\n * @function retrieveUserFollowing\n * @param {string} userId The id of the user to retrieve followers from\n * @param {number} offset The offset of how many users to skip for the next fetch\n * @param {string} authToken A user's auth token\n */\nexport const retrieveUserFollowers = async (userId, offset, authToken) => {\n  try {\n    const response = await axios.get(\n      `/api/user/${userId}/${offset}/followers`,\n      {\n        headers: { authorization: authToken },\n      }\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n","import React, { useState, Fragment, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\n\nimport Icon from '../../Icon/Icon';\n\nconst NewPostButton = ({ showModal, hideModal, plusIcon, children, style }) => {\n  const [file, setFile] = useState(undefined);\n  const fileInputRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (file) {\n      if (window.outerWidth > 600) {\n        showModal(\n          { file, hide: () => hideModal('NewPost/NewPost') },\n          'NewPost/NewPost'\n        );\n      } else {\n        history.push('/new', { file });\n      }\n      // Resetting the input value so you are able to\n      // use the same file twice\n      fileInputRef.current.value = '';\n    }\n  }, [file, showModal, hideModal, history]);\n  return (\n    <Fragment>\n      <label\n        style={{ cursor: 'pointer', ...style }}\n        className=\"icon\"\n        htmlFor=\"file-upload\"\n      >\n        {children ? (\n          children\n        ) : (\n          <Icon icon={plusIcon ? 'add-circle-outline' : 'camera-outline'} />\n        )}\n      </label>\n      <input\n        id=\"file-upload\"\n        type=\"file\"\n        style={{ display: 'none' }}\n        accept=\"image/*\"\n        // Get the first selected file\n        onChange={(event) => setFile(event.target.files[0])}\n        ref={fileInputRef}\n      />\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(null, mapDispatchToProps)(NewPostButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../Icon/Icon';\n\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\n\n\n\n\nconst PreviewImage = ({ onClick, image, likes, comments, filter }) => (\n  <figure onClick={onClick} key={image} className=\"preview-image\">\n    <img src={'https://cdn.jsdelivr.net/gh/chawaa/timcha@master/img/loading.jpg'} data-src={image} alt=\"User post\" style={{ filter }} class=\"lazyload\" />\n    <div className=\"preview-image__overlay\">\n      <span className=\"preview-image__content\">\n        {likes > 0 && (\n          <div className=\"preview-image__icon\">\n            <Icon icon=\"heart\" className=\"icon--white\" />\n            <span>{likes}</span>\n          </div>\n        )}\n        <div className=\"preview-image__icon\">\n          <Icon icon=\"chatbubbles\" className=\"icon--white\" />\n          <span>{comments}</span>\n        </div>\n      </span>\n    </div>\n  </figure>\n);\n\nPreviewImage.propTypes = {\n  onClick: PropTypes.func,\n  image: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default PreviewImage;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport useSearchUsersDebounced from '../../hooks/useSearchUsersDebounced';\n\nimport Icon from '../Icon/Icon';\nimport PopupCard from '../PopupCard/PopupCard';\nimport UserCard from '../UserCard/UserCard';\nimport Divider from '../Divider/Divider';\nimport Loader from '../Loader/Loader';\n\nconst SearchBox = ({ style, setResult, onClick }) => {\n  const [query, setQuery] = useState('');\n  const {\n    handleSearchDebouncedRef,\n    result,\n    fetching,\n    setFetching,\n  } = useSearchUsersDebounced();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (result.length > 0 && setResult) {\n      setResult(result);\n    }\n  }, [result, setResult]);\n\n  return (\n    <Fragment>\n      <form\n        className=\"search-box\"\n        style={style}\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <input\n          onChange={(event) => {\n            handleSearchDebouncedRef(event.target.value);\n            setQuery(event.target.value);\n            event.target.value && setFetching(true);\n          }}\n          onClick={onClick}\n          value={query}\n          className=\"search-box__input\"\n          placeholder=\"Search\"\n        />\n        <span className=\"search-box__placeholder\">\n          <Icon icon=\"search\" className=\"icon--tiny color-grey\" />\n          {fetching && <Loader />}\n        </span>\n      </form>\n      {query && !fetching && !setResult && (\n        <PopupCard hide={() => setQuery('')}>\n          {result.length === 0 && !fetching ? (\n            <h3\n              style={{ padding: '1rem 0' }}\n              className=\"heading-3 color-grey font-medium text-center\"\n            >\n              No results found.\n            </h3>\n          ) : (\n            result &&\n            result.map((user, idx) => (\n              <Fragment key={idx}>\n                <UserCard\n                  avatar={user.avatar}\n                  username={user.username}\n                  subText={user.fullName}\n                  style={{ padding: '1.5rem 1.5rem' }}\n                  onClick={() => {\n                    history.push(`/${user.username}`);\n                    setQuery('');\n                  }}\n                />\n                {result.length !== idx + 1 && <Divider />}\n              </Fragment>\n            ))\n          )}\n        </PopupCard>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SearchBox;\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport Card from '../Card/Card';\n\nconst PopupCard = ({ children, hide, leftAlign }) => {\n  useEffect(() => {\n    if (hide) {\n      window.addEventListener('click', hide);\n    }\n\n    return () => {\n      window.removeEventListener('click', hide);\n    };\n  }, [hide]);\n\n  return (\n    <Card\n      className={classNames({\n        'popup-card': true,\n        'popup-card--left-align': leftAlign,\n      })}\n    >\n      <ul\n        style={{\n          listStyleType: 'none',\n          maxHeight: '30rem',\n          overflowY: 'auto',\n          backgroundColor: 'white',\n        }}\n        // Prevent hiding the component when clicking inside the component\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n      </ul>\n    </Card>\n  );\n};\n\nexport default PopupCard;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useTransition } from 'react-spring';\n\nimport {\n  selectNotifications,\n  selectNotificationState,\n} from '../../../redux/notification/notificationSelectors';\n\nimport Icon from '../../Icon/Icon';\nimport NotificationPopup from './NotificationPopup/NotificationPopup';\nimport PopupCard from '../../PopupCard/PopupCard';\nimport NotificationFeed from '../NotificationFeed/NotificationFeed';\n\nconst NotificationButton = ({\n  notifications,\n  notificationState,\n  mobile,\n  icon,\n}) => {\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showNotificationPopup, setShowNotificationPopup] = useState(false);\n  const [notificationPopupTimeout, setShowNotificationPopupTimeout] = useState(\n    null\n  );\n\n  useEffect(() => {\n    if (notificationPopupTimeout) {\n      clearTimeout(notificationPopupTimeout);\n    }\n    if (notificationState.unreadCount > 0) {\n      !showNotificationPopup && setShowNotificationPopup(true);\n      setShowNotificationPopupTimeout(\n        setTimeout(() => setShowNotificationPopup(false), 10000)\n      );\n    }\n  }, [notificationState.unreadCount]);\n\n  useEffect(() => {\n    if (showNotifications) {\n      clearTimeout(notificationPopupTimeout);\n      setShowNotificationPopup(false);\n    }\n  }, [showNotifications, notificationPopupTimeout]);\n\n  const transitions = useTransition(\n    notificationState.unreadCount > 0 && showNotificationPopup\n      ? { notifications }\n      : false,\n    null,\n    {\n      from: {\n        transform: 'scale(0) translateX(-50%)',\n        opacity: 0,\n      },\n      enter: {\n        transform: 'scale(1) translateX(-50%)',\n        opacity: 1,\n      },\n      leave: {\n        transform: 'scale(0) translateX(-50%)',\n        opacity: 0,\n      },\n      config: {\n        tension: 280,\n        friction: 20,\n      },\n    }\n  );\n\n  return (\n    <div style={{ position: 'relative', height: '100%' }}>\n      <button className=\"notification-button\">\n        <Icon\n          icon={icon ? icon : showNotifications ? 'heart' : 'heart-outline'}\n          className={notificationState.unreadCount > 0 ? 'icon--unread' : ''}\n          onClick={() =>\n            !mobile && setShowNotifications((previous) => !previous)\n          }\n          style={{ cursor: 'pointer' }}\n        />\n        {transitions.map(\n          ({ item, key, props }) =>\n            item && (\n              <NotificationPopup\n                style={props}\n                notifications={item.notifications}\n                key={key}\n              />\n            )\n        )}\n      </button>\n      {showNotifications && !mobile && (\n        <PopupCard hide={() => setShowNotifications(false)} leftAlign>\n          <NotificationFeed setShowNotifications={setShowNotifications} />\n        </PopupCard>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  notifications: selectNotifications,\n  notificationState: selectNotificationState,\n});\n\nexport default connect(mapStateToProps)(NotificationButton);\n","import React from 'react';\n\nconst SettingsForm = ({ onSubmit, children }) => (\n  <form className=\"settings-form\" onSubmit={onSubmit}>\n    {children}\n  </form>\n);\n\nexport default SettingsForm;\n"],"sourceRoot":""}