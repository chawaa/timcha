{"version":3,"sources":["pages/NotFoundPage/NotFoundPage.js","pages/ProfilePage/ProfilePageReducer.js","pages/ProfilePage/ProfileHeader.js","pages/ProfilePage/EmptyProfile.js","pages/ProfilePage/ProfilePage.js"],"names":["NotFoundPage","className","style","gridColumn","textAlign","padding","to","INITIAL_STATE","fetching","following","fetchingAdditionalPosts","error","data","posts","profileReducer","state","action","type","payload","postCount","postId","votes","JSON","parse","stringify","postIndex","findIndex","post","_id","postVotes","comments","decrementCount","filter","isFollowing","followers","Error","ProfileHeader","currentUser","showModal","token","follow","loading","user","avatar","username","bio","website","fullName","showUsersModal","options","title","cancelButton","children","UsersList","userId","followersCount","followingCount","ChangeAvatarButton","Avatar","imageSrc","Button","inverted","SettingsButton","onClick","warning","text","UnfollowPrompt","renderButton","cursor","whiteSpace","href","target","rel","EmptyProfile","currentUserProfile","Icon","icon","NewPostButton","width","TextButton","bold","blue","medium","pointerEvents","mapStateToProps","createStructuredSelector","selectCurrentUser","selectToken","connect","dispatch","props","component","hideModal","useParams","history","useHistory","useReducer","a","LoginCard","modal","justifySelf","followUser","response","operation","useScrollPositionThrottled","window","innerHeight","document","documentElement","scrollTop","offsetHeight","length","getPosts","useEffect","getUserProfile","profile","MobileHeader","backArrow","Loader","ProfileCategory","category","map","idx","PreviewImage","outerWidth","push","profileDispatch","image","likes","key","SkeletonLoader","animated"],"mappings":"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","file":"static/js/4.747f36a2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <main className=\"not-found-page grid\">\n    <div\n      style={{\n        gridColumn: 'center-start / center-end',\n        textAlign: 'center',\n        padding: '0 2rem',\n      }}\n    >\n      <h1 className=\"heading-1\">Sorry, this page isn't available.</h1>\n      <h3 className=\"heading-3 font-medium\">\n        The link you followed may be broken, or the page may have been removed.{' '}\n        <Link to=\"/\" className=\"link\">\n          Go back to Timcha.\n        </Link>\n      </h3>\n    </div>\n  </main>\n);\n\nexport default NotFoundPage;\n","export const INITIAL_STATE = {\n  fetching: true,\n  following: false,\n  fetchingAdditionalPosts: false,\n  error: false,\n  data: {\n    posts: [],\n  },\n};\n\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_PROFILE_START': {\n      return { ...state, fetching: true, error: false };\n    }\n    case 'FETCH_PROFILE_FAILURE': {\n      return { ...state, fetching: false, error: action.payload };\n    }\n    case 'FETCH_PROFILE_SUCCESS': {\n      return {\n        ...state,\n        fetching: false,\n        error: false,\n        data: {\n          ...action.payload,\n          posts: action.payload.posts ? action.payload.posts.data : [],\n          postCount: action.payload.posts ? action.payload.posts.postCount : 0,\n        },\n      };\n    }\n    case 'FETCH_ADDITIONAL_POSTS_START': {\n      return { ...state, fetchingAdditionalPosts: true };\n    }\n    case 'FETCH_ADDITIONAL_POSTS_FAILURE': {\n      return {\n        ...state,\n        fetchingAdditionalPosts: false,\n        error: action.payload,\n      };\n    }\n    case 'FETCH_ADDITIONAL_POSTS_SUCCESS': {\n      return { ...state, fetchingAdditionalPosts: false, error: false };\n    }\n    case 'SET_POST_VOTES_COUNT': {\n      const { postId, votes } = action.payload;\n      const posts = JSON.parse(JSON.stringify(state.data.posts));\n      const postIndex = posts.findIndex((post) => post._id === postId);\n      posts[postIndex].postVotes = votes;\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts,\n        },\n      };\n    }\n    case 'INCREMENT_POST_COMMENTS_COUNT': {\n      const postId = action.payload;\n      const posts = JSON.parse(JSON.stringify(state.data.posts));\n      const postIndex = posts.findIndex((post) => post._id === postId);\n      posts[postIndex].comments += 1;\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts,\n        },\n      };\n    }\n    case 'DECREMENT_POST_COMMENTS_COUNT': {\n      const { decrementCount, postId } = action.payload;\n      const posts = JSON.parse(JSON.stringify(state.data.posts));\n      const postIndex = posts.findIndex((post) => post._id === postId);\n      posts[postIndex].comments -= decrementCount;\n\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts,\n        },\n      };\n    }\n    case 'ADD_POSTS': {\n      const posts = action.payload;\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts: [...state.data.posts, ...posts],\n        },\n      };\n    }\n    case 'DELETE_POST': {\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          postCount: state.data.postCount - 1,\n          posts: state.data.posts.filter((post) => post._id !== action.payload),\n        },\n      };\n    }\n    case 'FOLLOW_USER_START': {\n      return { ...state, following: true };\n    }\n    case 'FOLLOW_USER_FAILURE': {\n      return { ...state, following: false, error: action.payload };\n    }\n    case 'FOLLOW_USER_SUCCESS': {\n      if (action.payload === 'follow') {\n        return {\n          ...state,\n          following: false,\n          data: {\n            ...state.data,\n            isFollowing: true,\n            followers: state.data.followers + 1,\n          },\n        };\n      }\n      return {\n        ...state,\n        following: false,\n        data: {\n          ...state.data,\n          isFollowing: false,\n          followers: state.data.followers - 1,\n        },\n      };\n    }\n    default: {\n      throw new Error(\n        `Invalid action type '${action.type}' passed to profileReducer.`\n      );\n    }\n  }\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ChangeAvatarButton from '../../components/ChangeAvatarButton/ChangeAvatarButton';\nimport Avatar from '../../components/Avatar/Avatar';\nimport UsersList from '../../components/UsersList/UsersList';\nimport UnfollowPrompt from '../../components/UnfollowPrompt/UnfollowPrompt';\nimport Button from '../../components/Button/Button';\nimport SettingsButton from '../../components/SettingsButton/SettingsButton';\n\nconst ProfileHeader = ({\n  currentUser,\n  data,\n  showModal,\n  token,\n  follow,\n  loading,\n}) => {\n  const { avatar, username, bio, website, fullName } = data.user;\n  const { following, followers, postCount } = data;\n\n  const showUsersModal = (followers, following) => {\n    token &&\n      showModal(\n        {\n          options: [],\n          title: followers ? 'Followers' : 'Following',\n          cancelButton: false,\n          children: (\n            <UsersList\n              userId={data.user._id}\n              token={token}\n              followersCount={followers}\n              followingCount={following}\n              following={following}\n            />\n          ),\n        },\n        'OptionsDialog/OptionsDialog'\n      );\n  };\n\n  const renderButton = () => {\n    if (currentUser) {\n      if (currentUser.username === username) {\n        return (\n          <Fragment>\n            <Link to=\"/settings/edit\">\n              <Button inverted>Edit Profile</Button>\n            </Link>\n            <SettingsButton />\n          </Fragment>\n        );\n      } else if (data.isFollowing) {\n        return (\n          <Button\n            loading={loading}\n            onClick={() =>\n              showModal(\n                {\n                  options: [\n                    {\n                      warning: true,\n                      text: 'Unfollow',\n                      onClick: () => follow(),\n                    },\n                  ],\n                  children: (\n                    <UnfollowPrompt\n                      avatar={data.user.avatar}\n                      username={data.user.username}\n                    />\n                  ),\n                },\n                'OptionsDialog/OptionsDialog'\n              )\n            }\n            inverted\n          >\n            Following\n          </Button>\n        );\n      }\n    }\n    return (\n      <Button loading={loading} onClick={() => follow(data.user._id, token)}>\n        Follow\n      </Button>\n    );\n  };\n\n  return (\n    <header className=\"profile-header\">\n      {currentUser && currentUser.username === username ? (\n        <ChangeAvatarButton>\n          <Avatar\n            className=\"profile-header__avatar\"\n            imageSrc={currentUser.avatar}\n          />\n        </ChangeAvatarButton>\n      ) : (\n        <Avatar className=\"profile-header__avatar\" imageSrc={avatar} />\n      )}\n\n      <div className=\"profile-header__info\">\n        <div className=\"profile-buttons\">\n          <h1 className=\"heading-1 font-thin\">{username}</h1>\n          {renderButton()}\n        </div>\n\n        <div className=\"profile-stats\">\n          <p className=\"heading-3\">\n            <b>{postCount}</b> {postCount === 1 ? 'post' : 'posts'}\n          </p>\n          <p\n            onClick={() => showUsersModal(followers)}\n            style={{ cursor: 'pointer' }}\n            className=\"heading-3\"\n          >\n            <b>{followers}</b>{' '}\n            {followers > 1 || followers === 0 ? 'followers' : 'follower'}\n          </p>\n          <p\n            onClick={() => showUsersModal(null, following)}\n            style={{ cursor: 'pointer' }}\n            className=\"heading-3\"\n          >\n            <b>{following}</b> following\n          </p>\n        </div>\n\n        <div>\n          {fullName && (\n            <h3 className=\"heading-3\">\n              <b>{fullName}</b>\n            </h3>\n          )}\n          <p className=\"heading-3\" style={{ whiteSpace: 'pre-wrap' }}>\n            {bio}\n          </p>\n          {website && (\n            <a\n              href={website}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"heading-3 link font-bold\"\n            >\n              {website}\n            </a>\n          )}\n        </div>\n      </div>\n\n      <div className=\"profile-header__mobile-user-details\">\n        <div>\n          {fullName && (\n            <p className=\"heading-3\">\n              <b>{fullName}</b>\n            </p>\n          )}\n          <h3\n            className=\"heading-3 font-medium\"\n            style={{ whiteSpace: 'pre-wrap' }}\n          >\n            {bio}\n          </h3>\n          {website && (\n            <a\n              href={website}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"heading-3 link font-bold\"\n            >\n              {website}\n            </a>\n          )}\n        </div>\n\n        <div className=\"profile-stats\">\n          <h3 className=\"heading-3\">\n            <b>{postCount}</b>\n            <span className=\"font-medium color-grey\">\n              {postCount === 1 ? 'post' : 'posts'}\n            </span>\n          </h3>\n          <h3\n            onClick={() => showUsersModal(followers)}\n            style={{ cursor: 'pointer' }}\n            className=\"heading-3\"\n          >\n            <b>{followers}</b>{' '}\n            <span className=\"font-medium color-grey\">\n              {followers > 1 || followers === 0 ? 'followers' : 'follower'}\n            </span>\n          </h3>\n          <h3\n            onClick={() => showUsersModal(null, following)}\n            style={{ cursor: 'pointer' }}\n            className=\"heading-3\"\n          >\n            <b>{following}</b>\n            <span className=\"font-medium color-grey\">following</span>\n          </h3>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default ProfileHeader;\n","import React, { Fragment } from 'react';\n\nimport Icon from '../../components/Icon/Icon';\nimport NewPostButton from '../../components/NewPost/NewPostButton/NewPostButton';\nimport TextButton from '../../components/Button/TextButton/TextButton';\n\nconst EmptyProfile = ({ currentUserProfile, username }) => (\n  <div className=\"profile-empty\">\n    <Icon icon=\"camera-outline\" className=\"icon--larger\" />\n    {currentUserProfile ? (\n      <Fragment>\n        <h1 className=\"heading-1 font-thin\">Share Photos</h1>\n        <h3 className=\"heading-3 font-medium\">\n          When you share photos, they will appear on your profile.\n        </h3>\n        <NewPostButton style={{ width: 'auto' }}>\n          <TextButton bold blue medium style={{ pointerEvents: 'none' }}>\n            Share your first photo\n          </TextButton>\n        </NewPostButton>\n      </Fragment>\n    ) : (\n      <Fragment>\n        <h1 className=\"heading-1 font-thin\">No Posts Yet</h1>\n        <h3 className=\"heading-3 font-medium\">\n          When {username} posts, you'll see their photos here.\n        </h3>\n      </Fragment>\n    )}\n  </div>\n);\n\nexport default EmptyProfile;\n","import React, { useReducer, useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { selectCurrentUser, selectToken } from '../../redux/user/userSelectors';\n\nimport { INITIAL_STATE, profileReducer } from './ProfilePageReducer';\nimport { showModal, hideModal } from '../../redux/modal/modalActions';\n\nimport { getUserProfile, followUser } from '../../services/profileService';\nimport { getPosts } from '../../services/postService';\n\nimport useScrollPositionThrottled from '../../hooks/useScrollPositionThrottled';\n\nimport ProfileCategory from '../../components/ProfileCategory/ProfileCategory';\nimport PreviewImage from '../../components/PreviewImage/PreviewImage';\nimport Loader from '../../components/Loader/Loader';\nimport SkeletonLoader from '../../components/SkeletonLoader/SkeletonLoader';\nimport MobileHeader from '../../components/Header/MobileHeader/MobileHeader';\nimport SettingsButton from '../../components/SettingsButton/SettingsButton';\nimport LoginCard from '../../components/LoginCard/LoginCard';\nimport NotFoundPage from '../../pages/NotFoundPage/NotFoundPage';\nimport ProfileHeader from './ProfileHeader';\nimport EmptyProfile from './EmptyProfile';\n\nconst ProfilePage = ({ currentUser, token, showModal, hideModal }) => {\n  const { username } = useParams();\n  const history = useHistory();\n  const [state, dispatch] = useReducer(profileReducer, INITIAL_STATE);\n\n  const follow = async () => {\n    if (!currentUser) {\n      return showModal(\n        {\n          children: <LoginCard onClick={() => hideModal('Card/Card')} modal />,\n          style: {\n            gridColumn: 'center-start / center-end',\n            justifySelf: 'center',\n            width: '40rem',\n          },\n        },\n        'Card/Card'\n      );\n    }\n    try {\n      dispatch({ type: 'FOLLOW_USER_START' });\n      const response = await followUser(state.data.user._id, token);\n      dispatch({\n        type: 'FOLLOW_USER_SUCCESS',\n        payload: response.operation,\n      });\n    } catch (err) {\n      dispatch({\n        type: 'FOLLOW_USER_FAILURE',\n        payload: err,\n      });\n    }\n  };\n\n  useScrollPositionThrottled(async () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight &&\n      state.data.posts.length < state.data.postCount &&\n      !state.fetchingAdditionalPosts\n    ) {\n      try {\n        dispatch({ type: 'FETCH_ADDITIONAL_POSTS_START' });\n        const posts = await getPosts(username, state.data.posts.length);\n        dispatch({ type: 'FETCH_ADDITIONAL_POSTS_SUCCESS' });\n        dispatch({ type: 'ADD_POSTS', payload: posts });\n      } catch (err) {\n        dispatch({ type: 'FETCH_ADDITIONAL_POSTS_FAILURE', payload: err });\n      }\n    }\n  }, null);\n\n  useEffect(() => {\n    document.title = `@${username} • Timcha photos`;\n    (async function () {\n      try {\n        dispatch({ type: 'FETCH_PROFILE_START' });\n        const profile = await getUserProfile(username, token);\n        dispatch({ type: 'FETCH_PROFILE_SUCCESS', payload: profile });\n      } catch (err) {\n        dispatch({ type: 'FETCH_PROFILE_FAILURE', payload: err });\n      }\n    })();\n  }, [username, token]);\n\n  const handleClick = (postId) => {\n    if (window.outerWidth <= 600) {\n      history.push(`/post/${postId}`);\n    } else {\n      showModal(\n        {\n          postId,\n          avatar: state.data.avatar,\n          profileDispatch: dispatch,\n        },\n        'PostDialog/PostDialog'\n      );\n    }\n  };\n\n  const renderProfile = () => {\n    if (state.fetching) {\n      return <Loader />;\n    }\n    if (!state.fetching && state.data) {\n      return (\n        <Fragment>\n          <ProfileHeader\n            currentUser={currentUser}\n            data={state.data}\n            showModal={showModal}\n            token={token}\n            follow={follow}\n            loading={state.following}\n          />\n          <ProfileCategory category=\"POSTS\" icon=\"apps-outline\" />\n          {state.data.posts.length > 0 ? (\n            <div className=\"profile-images\">\n              {state.data.posts.map((post, idx) => {\n                return (\n                  <PreviewImage\n                    onClick={() => handleClick(post._id)}\n                    image={post.image}\n                    likes={post.postVotes}\n                    comments={post.comments}\n                    filter={post.filter}\n                    key={idx}\n                  />\n                );\n              })}\n              {state.fetchingAdditionalPosts && (\n                <Fragment>\n                  <div>\n                    <SkeletonLoader animated />\n                  </div>\n                  <div>\n                    <SkeletonLoader animated />\n                  </div>\n                  <div>\n                    <SkeletonLoader animated />\n                  </div>\n                </Fragment>\n              )}\n            </div>\n          ) : (\n            <EmptyProfile\n              currentUserProfile={\n                currentUser && currentUser.username === username\n              }\n              username={username}\n            />\n          )}\n        </Fragment>\n      );\n    }\n  };\n\n  return state.error ? (\n    <NotFoundPage />\n  ) : (\n    <Fragment>\n      {currentUser && currentUser.username === username ? (\n        <MobileHeader>\n          <SettingsButton />\n          <h3 className=\"heading-3\">{username}</h3>\n          <div></div>\n        </MobileHeader>\n      ) : (\n        <MobileHeader backArrow>\n          <h3 className=\"heading-3\">{username}</h3>\n          <div></div>\n        </MobileHeader>\n      )}\n      <main className=\"profile-page grid\">{renderProfile()}</main>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  token: selectToken,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (props, component) => dispatch(showModal(props, component)),\n  hideModal: (component) => dispatch(hideModal(component)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n"],"sourceRoot":""}